// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1.3 (win64) Build 2644227 Wed Sep  4 09:45:24 MDT 2019
// Date        : Tue Apr 20 15:00:00 2021
// Host        : LAPTOP-D823LPN1 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ axi_chip2chip_partner_sim_netlist.v
// Design      : axi_chip2chip_partner
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7s100fgga676-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "axi_chip2chip_partner,axi_chip2chip_v5_0_6,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_6,Vivado 2019.1.3" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (m_aclk,
    m_aresetn,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    idelay_ref_clk,
    axi_c2c_selio_tx_data_out,
    axi_c2c_selio_rx_data_in,
    axi_c2c_selio_tx_diff_clk_out_p,
    axi_c2c_selio_tx_diff_clk_out_n,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aclk, ASSOCIATED_BUSIF m_axi, ASSOCIATED_RESET m_aresetn, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input m_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWID" *) output [11:0]m_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWADDR" *) output [31:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWLEN" *) output [7:0]m_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWSIZE" *) output [2:0]m_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWBURST" *) output [1:0]m_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWREADY" *) input m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WDATA" *) output [31:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WSTRB" *) output [3:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WREADY" *) input m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BID" *) input [11:0]m_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BRESP" *) input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BREADY" *) output m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARID" *) output [11:0]m_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARADDR" *) output [31:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARLEN" *) output [7:0]m_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARSIZE" *) output [2:0]m_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARBURST" *) output [1:0]m_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARREADY" *) input m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RID" *) input [11:0]m_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RDATA" *) input [31:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RRESP" *) input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 100000000, ID_WIDTH 12, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 idelay_ref_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME idelay_ref_clk, FREQ_HZ 200000000, PHASE 0.000, INSERT_VIP 0" *) input idelay_ref_clk;
  output [16:0]axi_c2c_selio_tx_data_out;
  input [16:0]axi_c2c_selio_rx_data_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_tx_diff_clk_out_p CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_selio_tx_diff_clk_out_p, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) output axi_c2c_selio_tx_diff_clk_out_p;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_tx_diff_clk_out_n CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_selio_tx_diff_clk_out_n, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) output axi_c2c_selio_tx_diff_clk_out_n;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_rx_diff_clk_in_p CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_selio_rx_diff_clk_in_p, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input axi_c2c_selio_rx_diff_clk_in_p;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_selio_rx_diff_clk_in_n CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_selio_rx_diff_clk_in_n, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input axi_c2c_selio_rx_diff_clk_in_n;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite_aclk, ASSOCIATED_BUSIF s_axi_lite, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input s_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWADDR" *) input [31:0]s_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWPROT" *) input [1:0]s_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWVALID" *) input s_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWREADY" *) output s_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WDATA" *) input [31:0]s_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WSTRB" *) input [3:0]s_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WVALID" *) input s_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WREADY" *) output s_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BRESP" *) output [1:0]s_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BVALID" *) output s_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BREADY" *) input s_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARADDR" *) input [31:0]s_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARPROT" *) input [1:0]s_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARVALID" *) input s_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARREADY" *) output s_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RDATA" *) output [31:0]s_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RRESP" *) output [1:0]s_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RVALID" *) output s_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_lite_rready;

  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  (* IBUF_LOW_PWR *) wire [16:0]axi_c2c_selio_rx_data_in;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire axi_c2c_selio_rx_diff_clk_in_n;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire axi_c2c_selio_rx_diff_clk_in_p;
  (* DRIVE = "12" *) (* SLEW = "SLOW" *) wire [16:0]axi_c2c_selio_tx_data_out;
  (* SLEW = "SLOW" *) wire axi_c2c_selio_tx_diff_clk_out_n;
  (* SLEW = "SLOW" *) wire axi_c2c_selio_tx_diff_clk_out_p;
  wire idelay_ref_clk;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [11:0]m_axi_arid;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [11:0]m_axi_awid;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire [11:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [11:0]m_axi_rid;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire NLW_inst_aurora_do_cc_UNCONNECTED;
  wire NLW_inst_aurora_pma_init_out_UNCONNECTED;
  wire NLW_inst_aurora_reset_pb_UNCONNECTED;
  wire NLW_inst_axi_c2c_aurora_tx_tvalid_UNCONNECTED;
  wire NLW_inst_axi_c2c_config_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_link_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire [4095:0]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED;
  wire [16:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [16:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [11:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [11:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;

  (* ADDR_MUX_RATIO = "2" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* AFIFO_DATA_SIZE = "56" *) 
  (* AFIFO_DATA_SIZE_M2 = "0" *) 
  (* AFIFO_DATA_SIZE_M3 = "2" *) 
  (* AFIFO_DATA_SIZE_M4 = "0" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "56" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "14" *) 
  (* BFIFO_WIDTH = "14" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "4096" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "12" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "1" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "1" *) 
  (* C_INTERFACE_TYPE = "1" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "0" *) 
  (* C_NUM_OF_IO = "36" *) 
  (* C_PHY_SELECT = "0" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "1" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "17" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "1" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "2" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "2" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "34" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "47" *) 
  (* RFIFO_DATA_SIZE_M2 = "1" *) 
  (* RFIFO_DATA_SIZE_M3 = "2" *) 
  (* RFIFO_DATA_SIZE_M4 = "3" *) 
  (* RFIFO_TIE_WIDTH = "2" *) 
  (* RFIFO_WIDTH = "48" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6 inst
       (.aurora_do_cc(NLW_inst_aurora_do_cc_UNCONNECTED),
        .aurora_init_clk(1'b0),
        .aurora_mmcm_not_locked(1'b0),
        .aurora_pma_init_in(1'b0),
        .aurora_pma_init_out(NLW_inst_aurora_pma_init_out_UNCONNECTED),
        .aurora_reset_pb(NLW_inst_aurora_reset_pb_UNCONNECTED),
        .axi_c2c_aurora_channel_up(1'b0),
        .axi_c2c_aurora_rx_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_aurora_rx_tvalid(1'b0),
        .axi_c2c_aurora_tx_tdata(NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED[4095:0]),
        .axi_c2c_aurora_tx_tready(1'b0),
        .axi_c2c_aurora_tx_tvalid(NLW_inst_axi_c2c_aurora_tx_tvalid_UNCONNECTED),
        .axi_c2c_config_error_out(NLW_inst_axi_c2c_config_error_out_UNCONNECTED),
        .axi_c2c_link_error_out(NLW_inst_axi_c2c_link_error_out_UNCONNECTED),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(1'b0),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_c2c_s2m_intr_out(NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .axi_c2c_selio_rx_diff_clk_in_n(axi_c2c_selio_rx_diff_clk_in_n),
        .axi_c2c_selio_rx_diff_clk_in_p(axi_c2c_selio_rx_diff_clk_in_p),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .axi_c2c_selio_tx_diff_clk_out_n(axi_c2c_selio_tx_diff_clk_out_n),
        .axi_c2c_selio_tx_diff_clk_out_p(axi_c2c_selio_tx_diff_clk_out_p),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[16:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[16:0]),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aclk(m_aclk),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(m_aresetn),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arid(m_axi_arid),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awid(m_axi_awid),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(m_axi_bid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rid(m_axi_rid),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_aclk(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[11:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arready(s_axi_lite_arready),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_bvalid(s_axi_lite_bvalid),
        .s_axi_lite_rdata(s_axi_lite_rdata),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_rresp(s_axi_lite_rresp),
        .s_axi_lite_rvalid(s_axi_lite_rvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wready(s_axi_lite_wready),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[11:0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn
   (S,
    DI,
    count_value_i,
    Q,
    \grdc.rd_data_count_i_reg[3] ,
    ram_empty_i,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[1]_1 ,
    rd_en,
    rd_clk);
  output [1:0]S;
  output [0:0]DI;
  output [1:0]count_value_i;
  input [1:0]Q;
  input [1:0]\grdc.rd_data_count_i_reg[3] ;
  input ram_empty_i;
  input \count_value_i_reg[1]_0 ;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire [1:0]\grdc.rd_data_count_i_reg[3] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT6 #(
    .INIT(64'h0069006A00A50005)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(rd_en),
        .I2(ram_empty_i),
        .I3(\count_value_i_reg[1]_0 ),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(\count_value_i_reg[1]_1 [1]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0A0A0A02)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_0 ),
        .I3(\count_value_i_reg[1]_1 [0]),
        .I4(\count_value_i_reg[1]_1 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFD5BFF5402A400A)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[3]_i_4 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[3] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[3]_i_7 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[3] [1]),
        .I3(count_value_i[1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[3]_i_8 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[3] [0]),
        .I2(Q[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_20
   (src_in_bin,
    count_value_i,
    S,
    DI,
    Q,
    \grdc.rd_data_count_i_reg[3] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_1 ,
    rd_clk);
  output [0:0]src_in_bin;
  output [1:0]count_value_i;
  output [1:0]S;
  output [0:0]DI;
  input [1:0]Q;
  input [1:0]\grdc.rd_data_count_i_reg[3] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_1 ;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[0]_1 ;
  wire [1:0]\grdc.rd_data_count_i_reg[3] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(count_value_i[1]),
        .I3(Q[1]),
        .O(src_in_bin));
  (* HLUTNM = "lutpair4" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[3]_i_4 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[3]_i_7 
       (.I0(DI),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[3] [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair4" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[3]_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[3] [0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_28
   (src_in_bin,
    count_value_i,
    S,
    DI,
    Q,
    \grdc.rd_data_count_i_reg[3] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_1 ,
    rd_clk);
  output [0:0]src_in_bin;
  output [1:0]count_value_i;
  output [1:0]S;
  output [0:0]DI;
  input [1:0]Q;
  input [1:0]\grdc.rd_data_count_i_reg[3] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_1 ;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[0]_1 ;
  wire [1:0]\grdc.rd_data_count_i_reg[3] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(count_value_i[1]),
        .I3(Q[1]),
        .O(src_in_bin));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[3]_i_4 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[3]_i_7 
       (.I0(DI),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[3] [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[3]_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[3] [0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40
   (src_in_bin,
    count_value_i,
    S,
    DI,
    Q,
    \grdc.rd_data_count_i_reg[3] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_1 ,
    rd_clk);
  output [0:0]src_in_bin;
  output [1:0]count_value_i;
  output [1:0]S;
  output [0:0]DI;
  input [1:0]Q;
  input [1:0]\grdc.rd_data_count_i_reg[3] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_1 ;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[0]_1 ;
  wire [1:0]\grdc.rd_data_count_i_reg[3] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(count_value_i[1]),
        .I3(Q[1]),
        .O(src_in_bin));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[3]_i_4 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[3]_i_7 
       (.I0(DI),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[3] [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[3]_i_8 
       (.I0(count_value_i[0]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[3] [0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50
   (D,
    \count_value_i_reg[1]_0 ,
    count_value_i,
    src_in_bin,
    Q,
    \grdc.rd_data_count_i_reg[2] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_1 ,
    rd_clk);
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [1:0]count_value_i;
  output [0:0]src_in_bin;
  input [2:0]Q;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [2:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[1]_0 ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[2] [0]),
        .I2(count_value_i[1]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[2] [2]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .I4(count_value_i[1]),
        .I5(Q[1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(count_value_i[1]),
        .I1(\grdc.rd_data_count_i_reg[2] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2] [0]),
        .I4(count_value_i[0]),
        .I5(Q[0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58
   (D,
    \count_value_i_reg[1]_0 ,
    count_value_i,
    src_in_bin,
    Q,
    \grdc.rd_data_count_i_reg[2] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_1 ,
    rd_clk);
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [1:0]count_value_i;
  output [0:0]src_in_bin;
  input [2:0]Q;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [2:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[1]_0 ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT6 #(
    .INIT(64'h000000005A88A655)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A8AA)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[0]_1 ),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFFFF755500008AA)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[2] [0]),
        .I2(count_value_i[1]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[2] [2]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .I4(count_value_i[1]),
        .I5(Q[1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(count_value_i[1]),
        .I1(\grdc.rd_data_count_i_reg[2] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2] [0]),
        .I4(count_value_i[0]),
        .I5(Q[0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9
   (S,
    DI,
    count_value_i,
    Q,
    \grdc.rd_data_count_i_reg[3] ,
    ram_empty_i,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[1]_1 ,
    rd_en,
    rd_clk);
  output [1:0]S;
  output [0:0]DI;
  output [1:0]count_value_i;
  input [1:0]Q;
  input [1:0]\grdc.rd_data_count_i_reg[3] ;
  input ram_empty_i;
  input \count_value_i_reg[1]_0 ;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[1]_i_2_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire [1:0]\grdc.rd_data_count_i_reg[3] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT6 #(
    .INIT(64'h0069006A00A50005)) 
    \count_value_i[0]_i_1 
       (.I0(count_value_i[0]),
        .I1(rd_en),
        .I2(ram_empty_i),
        .I3(\count_value_i_reg[1]_0 ),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(\count_value_i_reg[1]_1 [1]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0A0A0A02)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i[1]_i_2_n_0 ),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_0 ),
        .I3(\count_value_i_reg[1]_1 [0]),
        .I4(\count_value_i_reg[1]_1 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFD5BFF5402A400A)) 
    \count_value_i[1]_i_2 
       (.I0(count_value_i[0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(count_value_i[1]),
        .O(\count_value_i[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(count_value_i[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(count_value_i[1]),
        .R(1'b0));
  (* HLUTNM = "lutpair3" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[3]_i_4 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[3] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[3]_i_7 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[3] [1]),
        .I3(count_value_i[1]),
        .O(S[1]));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[3]_i_8 
       (.I0(count_value_i[0]),
        .I1(\grdc.rd_data_count_i_reg[3] [0]),
        .I2(Q[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    leaving_empty,
    D,
    \count_value_i_reg[2]_0 ,
    \count_value_i_reg[6]_0 ,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    count_value_i,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    S,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output leaving_empty;
  output [7:0]D;
  output [0:0]\count_value_i_reg[2]_0 ;
  output [3:0]\count_value_i_reg[6]_0 ;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]count_value_i;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input [3:0]S;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [3:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[2]_0 ;
  wire [3:0]\count_value_i_reg[6]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire leaving_empty;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [3:3]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(src_in_bin[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 }),
        .CYINIT(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 }),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 }),
        .O(D[7:4]),
        .S(S));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[3]_i_3 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[3]_i_5 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(\count_value_i_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[3]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_2 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_3 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_4 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_5 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  CARRY4 \gwdc.wr_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[3]_i_2_n_0 ,\gwdc.wr_data_count_i[3]_i_3_n_0 ,\gwdc.wr_data_count_i[3]_i_4_n_0 ,\gwdc.wr_data_count_i[3]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_29
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    leaving_empty,
    D,
    \count_value_i_reg[2]_0 ,
    \count_value_i_reg[6]_0 ,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    count_value_i,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    S,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output leaving_empty;
  output [7:0]D;
  output [0:0]\count_value_i_reg[2]_0 ;
  output [3:0]\count_value_i_reg[6]_0 ;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]count_value_i;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input [3:0]S;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [3:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[2]_0 ;
  wire [3:0]\count_value_i_reg[6]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire leaving_empty;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [3:3]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(src_in_bin[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 }),
        .CYINIT(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 }),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 }),
        .O(D[7:4]),
        .S(S));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[3]_i_3 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[3]_i_5 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(\count_value_i_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[3]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_2 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_3 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_4 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_5 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  CARRY4 \gwdc.wr_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[3]_i_2_n_0 ,\gwdc.wr_data_count_i[3]_i_3_n_0 ,\gwdc.wr_data_count_i[3]_i_4_n_0 ,\gwdc.wr_data_count_i[3]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    leaving_empty,
    D,
    \count_value_i_reg[2]_0 ,
    \count_value_i_reg[6]_0 ,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    count_value_i,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    S,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output leaving_empty;
  output [7:0]D;
  output [0:0]\count_value_i_reg[2]_0 ;
  output [3:0]\count_value_i_reg[6]_0 ;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]count_value_i;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input [3:0]S;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [3:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[2]_0 ;
  wire [3:0]\count_value_i_reg[6]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire leaving_empty;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [3:3]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(src_in_bin[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 }),
        .CYINIT(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 }),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 }),
        .O(D[7:4]),
        .S(S));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[3]_i_3 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[3]_i_5 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(\count_value_i_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[3]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_2 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_3 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_4 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_5 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  CARRY4 \gwdc.wr_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[3]_i_2_n_0 ,\gwdc.wr_data_count_i[3]_i_3_n_0 ,\gwdc.wr_data_count_i[3]_i_4_n_0 ,\gwdc.wr_data_count_i[3]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1
   (ram_empty_i0,
    E,
    Q,
    rd_en,
    ram_empty_i,
    leaving_empty,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input leaving_empty;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(E),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_23
   (Q,
    D,
    d_out_reg,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    S,
    going_full0,
    rst,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  output d_out_reg;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input [3:0]S;
  input going_full0;
  input rst;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire going_full0;
  wire leaving_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(wr_pntr_plus1_pf_carry),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED [0]}),
        .S(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,Q[6:4]}),
        .O(D[6:3]),
        .S(S));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_30
   (ram_empty_i0,
    E,
    Q,
    rd_en,
    ram_empty_i,
    leaving_empty,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input leaving_empty;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(E),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_33
   (Q,
    D,
    d_out_reg,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    S,
    going_full0,
    rst,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  output d_out_reg;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input [3:0]S;
  input going_full0;
  input rst;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire going_full0;
  wire leaving_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(wr_pntr_plus1_pf_carry),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED [0]}),
        .S(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,Q[6:4]}),
        .O(D[6:3]),
        .S(S));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42
   (ram_empty_i0,
    E,
    Q,
    rd_en,
    ram_empty_i,
    leaving_empty,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input leaving_empty;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(E),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45
   (Q,
    D,
    d_out_reg,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    S,
    going_full0,
    rst,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  output d_out_reg;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input [3:0]S;
  input going_full0;
  input rst;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire [3:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire going_full0;
  wire leaving_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I5(Q[0]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(wr_pntr_plus1_pf_carry),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED [0]}),
        .S(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [3],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,Q[6:4]}),
        .O(D[6:3]),
        .S(S));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2
   (going_full0,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    Q,
    wr_clk);
  output going_full0;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]Q;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire going_full0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(Q[7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(Q[6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_34
   (going_full0,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    Q,
    wr_clk);
  output going_full0;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]Q;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire going_full0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(Q[7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(Q[6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46
   (going_full0,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    Q,
    wr_clk);
  output going_full0;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]Q;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire going_full0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(Q[7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(Q[6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3
   (Q,
    E,
    ram_empty_i0,
    p_1_in,
    DI,
    D,
    src_in_bin,
    \count_value_i_reg[2]_0 ,
    \count_value_i_reg[6]_0 ,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[9]_0 ,
    ram_empty_i,
    rd_en,
    CO,
    \gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ,
    \grdc.rd_data_count_i_reg[9] ,
    count_value_i,
    S,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    \count_value_i_reg[9]_1 ,
    rd_clk);
  output [9:0]Q;
  output [0:0]E;
  output ram_empty_i0;
  output p_1_in;
  output [0:0]DI;
  output [8:0]D;
  output [9:0]src_in_bin;
  output [0:0]\count_value_i_reg[2]_0 ;
  output [3:0]\count_value_i_reg[6]_0 ;
  output [0:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[9]_0 ;
  input ram_empty_i;
  input rd_en;
  input [0:0]CO;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ;
  input [7:0]\grdc.rd_data_count_i_reg[9] ;
  input [1:0]count_value_i;
  input [0:0]S;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input \count_value_i_reg[9]_1 ;
  input rd_clk;

  wire [0:0]CO;
  wire [8:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire [9:0]Q;
  wire [0:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [0:0]\count_value_i_reg[2]_0 ;
  wire [3:0]\count_value_i_reg[6]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire [1:0]\count_value_i_reg[9]_0 ;
  wire \count_value_i_reg[9]_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_2 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_2 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_2_n_2 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_2_n_3 ;
  wire [7:0]\grdc.rd_data_count_i_reg[9] ;
  wire leaving_empty;
  wire p_1_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire [9:0]src_in_bin;
  wire [3:1]\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT4 #(
    .INIT(16'h5559)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[9]_0 [1]),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h666A6666)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[9]_0 [0]),
        .I4(\count_value_i_reg[9]_0 [1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(p_1_in),
        .I3(Q[0]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(p_1_in),
        .I4(Q[1]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(p_1_in),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hF1F0)) 
    \count_value_i[4]_i_2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[9]_0 [0]),
        .I2(ram_empty_i),
        .I3(\count_value_i_reg[9]_0 [1]),
        .O(p_1_in));
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(Q[3]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFF57FF55FFFFFFFF)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[9]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[5]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[8]_i_1__3 
       (.I0(Q[8]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[6]),
        .I4(Q[7]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[9]),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[5]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(p_1_in),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_1 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.CI(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ),
        .CO({\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_CO_UNCONNECTED [3:1],\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_O_UNCONNECTED [3:2],src_in_bin[9:8]}),
        .S({1'b0,1'b0,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.CI(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ),
        .CO({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_1 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_2 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(src_in_bin[7:4]),
        .S({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.CI(1'b0),
        .CO({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_1 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_2 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O(src_in_bin[3:0]),
        .S({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[9]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[8]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[7]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[5]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[4]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hCCCE3331)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9 
       (.I0(\count_value_i_reg[9]_0 [1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 }),
        .CYINIT(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [0]),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] }),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 }),
        .O(D[7:4]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [3:1],D[8]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] }));
  LUT6 #(
    .INIT(64'hAAFEAAFFAAAAAAAA)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(leaving_empty),
        .I1(rd_en),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[9]_0 [1]),
        .I5(CO),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [8]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [6]),
        .I4(Q[7]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [7]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [1]),
        .I2(Q[2]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [2]),
        .I4(Q[0]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [0]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  CARRY4 \gen_pf_ic_rc.ram_empty_i_reg_i_2 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_CO_UNCONNECTED [3],leaving_empty,\gen_pf_ic_rc.ram_empty_i_reg_i_2_n_2 ,\gen_pf_ic_rc.ram_empty_i_reg_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ,S,\gen_pf_ic_rc.ram_empty_i_i_6_n_0 }));
  LUT4 #(
    .INIT(16'h3331)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[9]_0 [1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[3]_i_3 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[9] [0]),
        .I2(count_value_i[1]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[3]_i_5 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9] [2]),
        .O(\count_value_i_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9] [5]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9] [4]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9] [3]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10
   (Q,
    E,
    ram_empty_i0,
    p_1_in,
    DI,
    D,
    src_in_bin,
    \count_value_i_reg[2]_0 ,
    \count_value_i_reg[6]_0 ,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[9]_0 ,
    ram_empty_i,
    rd_en,
    CO,
    \gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ,
    \grdc.rd_data_count_i_reg[9] ,
    count_value_i,
    S,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    \count_value_i_reg[9]_1 ,
    rd_clk);
  output [9:0]Q;
  output [0:0]E;
  output ram_empty_i0;
  output p_1_in;
  output [0:0]DI;
  output [8:0]D;
  output [9:0]src_in_bin;
  output [0:0]\count_value_i_reg[2]_0 ;
  output [3:0]\count_value_i_reg[6]_0 ;
  output [0:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[9]_0 ;
  input ram_empty_i;
  input rd_en;
  input [0:0]CO;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ;
  input [7:0]\grdc.rd_data_count_i_reg[9] ;
  input [1:0]count_value_i;
  input [0:0]S;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input \count_value_i_reg[9]_1 ;
  input rd_clk;

  wire [0:0]CO;
  wire [8:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire [9:0]Q;
  wire [0:0]S;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [0:0]\count_value_i_reg[2]_0 ;
  wire [3:0]\count_value_i_reg[6]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire [1:0]\count_value_i_reg[9]_0 ;
  wire \count_value_i_reg[9]_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_2 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_1 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_2 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_3 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_2_n_2 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_2_n_3 ;
  wire [7:0]\grdc.rd_data_count_i_reg[9] ;
  wire leaving_empty;
  wire p_1_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire [9:0]src_in_bin;
  wire [3:1]\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h5559)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[9]_0 [1]),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h666A6666)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[9]_0 [0]),
        .I4(\count_value_i_reg[9]_0 [1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(p_1_in),
        .I3(Q[0]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(p_1_in),
        .I4(Q[1]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(p_1_in),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hF1F0)) 
    \count_value_i[4]_i_2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[9]_0 [0]),
        .I2(ram_empty_i),
        .I3(\count_value_i_reg[9]_0 [1]),
        .O(p_1_in));
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(Q[3]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFF57FF55FFFFFFFF)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[9]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[5]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[8]_i_1__3 
       (.I0(Q[8]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[6]),
        .I4(Q[7]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[9]),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[5]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(p_1_in),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_1 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.CI(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ),
        .CO({\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_CO_UNCONNECTED [3:1],\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1_O_UNCONNECTED [3:2],src_in_bin[9:8]}),
        .S({1'b0,1'b0,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.CI(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ),
        .CO({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_1 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_2 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(src_in_bin[7:4]),
        .S({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.CI(1'b0),
        .CO({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_1 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_2 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O(src_in_bin[3:0]),
        .S({\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ,\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_13_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[9]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[8]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[7]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[5]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[4]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hCCCE3331)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9 
       (.I0(\count_value_i_reg[9]_0 [1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_3 }),
        .CYINIT(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [0]),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] }),
        .O(D[3:0]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3]_i_1_n_0 ),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 }),
        .O(D[7:4]),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [3:1],D[8]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] }));
  LUT6 #(
    .INIT(64'hAAFEAAFFAAAAAAAA)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(leaving_empty),
        .I1(rd_en),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(ram_empty_i),
        .I4(\count_value_i_reg[9]_0 [1]),
        .I5(CO),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [8]),
        .I2(Q[6]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [6]),
        .I4(Q[7]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [7]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [1]),
        .I2(Q[2]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [2]),
        .I4(Q[0]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 [0]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  CARRY4 \gen_pf_ic_rc.ram_empty_i_reg_i_2 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_CO_UNCONNECTED [3],leaving_empty,\gen_pf_ic_rc.ram_empty_i_reg_i_2_n_2 ,\gen_pf_ic_rc.ram_empty_i_reg_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ,S,\gen_pf_ic_rc.ram_empty_i_i_6_n_0 }));
  LUT4 #(
    .INIT(16'h3331)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[9]_0 [1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[9]_0 [0]),
        .I3(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[3]_i_3 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[9] [0]),
        .I2(count_value_i[1]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[3]_i_5 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9] [2]),
        .O(\count_value_i_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9] [5]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9] [4]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9] [3]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[3]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_3 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_2 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_3 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_4 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_5 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  CARRY4 \gwdc.wr_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[3]_i_2_n_0 ,\gwdc.wr_data_count_i[3]_i_3_n_0 ,\gwdc.wr_data_count_i[3]_i_4_n_0 ,\gwdc.wr_data_count_i[3]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [3:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [3:2],D[8:7]}),
        .S({1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[3]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[3]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[3]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_3 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_2 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_3 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_4 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[3]_i_5 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  CARRY4 \gwdc.wr_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gwdc.wr_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[3]_i_2_n_0 ,\gwdc.wr_data_count_i[3]_i_3_n_0 ,\gwdc.wr_data_count_i[3]_i_4_n_0 ,\gwdc.wr_data_count_i[3]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 }));
  CARRY4 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [3:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [3:2],D[8:7]}),
        .S({1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4
   (CO,
    p_1_in,
    Q,
    rd_en,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [0:0]CO;
  input p_1_in;
  input [8:0]Q;
  input rd_en;
  input [1:0]\count_value_i_reg[1]_0 ;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]CO;
  wire [0:0]E;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_9_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_3_n_2 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_3_n_3 ;
  wire p_1_in;
  wire rd_clk;
  wire rd_en;
  wire [3:3]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h5559)) 
    \count_value_i[0]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h666A6666)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_0 [0]),
        .I4(\count_value_i_reg[1]_0 [1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(p_1_in),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[8] ),
        .I1(\count_value_i_reg_n_0_[6] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[5] ),
        .I4(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[2] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\count_value_i_reg_n_0_[8] ),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(Q[7]),
        .I5(\count_value_i_reg_n_0_[7] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(Q[4]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_9 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_9_n_0 ));
  CARRY4 \gen_pf_ic_rc.ram_empty_i_reg_i_3 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_CO_UNCONNECTED [3],CO,\gen_pf_ic_rc.ram_empty_i_reg_i_3_n_2 ,\gen_pf_ic_rc.ram_empty_i_reg_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ,\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ,\gen_pf_ic_rc.ram_empty_i_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11
   (CO,
    p_1_in,
    Q,
    rd_en,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [0:0]CO;
  input p_1_in;
  input [8:0]Q;
  input rd_en;
  input [1:0]\count_value_i_reg[1]_0 ;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]CO;
  wire [0:0]E;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_9_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_3_n_2 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_i_3_n_3 ;
  wire p_1_in;
  wire rd_clk;
  wire rd_en;
  wire [3:3]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h5559)) 
    \count_value_i[0]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h666A6666)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_0 [0]),
        .I4(\count_value_i_reg[1]_0 [1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAA6AAAAAAAAAAAAA)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(p_1_in),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[8] ),
        .I1(\count_value_i_reg_n_0_[6] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[5] ),
        .I4(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(p_1_in),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[2] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\count_value_i_reg_n_0_[8] ),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(Q[7]),
        .I5(\count_value_i_reg_n_0_[7] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(\count_value_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(Q[4]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_9 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_9_n_0 ));
  CARRY4 \gen_pf_ic_rc.ram_empty_i_reg_i_3 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_CO_UNCONNECTED [3],CO,\gen_pf_ic_rc.ram_empty_i_reg_i_3_n_2 ,\gen_pf_ic_rc.ram_empty_i_reg_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.ram_empty_i_reg_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ,\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ,\gen_pf_ic_rc.ram_empty_i_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(wr_pntr_plus1_pf_carry),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 }));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 }));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_3 }),
        .CYINIT(wr_pntr_plus1_pf_carry),
        .DI(Q[3:0]),
        .O({D[2:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5_n_0 }));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_i_1_n_0 ),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(D[6:3]),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 }));
  CARRY4 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    count_value_i,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]count_value_i;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    count_value_i,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]count_value_i;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [1:0]count_value_i;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(count_value_i[1]),
        .I2(Q[1]),
        .I3(count_value_i[0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .I2(Q[1]),
        .I3(count_value_i[1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(count_value_i[0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(count_value_i[1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) 
(* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) 
(* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "56" *) (* READ_MODE = "fwft" *) 
(* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "56" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [55:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [55:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [55:0]din;
  wire [55:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "14336" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "56" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "56" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) (* READ_DATA_WIDTH = "48" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "48" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [47:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [47:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [47:0]din;
  wire [47:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "24576" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "48" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "48" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "14" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "14" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [13:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [13:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [13:0]din;
  wire [13:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "3584" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "14" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "14" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) (* ORIG_REF_NAME = "xpm_fifo_async" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "56" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "56" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [55:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [55:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [55:0]din;
  wire [55:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "14336" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "56" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "56" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "2" *) 
(* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "14336" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) 
(* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) 
(* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) 
(* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "56" *) 
(* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "56" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [55:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [55:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [55:0]din;
  wire [55:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_12 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_13 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_14 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_15 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire going_full0;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire leaving_empty;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_15;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [55:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,src_in_bin00_out,rdp_inst_n_32}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (wr_pntr_plus1_pf),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] (rd_pntr_ext[7:1]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_20,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7] ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(rd_pntr_ext[1:0]),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[0]_1 (rd_rst_busy),
        .\grdc.rd_data_count_i_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrpp1_inst_n_15),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "56" *) 
  (* BYTE_WRITE_WIDTH_B = "56" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "55" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "56" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "14336" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "56" *) 
  (* P_MIN_WIDTH_DATA_A = "56" *) 
  (* P_MIN_WIDTH_DATA_B = "56" *) 
  (* P_MIN_WIDTH_DATA_ECC = "56" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "56" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "56" *) 
  (* P_WIDTH_COL_WRITE_B = "56" *) 
  (* READ_DATA_WIDTH_A = "56" *) 
  (* READ_DATA_WIDTH_B = "56" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "56" *) 
  (* WRITE_DATA_WIDTH_B = "56" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "56" *) 
  (* rstb_loop_iter = "56" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [55:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[2]_0 (rdp_inst_n_20),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,rdp_inst_n_32}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\count_value_i_reg[6]_0 (full),
        .d_out_reg(wrpp1_inst_n_15),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (rd_pntr_wr),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .going_full0(going_full0),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46 wrpp2_inst
       (.Q(rd_pntr_wr),
        .\count_value_i_reg[6]_0 (full),
        .going_full0(going_full0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "2" *) 
(* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "382" *) 
(* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) (* RD_DC_WIDTH_EXT = "10" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) 
(* WR_DEPTH_LOG = "9" *) (* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_0 ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_fwft.rdpp1_inst_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire going_empty0;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_13;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h7A)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_n_0 ),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ({rd_pntr_ext[8],rd_pntr_ext[5:3]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (\gen_cdc_pntr.wpr_gray_reg_n_10 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_13,\gen_fwft.rdpp1_inst_n_2 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 }),
        .S({rdp_inst_n_33,\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .count_value_i(count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7] ({rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37}),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .\grdc.rd_data_count_i_reg[9]_0 (rdp_inst_n_38),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[9]_0 (rd_rst_busy),
        .\reg_out_i_reg[9]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  LUT4 #(
    .INIT(16'hAF80)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_2 ),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 }),
        .S({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[1]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[3] (rd_pntr_ext[1:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hF1F0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(ram_empty_i),
        .I3(curr_fwft_state[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "37" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "38" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  LUT3 #(
    .INIT(8'h4A)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3 rdp_inst
       (.CO(going_empty0),
        .D(diff_pntr_pe),
        .DI(rdp_inst_n_13),
        .E(ram_rd_en_i),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_n_0 ),
        .count_value_i(count_value_i),
        .\count_value_i_reg[2]_0 (rdp_inst_n_33),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37}),
        .\count_value_i_reg[7]_0 (rdp_inst_n_38),
        .\count_value_i_reg[9]_0 (curr_fwft_state),
        .\count_value_i_reg[9]_1 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] (\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (\gen_cdc_pntr.wpr_gray_reg_n_10 ),
        .\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .\grdc.rd_data_count_i_reg[9] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 }),
        .p_1_in(p_1_in),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4 rdpp1_inst
       (.CO(going_empty0),
        .E(ram_rd_en_i),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .p_1_in(p_1_in),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "2" *) 
(* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "24576" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "382" *) 
(* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) (* RD_DC_WIDTH_EXT = "10" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "48" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "48" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) 
(* WR_DEPTH_LOG = "9" *) (* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [47:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [47:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [47:0]din;
  wire [47:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_0 ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_fwft.rdpp1_inst_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire going_empty0;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_13;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [47:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h7A)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_n_0 ),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ({rd_pntr_ext[8],rd_pntr_ext[5:3]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (\gen_cdc_pntr.wpr_gray_reg_n_10 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_13,\gen_fwft.rdpp1_inst_n_2 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 }),
        .S({rdp_inst_n_33,\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .count_value_i(count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7] ({rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37}),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .\grdc.rd_data_count_i_reg[9]_0 (rdp_inst_n_38),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[9]_0 (rd_rst_busy),
        .\reg_out_i_reg[9]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  LUT4 #(
    .INIT(16'hAF80)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_2 ),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 }),
        .S({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[1]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[3] (rd_pntr_ext[1:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hF1F0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(ram_empty_i),
        .I3(curr_fwft_state[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "48" *) 
  (* BYTE_WRITE_WIDTH_B = "48" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "47" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "48" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "24576" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "48" *) 
  (* P_MIN_WIDTH_DATA_A = "48" *) 
  (* P_MIN_WIDTH_DATA_B = "48" *) 
  (* P_MIN_WIDTH_DATA_ECC = "48" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "48" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "48" *) 
  (* P_WIDTH_COL_WRITE_B = "48" *) 
  (* READ_DATA_WIDTH_A = "48" *) 
  (* READ_DATA_WIDTH_B = "48" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "48" *) 
  (* WRITE_DATA_WIDTH_B = "48" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [47:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  LUT3 #(
    .INIT(8'h4A)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10 rdp_inst
       (.CO(going_empty0),
        .D(diff_pntr_pe),
        .DI(rdp_inst_n_13),
        .E(ram_rd_en_i),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_n_0 ),
        .count_value_i(count_value_i),
        .\count_value_i_reg[2]_0 (rdp_inst_n_33),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37}),
        .\count_value_i_reg[7]_0 (rdp_inst_n_38),
        .\count_value_i_reg[9]_0 (curr_fwft_state),
        .\count_value_i_reg[9]_1 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] (\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_5_n_0 ),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (\gen_cdc_pntr.wpr_gray_reg_n_10 ),
        .\gen_pf_ic_rc.ram_empty_i_reg_i_2_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .\grdc.rd_data_count_i_reg[9] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 }),
        .p_1_in(p_1_in),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.CO(going_empty0),
        .E(ram_rd_en_i),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 }),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .p_1_in(p_1_in),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "1" *) 
(* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "3584" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "14" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "14" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) 
(* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "4" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [13:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [13:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [13:0]din;
  wire [13:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_12 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_13 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_14 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_15 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire going_full0;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire leaving_empty;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_15;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [13:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,src_in_bin00_out,rdp_inst_n_32}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (wr_pntr_plus1_pf),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_17 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_18 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] (rd_pntr_ext[7:1]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_19 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_20,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7] ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_20 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(rd_pntr_ext[1:0]),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[0]_1 (rd_rst_busy),
        .\grdc.rd_data_count_i_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrpp1_inst_n_15),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "14" *) 
  (* BYTE_WRITE_WIDTH_B = "14" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "3584" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "14" *) 
  (* P_MIN_WIDTH_DATA_A = "14" *) 
  (* P_MIN_WIDTH_DATA_B = "14" *) 
  (* P_MIN_WIDTH_DATA_ECC = "14" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "14" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "14" *) 
  (* P_WIDTH_COL_WRITE_B = "14" *) 
  (* READ_DATA_WIDTH_A = "14" *) 
  (* READ_DATA_WIDTH_B = "14" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "14" *) 
  (* WRITE_DATA_WIDTH_B = "14" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "16" *) 
  (* rstb_loop_iter = "16" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [13:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[2]_0 (rdp_inst_n_20),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,rdp_inst_n_32}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_21 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_22 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_23 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\count_value_i_reg[6]_0 (full),
        .d_out_reg(wrpp1_inst_n_15),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (rd_pntr_wr),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .going_full0(going_full0),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q(rd_pntr_wr),
        .\count_value_i_reg[6]_0 (full),
        .going_full0(going_full0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "1" *) 
(* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "9" *) 
(* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* RD_DC_WIDTH_EXT = "5" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) 
(* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "5" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .count_value_i(count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[0]_1 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_1 ),
        .\grdc.rd_data_count_i_reg[2] (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_1 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "1" *) 
(* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "9" *) 
(* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) (* RD_DC_WIDTH_EXT = "5" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) 
(* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "5" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .count_value_i(count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[0]_1 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_1 ),
        .\grdc.rd_data_count_i_reg[2] (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_1 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
(* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) (* EN_DVLD = "1'b0" *) 
(* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) (* EN_PF = "1'b1" *) 
(* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) (* EN_WACK = "1'b0" *) 
(* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) (* FIFO_MEMORY_TYPE = "2" *) 
(* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) (* FIFO_READ_LATENCY = "0" *) 
(* FIFO_SIZE = "14336" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "56" *) (* READ_MODE = "1" *) (* RELATED_CLOCKS = "0" *) 
(* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) 
(* WRITE_DATA_WIDTH = "56" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) 
(* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) 
(* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) 
(* invalid = "0" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [55:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [55:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [55:0]din;
  wire [55:0]dout;
  wire empty;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_12 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_13 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_14 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_15 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_fwft.empty_fwft_i_reg0 ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire going_full0;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire leaving_empty;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_15;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [55:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,src_in_bin00_out,rdp_inst_n_32}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_24 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (wr_pntr_plus1_pf),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_25 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_26 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] (rd_pntr_ext[7:1]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_27 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_20,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7] ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(\gen_fwft.empty_fwft_i_reg0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_fwft.empty_fwft_i_reg0 ),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_28 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(rd_pntr_ext[1:0]),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[0]_1 (rd_rst_busy),
        .\grdc.rd_data_count_i_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrpp1_inst_n_15),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "56" *) 
  (* BYTE_WRITE_WIDTH_B = "56" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "55" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "56" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "14336" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "56" *) 
  (* P_MIN_WIDTH_DATA_A = "56" *) 
  (* P_MIN_WIDTH_DATA_B = "56" *) 
  (* P_MIN_WIDTH_DATA_ECC = "56" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "56" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "56" *) 
  (* P_WIDTH_COL_WRITE_B = "56" *) 
  (* READ_DATA_WIDTH_A = "56" *) 
  (* READ_DATA_WIDTH_B = "56" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "56" *) 
  (* WRITE_DATA_WIDTH_B = "56" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "56" *) 
  (* rstb_loop_iter = "56" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [55:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_29 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 }),
        .count_value_i(count_value_i),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[2]_0 (rdp_inst_n_20),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,rdp_inst_n_24}),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_12 ,\gen_cdc_pntr.wpr_gray_reg_n_13 ,\gen_cdc_pntr.wpr_gray_reg_n_14 }),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31,rdp_inst_n_32}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_30 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 ,\gen_cdc_pntr.wpr_gray_reg_n_9 ,\gen_cdc_pntr.wpr_gray_reg_n_10 ,\gen_cdc_pntr.wpr_gray_reg_n_11 }),
        .leaving_empty(leaving_empty),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_31 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_32 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_33 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .S({\gen_cdc_pntr.rpw_gray_reg_n_0 ,\gen_cdc_pntr.rpw_gray_reg_n_1 ,\gen_cdc_pntr.rpw_gray_reg_n_2 ,\gen_cdc_pntr.rpw_gray_reg_n_3 }),
        .\count_value_i_reg[6]_0 (full),
        .d_out_reg(wrpp1_inst_n_15),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (rd_pntr_wr),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({\gen_cdc_pntr.rpw_gray_reg_n_12 ,\gen_cdc_pntr.rpw_gray_reg_n_13 ,\gen_cdc_pntr.rpw_gray_reg_n_14 ,\gen_cdc_pntr.rpw_gray_reg_n_15 }),
        .going_full0(going_full0),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_34 wrpp2_inst
       (.Q(rd_pntr_wr),
        .\count_value_i_reg[6]_0 (full),
        .going_full0(going_full0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_21
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_31
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wrst_busy,
    D,
    wr_clk);
  output [3:0]S;
  output [7:0]Q;
  output [3:0]\reg_out_i_reg[3]_0 ;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire wr_clk;
  wire wrst_busy;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\reg_out_i_reg[3]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_18
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [3:0]S;
  output [7:0]Q;
  output [2:0]\reg_out_i_reg[3]_0 ;
  input [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [2:0]\reg_out_i_reg[3]_0 ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_24
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wrst_busy,
    D,
    wr_clk);
  output [3:0]S;
  output [7:0]Q;
  output [3:0]\reg_out_i_reg[3]_0 ;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire wr_clk;
  wire wrst_busy;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\reg_out_i_reg[3]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_26
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [3:0]S;
  output [7:0]Q;
  output [2:0]\reg_out_i_reg[3]_0 ;
  input [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [2:0]\reg_out_i_reg[3]_0 ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wrst_busy,
    D,
    wr_clk);
  output [3:0]S;
  output [7:0]Q;
  output [3:0]\reg_out_i_reg[3]_0 ;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire wr_clk;
  wire wrst_busy;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\reg_out_i_reg[3]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_4 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_5 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38
   (S,
    Q,
    \reg_out_i_reg[3]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [3:0]S;
  output [7:0]Q;
  output [2:0]\reg_out_i_reg[3]_0 ;
  input [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire [3:0]S;
  wire [6:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [2:0]\reg_out_i_reg[3]_0 ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\reg_out_i_reg[3]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\reg_out_i_reg[3]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .O(\reg_out_i_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(S[0]));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0
   (Q,
    d_out_reg,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output d_out_reg;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_2 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_3 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_2 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_3 ;
  wire going_full0;
  wire leaving_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [3:3]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  CARRY4 \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_CO_UNCONNECTED [3],leaving_full,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_2 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 }));
  CARRY4 \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_CO_UNCONNECTED [3],going_full0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_2 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1
   (S,
    Q,
    \reg_out_i_reg[8]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [0:0]S;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[8]_0 ;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]D;
  input rd_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire [0:0]S;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [0:0]\reg_out_i_reg[8]_0 ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [3]),
        .O(\reg_out_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [1]),
        .I3(Q[4]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [2]),
        .I5(Q[5]),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_17
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_19
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    count_value_i,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [2:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[7] ;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]count_value_i;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [2:0]S;
  wire [0:0]count_value_i;
  wire \grdc.rd_data_count_i[3]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[3]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_3 ;
  wire [3:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[3]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[3]_i_6 
       (.I0(Q[1]),
        .I1(count_value_i),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[3]_i_1_n_0 ,\grdc.rd_data_count_i_reg[3]_i_1_n_1 ,\grdc.rd_data_count_i_reg[3]_i_1_n_2 ,\grdc.rd_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[3]_i_2_n_0 ,DI,Q[0]}),
        .O({D[2:0],\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({S[2],\grdc.rd_data_count_i[3]_i_6_n_0 ,S[1:0]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 }),
        .O(D[6:3]),
        .S(\grdc.rd_data_count_i_reg[7] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_25
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_27
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    count_value_i,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [2:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[7] ;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]count_value_i;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [2:0]S;
  wire [0:0]count_value_i;
  wire \grdc.rd_data_count_i[3]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[3]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_3 ;
  wire [3:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[3]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[3]_i_6 
       (.I0(Q[1]),
        .I1(count_value_i),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[3]_i_1_n_0 ,\grdc.rd_data_count_i_reg[3]_i_1_n_1 ,\grdc.rd_data_count_i_reg[3]_i_1_n_2 ,\grdc.rd_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[3]_i_2_n_0 ,DI,Q[0]}),
        .O({D[2:0],\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({S[2],\grdc.rd_data_count_i[3]_i_6_n_0 ,S[1:0]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 }),
        .O(D[6:3]),
        .S(\grdc.rd_data_count_i_reg[7] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    count_value_i,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [2:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[7] ;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]count_value_i;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [2:0]S;
  wire [0:0]count_value_i;
  wire \grdc.rd_data_count_i[3]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[3]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_3 ;
  wire [3:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[3]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[3]_i_6 
       (.I0(Q[1]),
        .I1(count_value_i),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[3]_i_1_n_0 ,\grdc.rd_data_count_i_reg[3]_i_1_n_1 ,\grdc.rd_data_count_i_reg[3]_i_1_n_2 ,\grdc.rd_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[3]_i_2_n_0 ,DI,Q[0]}),
        .O({D[2:0],\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({S[2],\grdc.rd_data_count_i[3]_i_6_n_0 ,S[1:0]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 }),
        .O(D[6:3]),
        .S(\grdc.rd_data_count_i_reg[7] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [3:1],D[7]}),
        .S({1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    d_out_reg,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output d_out_reg;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_2 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_3 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_2 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_3 ;
  wire going_full0;
  wire leaving_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [3:3]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_O_UNCONNECTED ;
  wire [3:3]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  CARRY4 \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_CO_UNCONNECTED [3],leaving_full,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_2 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 }));
  CARRY4 \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3 
       (.CI(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_CO_UNCONNECTED [3],going_full0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_2 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ,\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7
   (S,
    Q,
    \reg_out_i_reg[8]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [0:0]S;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[8]_0 ;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]D;
  input rd_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire [0:0]S;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [0:0]\reg_out_i_reg[8]_0 ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [3]),
        .O(\reg_out_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [1]),
        .I3(Q[4]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] [2]),
        .I5(Q[5]),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2
   (Q,
    D,
    \grdc.rd_data_count_i_reg[9] ,
    DI,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9]_0 ,
    count_value_i,
    \reg_out_i_reg[9]_0 ,
    \reg_out_i_reg[9]_1 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input [1:0]DI;
  input [2:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[7] ;
  input [0:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input [0:0]count_value_i;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]\reg_out_i_reg[9]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [2:0]S;
  wire [0:0]count_value_i;
  wire \grdc.rd_data_count_i[3]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[3]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_4_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_3 ;
  wire [3:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire [0:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_3 ;
  wire rd_clk;
  wire \reg_out_i_reg[9]_0 ;
  wire [9:0]\reg_out_i_reg[9]_1 ;
  wire \reg_out_i_reg_n_0_[9] ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[3]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(\grdc.rd_data_count_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[3]_i_6 
       (.I0(count_value_i),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .I3(\grdc.rd_data_count_i_reg[9] [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\grdc.rd_data_count_i[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(\grdc.rd_data_count_i[9]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[3]_i_1_n_0 ,\grdc.rd_data_count_i_reg[3]_i_1_n_1 ,\grdc.rd_data_count_i_reg[3]_i_1_n_2 ,\grdc.rd_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[3]_i_2_n_0 ,DI,Q[0]}),
        .O({D[2:0],\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({S[2],\grdc.rd_data_count_i[3]_i_6_n_0 ,S[1:0]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 }),
        .O(D[6:3]),
        .S(\grdc.rd_data_count_i_reg[7] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [3:1],\grdc.rd_data_count_i_reg[9]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\grdc.rd_data_count_i[9]_i_3_n_0 }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [3:2],D[8:7]}),
        .S({1'b0,1'b0,\grdc.rd_data_count_i[9]_i_4_n_0 ,\grdc.rd_data_count_i_reg[9]_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8
   (Q,
    D,
    \grdc.rd_data_count_i_reg[9] ,
    DI,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9]_0 ,
    count_value_i,
    \reg_out_i_reg[9]_0 ,
    \reg_out_i_reg[9]_1 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input [1:0]DI;
  input [2:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[7] ;
  input [0:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input [0:0]count_value_i;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]\reg_out_i_reg[9]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [2:0]S;
  wire [0:0]count_value_i;
  wire \grdc.rd_data_count_i[3]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[3]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_4_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[3]_i_1_n_3 ;
  wire [3:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire [0:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_3 ;
  wire rd_clk;
  wire \reg_out_i_reg[9]_0 ;
  wire [9:0]\reg_out_i_reg[9]_1 ;
  wire \reg_out_i_reg_n_0_[9] ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[3]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(\grdc.rd_data_count_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[3]_i_6 
       (.I0(count_value_i),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .I3(\grdc.rd_data_count_i_reg[9] [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\grdc.rd_data_count_i[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(\grdc.rd_data_count_i[9]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\grdc.rd_data_count_i_reg[3]_i_1_n_0 ,\grdc.rd_data_count_i_reg[3]_i_1_n_1 ,\grdc.rd_data_count_i_reg[3]_i_1_n_2 ,\grdc.rd_data_count_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[3]_i_2_n_0 ,DI,Q[0]}),
        .O({D[2:0],\NLW_grdc.rd_data_count_i_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({S[2],\grdc.rd_data_count_i[3]_i_6_n_0 ,S[1:0]}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(\grdc.rd_data_count_i_reg[3]_i_1_n_0 ),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 }),
        .O(D[6:3]),
        .S(\grdc.rd_data_count_i_reg[7] ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [3:1],\grdc.rd_data_count_i_reg[9]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\grdc.rd_data_count_i[9]_i_3_n_0 }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [3:2],D[8:7]}),
        .S({1'b0,1'b0,\grdc.rd_data_count_i[9]_i_4_n_0 ,\grdc.rd_data_count_i_reg[9]_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[9]_1 [9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    count_value_i,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]count_value_i;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]count_value_i;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(count_value_i[1]),
        .I4(count_value_i[0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    count_value_i,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]count_value_i;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]count_value_i;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(count_value_i[1]),
        .I4(count_value_i[0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \guf.underflow_i_i_1 
       (.I0(rd_en),
        .I1(\guf.underflow_i_reg ),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \guf.underflow_i_i_1 
       (.I0(rd_en),
        .I1(\guf.underflow_i_reg ),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h03000200)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(rst),
        .I2(p_0_in),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "56" *) (* BYTE_WRITE_WIDTH_B = "56" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "14336" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "no_ecc" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "56" *) 
(* P_MIN_WIDTH_DATA_A = "56" *) (* P_MIN_WIDTH_DATA_B = "56" *) (* P_MIN_WIDTH_DATA_ECC = "56" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "56" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "56" *) 
(* P_WIDTH_COL_WRITE_B = "56" *) (* READ_DATA_WIDTH_A = "56" *) (* READ_DATA_WIDTH_B = "56" *) 
(* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "56" *) 
(* WRITE_DATA_WIDTH_B = "56" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "56" *) (* rstb_loop_iter = "56" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [55:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [55:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [55:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [55:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [55:0]dina;
  wire [55:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:24]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[55] = \<const0> ;
  assign douta[54] = \<const0> ;
  assign douta[53] = \<const0> ;
  assign douta[52] = \<const0> ;
  assign douta[51] = \<const0> ;
  assign douta[50] = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d56" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "55" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d56" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "55" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "14336" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "55" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "55" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina[31:0]),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[55:32]}),
        .DIPADIP({1'b1,1'b1,1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO(doutb[31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED [31:24],doutb[55:32]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "56" *) (* BYTE_WRITE_WIDTH_B = "56" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "14336" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "56" *) (* P_MIN_WIDTH_DATA_A = "56" *) (* P_MIN_WIDTH_DATA_B = "56" *) 
(* P_MIN_WIDTH_DATA_ECC = "56" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "56" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "56" *) (* P_WIDTH_COL_WRITE_B = "56" *) (* READ_DATA_WIDTH_A = "56" *) 
(* READ_DATA_WIDTH_B = "56" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "56" *) (* WRITE_DATA_WIDTH_B = "56" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "56" *) 
(* rstb_loop_iter = "56" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [55:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [55:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [55:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [55:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [55:0]dina;
  wire [55:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:24]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[55] = \<const0> ;
  assign douta[54] = \<const0> ;
  assign douta[53] = \<const0> ;
  assign douta[52] = \<const0> ;
  assign douta[51] = \<const0> ;
  assign douta[50] = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d56" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "55" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d56" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "55" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "14336" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "55" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "55" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina[31:0]),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[55:32]}),
        .DIPADIP({1'b1,1'b1,1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO(doutb[31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED [31:24],doutb[55:32]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:6]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "37" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "37" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "37" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "37" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina[31:0]),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:32]}),
        .DIPADIP({1'b1,1'b1,1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO(doutb[31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED [31:6],doutb[37:32]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "48" *) (* BYTE_WRITE_WIDTH_B = "48" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "24576" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "48" *) (* P_MIN_WIDTH_DATA_A = "48" *) (* P_MIN_WIDTH_DATA_B = "48" *) 
(* P_MIN_WIDTH_DATA_ECC = "48" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "48" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "48" *) (* P_WIDTH_COL_WRITE_B = "48" *) (* READ_DATA_WIDTH_A = "48" *) 
(* READ_DATA_WIDTH_B = "48" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "48" *) (* WRITE_DATA_WIDTH_B = "48" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [47:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [47:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [47:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [47:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [47:0]dina;
  wire [47:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d48" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "47" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d48" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "47" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "24576" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "47" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "47" *) 
  RAMB36E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina[31:0]),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[47:32]}),
        .DIPADIP({1'b1,1'b1,1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1,1'b1,1'b1}),
        .DOADO(doutb[31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOBDO_UNCONNECTED [31:16],doutb[47:32]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "14" *) (* BYTE_WRITE_WIDTH_B = "14" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "3584" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "14" *) (* P_MIN_WIDTH_DATA_A = "14" *) (* P_MIN_WIDTH_DATA_B = "14" *) 
(* P_MIN_WIDTH_DATA_ECC = "14" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "14" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "14" *) (* P_WIDTH_COL_WRITE_B = "14" *) (* READ_DATA_WIDTH_A = "14" *) 
(* READ_DATA_WIDTH_B = "14" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "14" *) (* WRITE_DATA_WIDTH_B = "14" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "1" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "16" *) 
(* rstb_loop_iter = "16" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [13:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [13:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [13:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [13:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [13:0]dina;
  wire [13:0]doutb;
  wire ena;
  wire enb;
  wire [13:0]\gen_rd_b.doutb_reg ;
  wire \gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_15_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_16_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_17_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_18_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_19_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_20_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_21_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_22_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_23_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_24_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_25_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_26_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_27_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_28_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_29_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_30_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_31_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_32_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_33_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_34_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_35_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_36_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_37_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_38_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_39_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_40_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_41_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_42_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_43_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_44_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_45_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_46_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_47_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_48_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_49_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_50_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_51_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_52_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_53_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_54_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_55_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_56_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_57_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_58_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_15_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_15_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_16_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_16_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_17_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_17_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_18_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_18_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_19_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_19_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_20_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_20_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_21_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_21_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_22_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_22_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_23_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_23_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_24_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_24_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_25_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_25_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_26_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_26_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_27_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_27_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_28_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_28_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_29_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_29_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_30_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_30_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_31_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_31_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_32_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_32_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_33_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_33_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_34_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_34_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_35_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_35_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_36_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_36_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_37_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_37_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_38_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_38_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_39_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_39_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_40_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_40_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_41_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_41_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_42_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_42_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_43_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_43_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_44_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_44_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_45_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_45_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_46_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_46_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_47_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_47_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_48_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_48_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_49_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_49_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_50_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_50_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_51_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_51_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_52_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_52_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_53_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_53_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_54_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_54_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_55_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_55_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_56_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_56_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_57_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_57_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_58_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_58_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_58_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_57_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_56_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_55_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][10]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_18_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_17_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_16_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_15_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][11]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][12]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][13]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_54_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_53_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_52_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_51_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_50_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_49_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_48_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_47_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][3]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_46_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_45_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_44_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_43_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][4]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_42_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_41_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_40_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_39_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][5]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_38_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_37_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_36_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_35_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][6]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_34_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_33_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_32_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_31_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][7]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_30_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_29_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_28_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_27_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][8]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_26_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_25_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_24_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_23_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][9]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_22_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_21_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_20_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_19_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [9]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "12" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[12]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_12_12_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "13" *) 
  (* ram_slice_end = "13" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[13]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_13_13_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "5" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[3]),
        .DIB(dina[4]),
        .DIC(dina[5]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_3_5_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "8" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[6]),
        .DIB(dina[7]),
        .DIC(dina[8]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_6_8_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "11" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[9]),
        .DIB(dina[10]),
        .DIC(dina[11]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_9_11_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "12" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[12]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_12_12_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "13" *) 
  (* ram_slice_end = "13" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[13]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_13_13_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "5" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[3]),
        .DIB(dina[4]),
        .DIC(dina[5]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_3_5_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "8" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[6]),
        .DIB(dina[7]),
        .DIC(dina[8]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_6_8_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "11" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[9]),
        .DIB(dina[10]),
        .DIC(dina[11]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_9_11_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "12" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[12]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_12_12_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "13" *) 
  (* ram_slice_end = "13" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[13]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_13_13_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "5" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[3]),
        .DIB(dina[4]),
        .DIC(dina[5]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_3_5_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "8" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[6]),
        .DIB(dina[7]),
        .DIC(dina[8]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_6_8_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "11" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[9]),
        .DIB(dina[10]),
        .DIC(dina[11]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_9_11_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "12" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[12]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_12_12_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "13" *) 
  (* ram_slice_end = "13" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[13]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_13_13_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "5" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[3]),
        .DIB(dina[4]),
        .DIC(dina[5]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_3_5_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "8" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[6]),
        .DIB(dina[7]),
        .DIC(dina[8]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_6_8_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "3584" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "11" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[9]),
        .DIB(dina[10]),
        .DIC(dina[11]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_9_11_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "1" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[13:12]),
        .DIB(dina[15:14]),
        .DIC(dina[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [13:12]),
        .DOB(\gen_rd_b.doutb_reg0 [15:14]),
        .DOC(\gen_rd_b.doutb_reg0 [17:16]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[19:18]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [19:18]),
        .DOB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[7:6]),
        .DIB(dina[9:8]),
        .DIC(dina[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [7:6]),
        .DOB(\gen_rd_b.doutb_reg0 [9:8]),
        .DOC(\gen_rd_b.doutb_reg0 [11:10]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "1" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOC_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[13:12]),
        .DIB(dina[15:14]),
        .DIC(dina[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [13:12]),
        .DOB(\gen_rd_b.doutb_reg0 [15:14]),
        .DOC(\gen_rd_b.doutb_reg0 [17:16]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[19:18]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [19:18]),
        .DOB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_18_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[7:6]),
        .DIB(dina[9:8]),
        .DIC(dina[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [7:6]),
        .DOB(\gen_rd_b.doutb_reg0 [9:8]),
        .DOC(\gen_rd_b.doutb_reg0 [11:10]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_MUX_RATIO = "2" *) (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "2" *) (* AFIFO_DATA_SIZE = "56" *) 
(* AFIFO_DATA_SIZE_M2 = "0" *) (* AFIFO_DATA_SIZE_M3 = "2" *) (* AFIFO_DATA_SIZE_M4 = "0" *) 
(* AFIFO_TIE_WIDTH = "1" *) (* AFIFO_WIDTH = "56" *) (* AR_CH_FC = "128" *) 
(* AR_CH_FIFO_DEPTH = "256" *) (* AR_CH_PTR_WIDTH = "8" *) (* AWB_FC_WIDTH = "2" *) 
(* AW_CH_FC = "128" *) (* AW_CH_FIFO_DEPTH = "256" *) (* AW_CH_PTR_WIDTH = "8" *) 
(* AXILITE_WIDTH = "20" *) (* BFIFO_DATA_SIZE = "14" *) (* BFIFO_WIDTH = "14" *) 
(* BR_CH_FC = "128" *) (* BR_CH_FIFO_DEPTH = "256" *) (* BR_CH_PTR_WIDTH = "8" *) 
(* C_AURORA_WIDTH = "4096" *) (* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_BRST_WIDTH = "2" *) 
(* C_AXI_BUS_TYPE = "0" *) (* C_AXI_DATA_WIDTH = "32" *) (* C_AXI_ID_WIDTH = "12" *) 
(* C_AXI_LEN_WIDTH = "8" *) (* C_AXI_LITE_ADDR_WIDTH = "32" *) (* C_AXI_LITE_DATA_WIDTH = "32" *) 
(* C_AXI_LITE_PROT_WIDTH = "2" *) (* C_AXI_LITE_RESP_WIDTH = "2" *) (* C_AXI_LITE_STB_WIDTH = "4" *) 
(* C_AXI_RESP_WIDTH = "2" *) (* C_AXI_SIZE_WIDTH = "3" *) (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
(* C_AXI_STB_WIDTH = "4" *) (* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLK = "0" *) 
(* C_DISABLE_CLK_SHIFT = "0" *) (* C_DISABLE_DESKEW = "0" *) (* C_ECC_ENABLE = "1" *) 
(* C_EN_AXI_LINK_HNDLR = "0" *) (* C_EN_LEGACY_MODE = "0" *) (* C_FAMILY = "spartan7" *) 
(* C_FIFO_DEPTH_LH = "256" *) (* C_INCLUDE_AXILITE = "1" *) (* C_INSTANCE = "axi_c2c" *) 
(* C_INTERFACE_MODE = "1" *) (* C_INTERFACE_TYPE = "1" *) (* C_INTERRUPT_WIDTH = "4" *) 
(* C_MASTER_FPGA = "0" *) (* C_NUM_OF_IO = "36" *) (* C_PHY_SELECT = "0" *) 
(* C_RD_CNTR_WIDTH = "8" *) (* C_SELECTIO_DDR = "1" *) (* C_SELECTIO_PHY_CLK = "100" *) 
(* C_SELECTIO_WIDTH = "17" *) (* C_SIMULATION = "0" *) (* C_SYNC_STAGE = "3" *) 
(* C_USE_DIFF_CLK = "1" *) (* C_USE_DIFF_IO = "0" *) (* C_WIDTH_CONVERSION = "2" *) 
(* C_WR_CNTR_WIDTH = "8" *) (* DATA_MUX_RATIO = "2" *) (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "2" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* EN_ECC = "1" *) (* PHY_CTRL_WIDTH = "3" *) 
(* PHY_DATA_WIDTH = "34" *) (* RB_FC_WIDTH = "3" *) (* RFIFO_DATA_SIZE = "47" *) 
(* RFIFO_DATA_SIZE_M2 = "1" *) (* RFIFO_DATA_SIZE_M3 = "2" *) (* RFIFO_DATA_SIZE_M4 = "3" *) 
(* RFIFO_TIE_WIDTH = "2" *) (* RFIFO_WIDTH = "48" *) (* TDM_ID_WIDTH = "2" *) 
(* TDM_VAL_BITS = "1" *) (* WFIFO_DATA_SIZE = "38" *) (* WFIFO_DATA_SIZE_M2 = "0" *) 
(* WFIFO_DATA_SIZE_M3 = "2" *) (* WFIFO_DATA_SIZE_M4 = "2" *) (* WFIFO_TIE_WIDTH = "1" *) 
(* WFIFO_WIDTH = "38" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wuser,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_lnk_hndlr_in_progress,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    m_aclk,
    m_aresetn,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wuser,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    idelay_ref_clk,
    axi_c2c_phy_clk,
    axi_c2c_selio_tx_clk_out,
    axi_c2c_selio_tx_data_out,
    axi_c2c_selio_rx_clk_in,
    axi_c2c_selio_rx_data_in,
    axi_c2c_selio_tx_diff_clk_out_p,
    axi_c2c_selio_tx_diff_clk_out_n,
    axi_c2c_selio_tx_diff_data_out_p,
    axi_c2c_selio_tx_diff_data_out_n,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    axi_c2c_selio_rx_diff_data_in_p,
    axi_c2c_selio_rx_diff_data_in_n,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    m_aclk_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready,
    m_axi_lite_aclk,
    m_axi_lite_awaddr,
    m_axi_lite_awprot,
    m_axi_lite_awvalid,
    m_axi_lite_awready,
    m_axi_lite_wdata,
    m_axi_lite_wstrb,
    m_axi_lite_wvalid,
    m_axi_lite_wready,
    m_axi_lite_bresp,
    m_axi_lite_bvalid,
    m_axi_lite_bready,
    m_axi_lite_araddr,
    m_axi_lite_arprot,
    m_axi_lite_arvalid,
    m_axi_lite_arready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_rvalid,
    m_axi_lite_rready);
  input s_aclk;
  input s_aresetn;
  input [11:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wuser;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [11:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [11:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [11:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  output axi_c2c_lnk_hndlr_in_progress;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  input m_aclk;
  input m_aresetn;
  output [11:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wuser;
  output [31:0]m_axi_wdata;
  output [3:0]m_axi_wstrb;
  output m_axi_wlast;
  output m_axi_wvalid;
  input m_axi_wready;
  input [11:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  output m_axi_bready;
  output [11:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output m_axi_arvalid;
  input m_axi_arready;
  input [11:0]m_axi_rid;
  input [31:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input m_axi_rvalid;
  output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  input idelay_ref_clk;
  input axi_c2c_phy_clk;
  output axi_c2c_selio_tx_clk_out;
  output [16:0]axi_c2c_selio_tx_data_out;
  input axi_c2c_selio_rx_clk_in;
  input [16:0]axi_c2c_selio_rx_data_in;
  output axi_c2c_selio_tx_diff_clk_out_p;
  output axi_c2c_selio_tx_diff_clk_out_n;
  output [16:0]axi_c2c_selio_tx_diff_data_out_p;
  output [16:0]axi_c2c_selio_tx_diff_data_out_n;
  input axi_c2c_selio_rx_diff_clk_in_p;
  input axi_c2c_selio_rx_diff_clk_in_n;
  input [16:0]axi_c2c_selio_rx_diff_data_in_p;
  input [16:0]axi_c2c_selio_rx_diff_data_in_n;
  input axi_c2c_aurora_channel_up;
  input axi_c2c_aurora_tx_tready;
  output [4095:0]axi_c2c_aurora_tx_tdata;
  output axi_c2c_aurora_tx_tvalid;
  input [4095:0]axi_c2c_aurora_rx_tdata;
  input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  input aurora_pma_init_in;
  input aurora_init_clk;
  output aurora_pma_init_out;
  input aurora_mmcm_not_locked;
  output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  output m_aclk_out;
  input s_axi_lite_aclk;
  input [31:0]s_axi_lite_awaddr;
  input [1:0]s_axi_lite_awprot;
  input s_axi_lite_awvalid;
  output s_axi_lite_awready;
  input [31:0]s_axi_lite_wdata;
  input [3:0]s_axi_lite_wstrb;
  input s_axi_lite_wvalid;
  output s_axi_lite_wready;
  output [1:0]s_axi_lite_bresp;
  output s_axi_lite_bvalid;
  input s_axi_lite_bready;
  input [31:0]s_axi_lite_araddr;
  input [1:0]s_axi_lite_arprot;
  input s_axi_lite_arvalid;
  output s_axi_lite_arready;
  output [31:0]s_axi_lite_rdata;
  output [1:0]s_axi_lite_rresp;
  output s_axi_lite_rvalid;
  input s_axi_lite_rready;
  input m_axi_lite_aclk;
  output [31:0]m_axi_lite_awaddr;
  output [1:0]m_axi_lite_awprot;
  output m_axi_lite_awvalid;
  input m_axi_lite_awready;
  output [31:0]m_axi_lite_wdata;
  output [3:0]m_axi_lite_wstrb;
  output m_axi_lite_wvalid;
  input m_axi_lite_wready;
  input [1:0]m_axi_lite_bresp;
  input m_axi_lite_bvalid;
  output m_axi_lite_bready;
  output [31:0]m_axi_lite_araddr;
  output [1:0]m_axi_lite_arprot;
  output m_axi_lite_arvalid;
  input m_axi_lite_arready;
  input [31:0]m_axi_lite_rdata;
  input [1:0]m_axi_lite_rresp;
  input m_axi_lite_rvalid;
  output m_axi_lite_rready;

  wire \<const0> ;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire [16:0]axi_c2c_selio_rx_data_in;
  wire axi_c2c_selio_rx_diff_clk_in_n;
  wire axi_c2c_selio_rx_diff_clk_in_p;
  wire [16:0]axi_c2c_selio_tx_data_out;
  wire axi_c2c_selio_tx_diff_clk_out_n;
  wire axi_c2c_selio_tx_diff_clk_out_p;
  wire \axi_chip2chip_ch0_ctrl_inst/sync_intr_sent ;
  wire \axi_chip2chip_lite_master_tx_fifo/fifo_empty ;
  wire \axi_chip2chip_lite_master_tx_fifo/fifo_re ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_10 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_11 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_12 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_13 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_14 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_15 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_16 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_17 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_18 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_19 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_20 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_21 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_22 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_23 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_8 ;
  wire \axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_9 ;
  wire [19:0]axi_lite_rx_data;
  wire axi_lite_rx_valid;
  wire [3:0]axi_lite_tx_data;
  wire idelay_ref_clk;
  wire lite_sync_reset;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [11:0]m_axi_arid;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [1:0]\^m_axi_arsize ;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [11:0]m_axi_awid;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [1:0]\^m_axi_awsize ;
  wire m_axi_awvalid;
  wire [11:0]m_axi_bid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [31:0]m_axi_rdata;
  wire [11:0]m_axi_rid;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire [0:0]m_axi_wuser;
  wire m_axi_wvalid;
  wire p_1_in0;
  wire rx_phy_ready;
  wire rx_user_clk;
  wire [33:0]rx_user_data;
  wire rx_user_reset;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire \slave_fpga_gen.axi_chip2chip_slave_inst_n_152 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_inst_n_154 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_28 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_29 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_30 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_31 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_33 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_34 ;
  wire \slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_35 ;
  wire \slave_sio_phy.mmcm_idelay_reset ;
  wire tx_ch0_valid;
  wire [2:1]tx_phy_ctrl;
  wire tx_phy_ready;
  wire [33:0]tx_user_data;

  assign aurora_do_cc = \<const0> ;
  assign aurora_pma_init_out = \<const0> ;
  assign aurora_reset_pb = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1099] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1098] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1097] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1096] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1095] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1094] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1093] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1092] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1091] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1090] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1089] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1088] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1087] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1086] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1085] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1084] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1083] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1082] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1081] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1080] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1079] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1078] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1077] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1076] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1075] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1074] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1073] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1072] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1071] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1070] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1069] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1068] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1067] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1066] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1065] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1064] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1063] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1062] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1061] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1060] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1059] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1058] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1057] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1056] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1055] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1054] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1053] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1052] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1051] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1050] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1049] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1048] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1047] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1046] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1045] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1044] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1043] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1042] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1041] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1040] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1039] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1038] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1037] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1036] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1035] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1034] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1033] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1032] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1031] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1030] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1029] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1028] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1027] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1026] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1025] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1024] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1023] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1022] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1021] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1020] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1019] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1018] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1017] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1016] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1015] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1014] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1013] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1012] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1011] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1010] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1009] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1008] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1007] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1006] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1005] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1004] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1003] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1002] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1001] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1000] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[999] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[998] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[997] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[996] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[995] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[994] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[993] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[992] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[991] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[990] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[989] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[988] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[987] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[986] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[985] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[984] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[983] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[982] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[981] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[980] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[979] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[978] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[977] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[976] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[975] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[974] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[973] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[972] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[971] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[970] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[969] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[968] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[967] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[966] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[965] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[964] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[963] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[962] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[961] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[960] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[959] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[958] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[957] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[956] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[955] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[954] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[953] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[952] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[951] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[950] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[949] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[948] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[947] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[946] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[945] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[944] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[943] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[942] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[941] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[940] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[939] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[938] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[937] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[936] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[935] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[934] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[933] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[932] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[931] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[930] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[929] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[928] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[927] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[926] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[925] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[924] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[923] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[922] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[921] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[920] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[919] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[918] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[917] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[916] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[915] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[914] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[913] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[912] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[911] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[910] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[909] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[908] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[907] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[906] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[905] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[904] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[903] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[902] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[901] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[900] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[899] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[898] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[897] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[896] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[895] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[894] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[893] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[892] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[891] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[890] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[889] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[888] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[887] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[886] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[885] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[884] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[883] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[882] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[881] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[880] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[879] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[878] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[877] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[876] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[875] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[874] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[873] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[872] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[871] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[870] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[869] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[868] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[867] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[866] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[865] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[864] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[863] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[862] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[861] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[860] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[859] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[858] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[857] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[856] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[855] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[854] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[853] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[852] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[851] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[850] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[849] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[848] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[847] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[846] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[845] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[844] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[843] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[842] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[841] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[840] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[839] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[838] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[837] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[836] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[835] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[834] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[833] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[832] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[831] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[830] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[829] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[828] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[827] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[826] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[825] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[824] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[823] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[822] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[821] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[820] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[819] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[818] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[817] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[816] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[815] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[814] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[813] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[812] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[811] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[810] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[809] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[808] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[807] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[806] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[805] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[804] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[803] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[802] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[801] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[800] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[799] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[798] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[797] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[796] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[795] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[794] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[793] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[792] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[791] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[790] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[789] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[788] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[787] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[786] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[785] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[784] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[783] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[782] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[781] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[780] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[779] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[778] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[777] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[776] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[775] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[774] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[773] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[772] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[771] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[770] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[769] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[768] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[767] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[766] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[765] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[764] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[763] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[762] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[761] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[760] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[759] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[758] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[757] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[756] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[755] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[754] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[753] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[752] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[751] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[750] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[749] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[748] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[747] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[746] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[745] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[744] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[743] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[742] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[741] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[740] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[739] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[738] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[737] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[736] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[735] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[734] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[733] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[732] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[731] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[730] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[729] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[728] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[727] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[726] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[725] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[724] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[723] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[722] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[721] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[720] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[719] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[718] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[717] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[716] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[715] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[714] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[713] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[712] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[711] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[710] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[709] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[708] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[707] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[706] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[705] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[704] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[703] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[702] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[701] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[700] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[699] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[698] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[697] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[696] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[695] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[694] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[693] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[692] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[691] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[690] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[689] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[688] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[687] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[686] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[685] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[684] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[683] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[682] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[681] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[680] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[679] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[678] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[677] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[676] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[675] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[674] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[673] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[672] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[671] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[670] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[669] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[668] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[667] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[666] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[665] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[664] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[663] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[662] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[661] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[660] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[659] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[658] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[657] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[656] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[655] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[654] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[653] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[652] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[651] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[650] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[649] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[648] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[647] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[646] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[645] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[644] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[643] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[642] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[641] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[640] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[639] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[638] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[637] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[636] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[635] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[634] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[633] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[632] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[631] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[630] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[629] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[628] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[627] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[626] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[625] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[624] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[623] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[622] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[621] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[620] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[619] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[618] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[617] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[616] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[615] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[614] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[613] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[612] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[611] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[610] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[609] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[608] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[607] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[606] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[605] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[604] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[603] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[602] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[601] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[600] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[599] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[598] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[597] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[596] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[595] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[594] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[593] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[592] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[591] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[590] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[589] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[588] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[587] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[586] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[585] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[584] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[583] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[582] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[581] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[580] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[579] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[578] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[577] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[576] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[575] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[574] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[573] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[572] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[571] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[570] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[569] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[568] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[567] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[566] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[565] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[564] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[563] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[562] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[561] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[560] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[559] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[558] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[557] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[556] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[555] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[554] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[553] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[552] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[551] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[550] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[549] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[548] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[547] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[546] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[545] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[544] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[543] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[542] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[541] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[540] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[539] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[538] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[537] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[536] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[535] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[534] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[533] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[532] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[531] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[530] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[529] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[528] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[527] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[526] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[525] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[524] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[523] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[522] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[521] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[520] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[519] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[518] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[517] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[516] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[515] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[514] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[513] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[512] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[511] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[510] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[509] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[508] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[507] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[506] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[505] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[504] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[503] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[502] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[501] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[500] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[499] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[498] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[497] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[496] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[495] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[494] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[493] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[492] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[491] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[490] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[489] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[488] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[487] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[486] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[485] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[484] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[483] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[482] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[481] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[480] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[479] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[478] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[477] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[476] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[475] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[474] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[473] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[472] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[471] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[470] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[469] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[468] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[467] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[466] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[465] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[464] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[463] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[462] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[461] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[460] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[459] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[458] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[457] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[456] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[455] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[454] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[453] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[452] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[451] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[450] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[449] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[448] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[447] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[446] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[445] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[444] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[443] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[442] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[441] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[440] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[439] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[438] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[437] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[436] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[435] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[434] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[433] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[432] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[431] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[430] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[429] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[428] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[427] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[426] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[425] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[424] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[423] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[422] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[421] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[420] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[419] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[418] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[417] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[416] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[415] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[414] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[413] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[412] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[411] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[410] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[409] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[408] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[407] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[406] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[405] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[404] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[403] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[402] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[401] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[400] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[399] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[398] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[397] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[396] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[395] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[394] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[393] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[392] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[391] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[390] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[389] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[388] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[387] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[386] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[385] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[384] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[383] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[382] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[381] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[380] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[379] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[378] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[377] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[376] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[375] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[374] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[373] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[372] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[371] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[370] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[369] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[368] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[367] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[366] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[365] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[364] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[363] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[362] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[361] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[360] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[359] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[358] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[357] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[356] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[355] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[354] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[353] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[352] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[351] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[350] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[349] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[348] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[347] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[346] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[345] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[344] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[343] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[342] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[341] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[340] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[339] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[338] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[337] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[336] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[335] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[334] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[333] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[332] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[331] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[330] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[329] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[328] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[327] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[326] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[325] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[324] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[323] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[322] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[321] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[320] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[319] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[318] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[317] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[316] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[315] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[314] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[313] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[312] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[311] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[310] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[309] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[308] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[307] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[306] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[305] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[304] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[303] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[302] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[301] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[300] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[299] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[298] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[297] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[296] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[295] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[294] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[293] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[292] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[291] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[290] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[289] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[288] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[287] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[286] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[285] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[284] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[283] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[282] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[281] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[280] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[279] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[278] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[277] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[276] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[275] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[274] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[273] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[272] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[271] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[270] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[269] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[268] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[267] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[266] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[265] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[264] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[263] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[262] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[261] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[260] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[259] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[258] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[257] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[256] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[255] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[254] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[253] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[252] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[251] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[250] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[249] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[248] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[247] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[246] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[245] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[244] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[243] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[242] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[241] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[240] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[239] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[238] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[237] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[236] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[235] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[234] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[233] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[232] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[231] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[230] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[229] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[228] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[227] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[226] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[225] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[224] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[223] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[222] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[221] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[220] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[219] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[218] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[217] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[216] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[215] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[214] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[213] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[212] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[211] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[210] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[209] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[208] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[207] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[206] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[205] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[204] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[203] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[202] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[201] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[200] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[199] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[198] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[197] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[196] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[195] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[194] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[193] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[192] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[191] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[190] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[189] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[188] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[187] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[186] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[185] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[184] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[183] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[182] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[181] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[180] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[179] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[178] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[177] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[176] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[175] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[174] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[173] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[172] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[171] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[170] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[169] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[168] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[167] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[166] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[165] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[164] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[163] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[162] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[161] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[160] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[159] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[158] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[157] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[156] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[155] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[154] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[153] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[152] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[151] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[150] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[149] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[148] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[147] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[146] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[145] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[144] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[143] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[142] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[141] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[140] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[139] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[138] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[137] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[136] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[135] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[134] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[133] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[132] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[131] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[130] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[129] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[128] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[127] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[126] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[125] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[124] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[123] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[122] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[121] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[120] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[119] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[118] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[117] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[116] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[115] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[114] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[113] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[112] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[111] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[110] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[109] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[108] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[107] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[106] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[105] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[104] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[103] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[102] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[101] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[100] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[99] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[98] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[97] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[96] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[95] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[94] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[93] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[92] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[91] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[90] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[89] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[88] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[87] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[86] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[85] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[84] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[83] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[82] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[81] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[80] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[79] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[78] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[77] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[76] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[75] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[74] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[73] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[72] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[71] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[70] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[69] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[68] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[67] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[66] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[65] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[64] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[63] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[60] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[59] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[58] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[57] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[56] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[55] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[54] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[53] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[52] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[51] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[50] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[49] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[48] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[47] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[46] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[45] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[44] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[43] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[42] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[41] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[40] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[39] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[38] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[37] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[36] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[35] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[34] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[33] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[32] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[31] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[30] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[29] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[28] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[27] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[26] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[25] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[24] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[23] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[22] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[21] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[20] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[19] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[18] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[17] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[16] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[15] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[14] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[13] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[12] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[11] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[10] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[9] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[8] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[7] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[6] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[5] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[4] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[3] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[2] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[1] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[0] = \<const0> ;
  assign axi_c2c_aurora_tx_tvalid = \<const0> ;
  assign axi_c2c_config_error_out = \<const0> ;
  assign axi_c2c_link_error_out = \<const0> ;
  assign axi_c2c_lnk_hndlr_in_progress = \<const0> ;
  assign axi_c2c_s2m_intr_out[3] = \<const0> ;
  assign axi_c2c_s2m_intr_out[2] = \<const0> ;
  assign axi_c2c_s2m_intr_out[1] = \<const0> ;
  assign axi_c2c_s2m_intr_out[0] = \<const0> ;
  assign axi_c2c_selio_tx_clk_out = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[16] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[15] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[14] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[13] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[12] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[11] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[10] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[9] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[8] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[7] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[6] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[5] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[4] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[3] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[2] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[1] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_n[0] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[16] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[15] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[14] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[13] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[12] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[11] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[10] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[9] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[8] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[7] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[6] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[5] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[4] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[3] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[2] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[1] = \<const0> ;
  assign axi_c2c_selio_tx_diff_data_out_p[0] = \<const0> ;
  assign m_aclk_out = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1:0] = \^m_axi_arsize [1:0];
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1:0] = \^m_axi_awsize [1:0];
  assign m_axi_lite_araddr[31] = \<const0> ;
  assign m_axi_lite_araddr[30] = \<const0> ;
  assign m_axi_lite_araddr[29] = \<const0> ;
  assign m_axi_lite_araddr[28] = \<const0> ;
  assign m_axi_lite_araddr[27] = \<const0> ;
  assign m_axi_lite_araddr[26] = \<const0> ;
  assign m_axi_lite_araddr[25] = \<const0> ;
  assign m_axi_lite_araddr[24] = \<const0> ;
  assign m_axi_lite_araddr[23] = \<const0> ;
  assign m_axi_lite_araddr[22] = \<const0> ;
  assign m_axi_lite_araddr[21] = \<const0> ;
  assign m_axi_lite_araddr[20] = \<const0> ;
  assign m_axi_lite_araddr[19] = \<const0> ;
  assign m_axi_lite_araddr[18] = \<const0> ;
  assign m_axi_lite_araddr[17] = \<const0> ;
  assign m_axi_lite_araddr[16] = \<const0> ;
  assign m_axi_lite_araddr[15] = \<const0> ;
  assign m_axi_lite_araddr[14] = \<const0> ;
  assign m_axi_lite_araddr[13] = \<const0> ;
  assign m_axi_lite_araddr[12] = \<const0> ;
  assign m_axi_lite_araddr[11] = \<const0> ;
  assign m_axi_lite_araddr[10] = \<const0> ;
  assign m_axi_lite_araddr[9] = \<const0> ;
  assign m_axi_lite_araddr[8] = \<const0> ;
  assign m_axi_lite_araddr[7] = \<const0> ;
  assign m_axi_lite_araddr[6] = \<const0> ;
  assign m_axi_lite_araddr[5] = \<const0> ;
  assign m_axi_lite_araddr[4] = \<const0> ;
  assign m_axi_lite_araddr[3] = \<const0> ;
  assign m_axi_lite_araddr[2] = \<const0> ;
  assign m_axi_lite_araddr[1] = \<const0> ;
  assign m_axi_lite_araddr[0] = \<const0> ;
  assign m_axi_lite_arprot[1] = \<const0> ;
  assign m_axi_lite_arprot[0] = \<const0> ;
  assign m_axi_lite_arvalid = \<const0> ;
  assign m_axi_lite_awaddr[31] = \<const0> ;
  assign m_axi_lite_awaddr[30] = \<const0> ;
  assign m_axi_lite_awaddr[29] = \<const0> ;
  assign m_axi_lite_awaddr[28] = \<const0> ;
  assign m_axi_lite_awaddr[27] = \<const0> ;
  assign m_axi_lite_awaddr[26] = \<const0> ;
  assign m_axi_lite_awaddr[25] = \<const0> ;
  assign m_axi_lite_awaddr[24] = \<const0> ;
  assign m_axi_lite_awaddr[23] = \<const0> ;
  assign m_axi_lite_awaddr[22] = \<const0> ;
  assign m_axi_lite_awaddr[21] = \<const0> ;
  assign m_axi_lite_awaddr[20] = \<const0> ;
  assign m_axi_lite_awaddr[19] = \<const0> ;
  assign m_axi_lite_awaddr[18] = \<const0> ;
  assign m_axi_lite_awaddr[17] = \<const0> ;
  assign m_axi_lite_awaddr[16] = \<const0> ;
  assign m_axi_lite_awaddr[15] = \<const0> ;
  assign m_axi_lite_awaddr[14] = \<const0> ;
  assign m_axi_lite_awaddr[13] = \<const0> ;
  assign m_axi_lite_awaddr[12] = \<const0> ;
  assign m_axi_lite_awaddr[11] = \<const0> ;
  assign m_axi_lite_awaddr[10] = \<const0> ;
  assign m_axi_lite_awaddr[9] = \<const0> ;
  assign m_axi_lite_awaddr[8] = \<const0> ;
  assign m_axi_lite_awaddr[7] = \<const0> ;
  assign m_axi_lite_awaddr[6] = \<const0> ;
  assign m_axi_lite_awaddr[5] = \<const0> ;
  assign m_axi_lite_awaddr[4] = \<const0> ;
  assign m_axi_lite_awaddr[3] = \<const0> ;
  assign m_axi_lite_awaddr[2] = \<const0> ;
  assign m_axi_lite_awaddr[1] = \<const0> ;
  assign m_axi_lite_awaddr[0] = \<const0> ;
  assign m_axi_lite_awprot[1] = \<const0> ;
  assign m_axi_lite_awprot[0] = \<const0> ;
  assign m_axi_lite_awvalid = \<const0> ;
  assign m_axi_lite_bready = \<const0> ;
  assign m_axi_lite_rready = \<const0> ;
  assign m_axi_lite_wdata[31] = \<const0> ;
  assign m_axi_lite_wdata[30] = \<const0> ;
  assign m_axi_lite_wdata[29] = \<const0> ;
  assign m_axi_lite_wdata[28] = \<const0> ;
  assign m_axi_lite_wdata[27] = \<const0> ;
  assign m_axi_lite_wdata[26] = \<const0> ;
  assign m_axi_lite_wdata[25] = \<const0> ;
  assign m_axi_lite_wdata[24] = \<const0> ;
  assign m_axi_lite_wdata[23] = \<const0> ;
  assign m_axi_lite_wdata[22] = \<const0> ;
  assign m_axi_lite_wdata[21] = \<const0> ;
  assign m_axi_lite_wdata[20] = \<const0> ;
  assign m_axi_lite_wdata[19] = \<const0> ;
  assign m_axi_lite_wdata[18] = \<const0> ;
  assign m_axi_lite_wdata[17] = \<const0> ;
  assign m_axi_lite_wdata[16] = \<const0> ;
  assign m_axi_lite_wdata[15] = \<const0> ;
  assign m_axi_lite_wdata[14] = \<const0> ;
  assign m_axi_lite_wdata[13] = \<const0> ;
  assign m_axi_lite_wdata[12] = \<const0> ;
  assign m_axi_lite_wdata[11] = \<const0> ;
  assign m_axi_lite_wdata[10] = \<const0> ;
  assign m_axi_lite_wdata[9] = \<const0> ;
  assign m_axi_lite_wdata[8] = \<const0> ;
  assign m_axi_lite_wdata[7] = \<const0> ;
  assign m_axi_lite_wdata[6] = \<const0> ;
  assign m_axi_lite_wdata[5] = \<const0> ;
  assign m_axi_lite_wdata[4] = \<const0> ;
  assign m_axi_lite_wdata[3] = \<const0> ;
  assign m_axi_lite_wdata[2] = \<const0> ;
  assign m_axi_lite_wdata[1] = \<const0> ;
  assign m_axi_lite_wdata[0] = \<const0> ;
  assign m_axi_lite_wstrb[3] = \<const0> ;
  assign m_axi_lite_wstrb[2] = \<const0> ;
  assign m_axi_lite_wstrb[1] = \<const0> ;
  assign m_axi_lite_wstrb[0] = \<const0> ;
  assign m_axi_lite_wvalid = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[11] = \<const0> ;
  assign s_axi_bid[10] = \<const0> ;
  assign s_axi_bid[9] = \<const0> ;
  assign s_axi_bid[8] = \<const0> ;
  assign s_axi_bid[7] = \<const0> ;
  assign s_axi_bid[6] = \<const0> ;
  assign s_axi_bid[5] = \<const0> ;
  assign s_axi_bid[4] = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[11] = \<const0> ;
  assign s_axi_rid[10] = \<const0> ;
  assign s_axi_rid[9] = \<const0> ;
  assign s_axi_rid[8] = \<const0> ;
  assign s_axi_rid[7] = \<const0> ;
  assign s_axi_rid[6] = \<const0> ;
  assign s_axi_rid[5] = \<const0> ;
  assign s_axi_rid[4] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_master \axi_lite_master_gen.axi_chip2chip_lite_master_inst 
       (.Q(axi_lite_rx_data),
        .SR(lite_sync_reset),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .ch1_ready_out_reg(s_axi_lite_arready),
        .ch2_ready_out_reg(s_axi_lite_wready),
        .clk_ph_out(rx_user_clk),
        .dout(axi_lite_tx_data),
        .empty(\axi_chip2chip_lite_master_tx_fifo/fifo_empty ),
        .fifo_reset_reg_0(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_33 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_17 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_16 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_15 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_14 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_13 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_12 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_11 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_10 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_9 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_8 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_23 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_22 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_21 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_20 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_19 ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_18 ),
        .rd_en(\axi_chip2chip_lite_master_tx_fifo/fifo_re ),
        .rx_user_reset(rx_user_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .\state_reg[0] (s_axi_lite_bvalid),
        .\state_reg[0]_0 (s_axi_lite_rvalid),
        .\storage_data1_reg[33] ({s_axi_lite_rresp,s_axi_lite_rdata}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_reset_sync \axi_lite_master_gen.reset_sync_lite_mst 
       (.SR(lite_sync_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .sync_reset_out_reg_0(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_34 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_slave \slave_fpga_gen.axi_chip2chip_slave_inst 
       (.AR(\slave_sio_phy.mmcm_idelay_reset ),
        .D(p_1_in0),
        .E(\axi_chip2chip_ch0_ctrl_inst/sync_intr_sent ),
        .Q(axi_lite_rx_data),
        .SR(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_29 ),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .\calib_intr_gen.intr_flop_reg (\slave_fpga_gen.axi_chip2chip_slave_inst_n_152 ),
        .\calib_intr_gen.intr_flop_reg_0 (\slave_fpga_gen.axi_chip2chip_slave_inst_n_154 ),
        .\calib_intr_gen.send_calib_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_31 ),
        .\calib_intr_gen.send_ch0_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_30 ),
        .\calib_intr_gen.send_intr_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_35 ),
        .\calib_intr_gen.tx_ch0_data_reg[10] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_17 ),
        .\calib_intr_gen.tx_ch0_data_reg[11] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_16 ),
        .\calib_intr_gen.tx_ch0_data_reg[12] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_15 ),
        .\calib_intr_gen.tx_ch0_data_reg[13] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_14 ),
        .\calib_intr_gen.tx_ch0_data_reg[14] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_13 ),
        .\calib_intr_gen.tx_ch0_data_reg[15] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_12 ),
        .\calib_intr_gen.tx_ch0_data_reg[16] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_11 ),
        .\calib_intr_gen.tx_ch0_data_reg[17] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_10 ),
        .\calib_intr_gen.tx_ch0_data_reg[18] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_9 ),
        .\calib_intr_gen.tx_ch0_data_reg[19] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_8 ),
        .\calib_intr_gen.tx_ch0_data_reg[3] (axi_lite_tx_data),
        .\calib_intr_gen.tx_ch0_data_reg[4] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_28 ),
        .\calib_intr_gen.tx_ch0_data_reg[4]_0 (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_23 ),
        .\calib_intr_gen.tx_ch0_data_reg[5] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_22 ),
        .\calib_intr_gen.tx_ch0_data_reg[6] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_21 ),
        .\calib_intr_gen.tx_ch0_data_reg[7] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_20 ),
        .\calib_intr_gen.tx_ch0_data_reg[8] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_19 ),
        .\calib_intr_gen.tx_ch0_data_reg[9] (\axi_lite_master_gen.axi_chip2chip_lite_master_inst_n_18 ),
        .clk_ph_out(rx_user_clk),
        .data_out(rx_user_data),
        .din({m_axi_rdata,m_axi_rresp,m_axi_rlast,m_axi_rid}),
        .dout({m_axi_awaddr,m_axi_awburst,\^m_axi_awsize ,m_axi_awlen,m_axi_awid}),
        .empty(\axi_chip2chip_lite_master_tx_fifo/fifo_empty ),
        .\gen_rd_b.doutb_reg_reg_pipe_4_reg ({m_axi_bresp,m_axi_bid}),
        .\gen_wr_a.gen_word_narrow.mem_reg ({m_axi_araddr,m_axi_arburst,\^m_axi_arsize ,m_axi_arlen,m_axi_arid}),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 ({m_axi_wdata,m_axi_wstrb,m_axi_wlast,m_axi_wuser}),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .rd_en(\axi_chip2chip_lite_master_tx_fifo/fifo_re ),
        .\rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_33 ),
        .rx_phy_ready(rx_phy_ready),
        .rx_user_reset(rx_user_reset),
        .\sio_io_stage.tdm_user_data_flop_reg[33]_0 (tx_user_data),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ctrl(tx_phy_ctrl),
        .tx_phy_ready(tx_phy_ready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_if \slave_fpga_gen.axi_chip2chip_slave_phy_inst 
       (.D({axi_c2c_link_status_out,axi_c2c_multi_bit_error_out}),
        .E(\axi_chip2chip_ch0_ctrl_inst/sync_intr_sent ),
        .Q(rx_user_data),
        .SR(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_29 ),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .axi_c2c_selio_rx_diff_clk_in_n(axi_c2c_selio_rx_diff_clk_in_n),
        .axi_c2c_selio_rx_diff_clk_in_p(axi_c2c_selio_rx_diff_clk_in_p),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .\axi_c2c_selio_tx_data_out[16] (tx_user_data),
        .axi_c2c_selio_tx_diff_clk_out_n(axi_c2c_selio_tx_diff_clk_out_n),
        .axi_c2c_selio_tx_diff_clk_out_p(axi_c2c_selio_tx_diff_clk_out_p),
        .\calib_intr_gen.send_ch0_reg (\slave_fpga_gen.axi_chip2chip_slave_inst_n_154 ),
        .\calib_intr_gen.sync_intr_sent_reg[0] (\slave_fpga_gen.axi_chip2chip_slave_inst_n_152 ),
        .\calib_intr_gen.tx_ch0_valid_reg (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_35 ),
        .clk_ph_out(rx_user_clk),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .reset(\slave_sio_phy.mmcm_idelay_reset ),
        .rx_phy_ready(rx_phy_ready),
        .rx_phy_ready_reg(\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_33 ),
        .rx_user_reset(rx_user_reset),
        .\sync_flop_2_reg[1] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_34 ),
        .sync_reset_out_reg(p_1_in0),
        .tx_ch0_valid(tx_ch0_valid),
        .\tx_phy_ctrl_reg[0] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_28 ),
        .\tx_phy_ctrl_reg[0]_0 (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_31 ),
        .\tx_phy_ctrl_reg[1] (\slave_fpga_gen.axi_chip2chip_slave_phy_inst_n_30 ),
        .\tx_phy_ctrl_reg[2] (tx_phy_ctrl),
        .tx_phy_ready(tx_phy_ready));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_asitv10_axisc_register_slice
   (Q,
    axi_rready_rs,
    \storage_data1_reg[33]_0 ,
    axi_rvalid_rs,
    s_axi_lite_rready,
    SR,
    D,
    s_axi_lite_aclk,
    E);
  output [0:0]Q;
  output axi_rready_rs;
  output [33:0]\storage_data1_reg[33]_0 ;
  input axi_rvalid_rs;
  input s_axi_lite_rready;
  input [0:0]SR;
  input [33:0]D;
  input s_axi_lite_aclk;
  input [0:0]E;

  wire [33:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [1:0]areset_d;
  wire axi_rready_rs;
  wire axi_rvalid_rs;
  wire load_s1_from_s2;
  wire s_axi_lite_aclk;
  wire s_axi_lite_rready;
  wire s_ready_i_i_1_n_0;
  wire \state[0]_i_1__2_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[1]_i_1__2_n_0 ;
  wire \state_reg_n_0_[1] ;
  wire storage_data1;
  wire \storage_data1[0]_i_1_n_0 ;
  wire \storage_data1[10]_i_1_n_0 ;
  wire \storage_data1[11]_i_1_n_0 ;
  wire \storage_data1[12]_i_1_n_0 ;
  wire \storage_data1[13]_i_1_n_0 ;
  wire \storage_data1[14]_i_1_n_0 ;
  wire \storage_data1[15]_i_1_n_0 ;
  wire \storage_data1[16]_i_1_n_0 ;
  wire \storage_data1[17]_i_1_n_0 ;
  wire \storage_data1[18]_i_1_n_0 ;
  wire \storage_data1[19]_i_1_n_0 ;
  wire \storage_data1[1]_i_1_n_0 ;
  wire \storage_data1[20]_i_1_n_0 ;
  wire \storage_data1[21]_i_1_n_0 ;
  wire \storage_data1[22]_i_1_n_0 ;
  wire \storage_data1[23]_i_1_n_0 ;
  wire \storage_data1[24]_i_1_n_0 ;
  wire \storage_data1[25]_i_1_n_0 ;
  wire \storage_data1[26]_i_1_n_0 ;
  wire \storage_data1[27]_i_1_n_0 ;
  wire \storage_data1[28]_i_1_n_0 ;
  wire \storage_data1[29]_i_1_n_0 ;
  wire \storage_data1[2]_i_1_n_0 ;
  wire \storage_data1[30]_i_1_n_0 ;
  wire \storage_data1[31]_i_2_n_0 ;
  wire \storage_data1[32]_i_1_n_0 ;
  wire \storage_data1[33]_i_1_n_0 ;
  wire \storage_data1[3]_i_1_n_0 ;
  wire \storage_data1[4]_i_1_n_0 ;
  wire \storage_data1[5]_i_1_n_0 ;
  wire \storage_data1[6]_i_1_n_0 ;
  wire \storage_data1[7]_i_1_n_0 ;
  wire \storage_data1[8]_i_1_n_0 ;
  wire \storage_data1[9]_i_1_n_0 ;
  wire [33:0]\storage_data1_reg[33]_0 ;
  wire [33:0]storage_data2;

  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(s_axi_lite_rready),
        .I2(axi_rvalid_rs),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(axi_rvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(s_axi_lite_rready),
        .I3(load_s1_from_s2),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(s_axi_lite_rready),
        .I2(axi_rvalid_rs),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(load_s1_from_s2),
        .R(\state[0]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(\state[0]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .S(\state[0]_i_1__2_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(SR),
        .Q(areset_d[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(areset_d[0]),
        .Q(areset_d[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFD500FF00C0)) 
    s_ready_i_i_1
       (.I0(\FSM_onehot_state[0]_i_1_n_0 ),
        .I1(s_axi_lite_rready),
        .I2(load_s1_from_s2),
        .I3(areset_d[0]),
        .I4(areset_d[1]),
        .I5(axi_rready_rs),
        .O(s_ready_i_i_1_n_0));
  FDRE s_ready_i_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(axi_rready_rs),
        .R(SR));
  LUT3 #(
    .INIT(8'hF4)) 
    \state[0]_i_1__2 
       (.I0(areset_d[0]),
        .I1(areset_d[1]),
        .I2(SR),
        .O(\state[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h1111111101100000)) 
    \state[0]_i_2 
       (.I0(areset_d[1]),
        .I1(areset_d[0]),
        .I2(axi_rvalid_rs),
        .I3(s_axi_lite_rready),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .I5(\FSM_onehot_state[1]_i_1_n_0 ),
        .O(\state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h2AC8)) 
    \state[0]_i_3 
       (.I0(axi_rvalid_rs),
        .I1(s_axi_lite_rready),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .O(\state[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF4A8)) 
    \state[1]_i_1__2 
       (.I0(Q),
        .I1(\state_reg_n_0_[1] ),
        .I2(s_axi_lite_rready),
        .I3(axi_rvalid_rs),
        .O(\state[1]_i_1__2_n_0 ));
  FDRE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\state[0]_i_3_n_0 ),
        .Q(Q),
        .R(\state[0]_i_1__2_n_0 ));
  FDSE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2_n_0 ),
        .D(\state[1]_i_1__2_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .S(\state[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[0]_i_1 
       (.I0(storage_data2[0]),
        .I1(load_s1_from_s2),
        .I2(D[0]),
        .O(\storage_data1[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[10]_i_1 
       (.I0(storage_data2[10]),
        .I1(load_s1_from_s2),
        .I2(D[10]),
        .O(\storage_data1[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[11]_i_1 
       (.I0(storage_data2[11]),
        .I1(load_s1_from_s2),
        .I2(D[11]),
        .O(\storage_data1[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[12]_i_1 
       (.I0(storage_data2[12]),
        .I1(load_s1_from_s2),
        .I2(D[12]),
        .O(\storage_data1[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[13]_i_1 
       (.I0(storage_data2[13]),
        .I1(load_s1_from_s2),
        .I2(D[13]),
        .O(\storage_data1[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[14]_i_1 
       (.I0(storage_data2[14]),
        .I1(load_s1_from_s2),
        .I2(D[14]),
        .O(\storage_data1[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[15]_i_1 
       (.I0(storage_data2[15]),
        .I1(load_s1_from_s2),
        .I2(D[15]),
        .O(\storage_data1[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[16]_i_1 
       (.I0(storage_data2[16]),
        .I1(load_s1_from_s2),
        .I2(D[16]),
        .O(\storage_data1[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[17]_i_1 
       (.I0(storage_data2[17]),
        .I1(load_s1_from_s2),
        .I2(D[17]),
        .O(\storage_data1[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[18]_i_1 
       (.I0(storage_data2[18]),
        .I1(load_s1_from_s2),
        .I2(D[18]),
        .O(\storage_data1[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[19]_i_1 
       (.I0(storage_data2[19]),
        .I1(load_s1_from_s2),
        .I2(D[19]),
        .O(\storage_data1[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[1]_i_1 
       (.I0(storage_data2[1]),
        .I1(load_s1_from_s2),
        .I2(D[1]),
        .O(\storage_data1[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[20]_i_1 
       (.I0(storage_data2[20]),
        .I1(load_s1_from_s2),
        .I2(D[20]),
        .O(\storage_data1[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[21]_i_1 
       (.I0(storage_data2[21]),
        .I1(load_s1_from_s2),
        .I2(D[21]),
        .O(\storage_data1[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[22]_i_1 
       (.I0(storage_data2[22]),
        .I1(load_s1_from_s2),
        .I2(D[22]),
        .O(\storage_data1[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[23]_i_1 
       (.I0(storage_data2[23]),
        .I1(load_s1_from_s2),
        .I2(D[23]),
        .O(\storage_data1[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[24]_i_1 
       (.I0(storage_data2[24]),
        .I1(load_s1_from_s2),
        .I2(D[24]),
        .O(\storage_data1[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[25]_i_1 
       (.I0(storage_data2[25]),
        .I1(load_s1_from_s2),
        .I2(D[25]),
        .O(\storage_data1[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[26]_i_1 
       (.I0(storage_data2[26]),
        .I1(load_s1_from_s2),
        .I2(D[26]),
        .O(\storage_data1[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[27]_i_1 
       (.I0(storage_data2[27]),
        .I1(load_s1_from_s2),
        .I2(D[27]),
        .O(\storage_data1[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[28]_i_1 
       (.I0(storage_data2[28]),
        .I1(load_s1_from_s2),
        .I2(D[28]),
        .O(\storage_data1[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[29]_i_1 
       (.I0(storage_data2[29]),
        .I1(load_s1_from_s2),
        .I2(D[29]),
        .O(\storage_data1[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[2]_i_1 
       (.I0(storage_data2[2]),
        .I1(load_s1_from_s2),
        .I2(D[2]),
        .O(\storage_data1[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[30]_i_1 
       (.I0(storage_data2[30]),
        .I1(load_s1_from_s2),
        .I2(D[30]),
        .O(\storage_data1[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFE0C0C0)) 
    \storage_data1[31]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(load_s1_from_s2),
        .I2(s_axi_lite_rready),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(axi_rvalid_rs),
        .O(storage_data1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[31]_i_2 
       (.I0(storage_data2[31]),
        .I1(load_s1_from_s2),
        .I2(D[31]),
        .O(\storage_data1[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[32]_i_1 
       (.I0(storage_data2[32]),
        .I1(load_s1_from_s2),
        .I2(D[32]),
        .O(\storage_data1[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[33]_i_1 
       (.I0(storage_data2[33]),
        .I1(load_s1_from_s2),
        .I2(D[33]),
        .O(\storage_data1[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[3]_i_1 
       (.I0(storage_data2[3]),
        .I1(load_s1_from_s2),
        .I2(D[3]),
        .O(\storage_data1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[4]_i_1 
       (.I0(storage_data2[4]),
        .I1(load_s1_from_s2),
        .I2(D[4]),
        .O(\storage_data1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[5]_i_1 
       (.I0(storage_data2[5]),
        .I1(load_s1_from_s2),
        .I2(D[5]),
        .O(\storage_data1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[6]_i_1 
       (.I0(storage_data2[6]),
        .I1(load_s1_from_s2),
        .I2(D[6]),
        .O(\storage_data1[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[7]_i_1 
       (.I0(storage_data2[7]),
        .I1(load_s1_from_s2),
        .I2(D[7]),
        .O(\storage_data1[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[8]_i_1 
       (.I0(storage_data2[8]),
        .I1(load_s1_from_s2),
        .I2(D[8]),
        .O(\storage_data1[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \storage_data1[9]_i_1 
       (.I0(storage_data2[9]),
        .I1(load_s1_from_s2),
        .I2(D[9]),
        .O(\storage_data1[9]_i_1_n_0 ));
  FDRE \storage_data1_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[0]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [0]),
        .R(1'b0));
  FDRE \storage_data1_reg[10] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[10]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [10]),
        .R(1'b0));
  FDRE \storage_data1_reg[11] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[11]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [11]),
        .R(1'b0));
  FDRE \storage_data1_reg[12] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[12]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [12]),
        .R(1'b0));
  FDRE \storage_data1_reg[13] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[13]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [13]),
        .R(1'b0));
  FDRE \storage_data1_reg[14] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[14]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [14]),
        .R(1'b0));
  FDRE \storage_data1_reg[15] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[15]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [15]),
        .R(1'b0));
  FDRE \storage_data1_reg[16] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[16]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [16]),
        .R(1'b0));
  FDRE \storage_data1_reg[17] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[17]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [17]),
        .R(1'b0));
  FDRE \storage_data1_reg[18] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[18]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [18]),
        .R(1'b0));
  FDRE \storage_data1_reg[19] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[19]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [19]),
        .R(1'b0));
  FDRE \storage_data1_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[1]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [1]),
        .R(1'b0));
  FDRE \storage_data1_reg[20] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[20]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [20]),
        .R(1'b0));
  FDRE \storage_data1_reg[21] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[21]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [21]),
        .R(1'b0));
  FDRE \storage_data1_reg[22] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[22]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [22]),
        .R(1'b0));
  FDRE \storage_data1_reg[23] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[23]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [23]),
        .R(1'b0));
  FDRE \storage_data1_reg[24] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[24]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [24]),
        .R(1'b0));
  FDRE \storage_data1_reg[25] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[25]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [25]),
        .R(1'b0));
  FDRE \storage_data1_reg[26] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[26]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [26]),
        .R(1'b0));
  FDRE \storage_data1_reg[27] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[27]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [27]),
        .R(1'b0));
  FDRE \storage_data1_reg[28] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[28]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [28]),
        .R(1'b0));
  FDRE \storage_data1_reg[29] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[29]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [29]),
        .R(1'b0));
  FDRE \storage_data1_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[2]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [2]),
        .R(1'b0));
  FDRE \storage_data1_reg[30] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[30]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [30]),
        .R(1'b0));
  FDRE \storage_data1_reg[31] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[31]_i_2_n_0 ),
        .Q(\storage_data1_reg[33]_0 [31]),
        .R(1'b0));
  FDRE \storage_data1_reg[32] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[32]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [32]),
        .R(1'b0));
  FDRE \storage_data1_reg[33] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[33]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [33]),
        .R(1'b0));
  FDRE \storage_data1_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[3]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [3]),
        .R(1'b0));
  FDRE \storage_data1_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[4]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [4]),
        .R(1'b0));
  FDRE \storage_data1_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[5]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [5]),
        .R(1'b0));
  FDRE \storage_data1_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[6]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [6]),
        .R(1'b0));
  FDRE \storage_data1_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[7]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [7]),
        .R(1'b0));
  FDRE \storage_data1_reg[8] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[8]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [8]),
        .R(1'b0));
  FDRE \storage_data1_reg[9] 
       (.C(s_axi_lite_aclk),
        .CE(storage_data1),
        .D(\storage_data1[9]_i_1_n_0 ),
        .Q(\storage_data1_reg[33]_0 [9]),
        .R(1'b0));
  FDRE \storage_data2_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[0]),
        .Q(storage_data2[0]),
        .R(1'b0));
  FDRE \storage_data2_reg[10] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[10]),
        .Q(storage_data2[10]),
        .R(1'b0));
  FDRE \storage_data2_reg[11] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[11]),
        .Q(storage_data2[11]),
        .R(1'b0));
  FDRE \storage_data2_reg[12] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[12]),
        .Q(storage_data2[12]),
        .R(1'b0));
  FDRE \storage_data2_reg[13] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[13]),
        .Q(storage_data2[13]),
        .R(1'b0));
  FDRE \storage_data2_reg[14] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[14]),
        .Q(storage_data2[14]),
        .R(1'b0));
  FDRE \storage_data2_reg[15] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[15]),
        .Q(storage_data2[15]),
        .R(1'b0));
  FDRE \storage_data2_reg[16] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[16]),
        .Q(storage_data2[16]),
        .R(1'b0));
  FDRE \storage_data2_reg[17] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[17]),
        .Q(storage_data2[17]),
        .R(1'b0));
  FDRE \storage_data2_reg[18] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[18]),
        .Q(storage_data2[18]),
        .R(1'b0));
  FDRE \storage_data2_reg[19] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[19]),
        .Q(storage_data2[19]),
        .R(1'b0));
  FDRE \storage_data2_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[1]),
        .Q(storage_data2[1]),
        .R(1'b0));
  FDRE \storage_data2_reg[20] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[20]),
        .Q(storage_data2[20]),
        .R(1'b0));
  FDRE \storage_data2_reg[21] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[21]),
        .Q(storage_data2[21]),
        .R(1'b0));
  FDRE \storage_data2_reg[22] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[22]),
        .Q(storage_data2[22]),
        .R(1'b0));
  FDRE \storage_data2_reg[23] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[23]),
        .Q(storage_data2[23]),
        .R(1'b0));
  FDRE \storage_data2_reg[24] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[24]),
        .Q(storage_data2[24]),
        .R(1'b0));
  FDRE \storage_data2_reg[25] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[25]),
        .Q(storage_data2[25]),
        .R(1'b0));
  FDRE \storage_data2_reg[26] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[26]),
        .Q(storage_data2[26]),
        .R(1'b0));
  FDRE \storage_data2_reg[27] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[27]),
        .Q(storage_data2[27]),
        .R(1'b0));
  FDRE \storage_data2_reg[28] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[28]),
        .Q(storage_data2[28]),
        .R(1'b0));
  FDRE \storage_data2_reg[29] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[29]),
        .Q(storage_data2[29]),
        .R(1'b0));
  FDRE \storage_data2_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[2]),
        .Q(storage_data2[2]),
        .R(1'b0));
  FDRE \storage_data2_reg[30] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[30]),
        .Q(storage_data2[30]),
        .R(1'b0));
  FDRE \storage_data2_reg[31] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[31]),
        .Q(storage_data2[31]),
        .R(1'b0));
  FDRE \storage_data2_reg[32] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[32]),
        .Q(storage_data2[32]),
        .R(1'b0));
  FDRE \storage_data2_reg[33] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[33]),
        .Q(storage_data2[33]),
        .R(1'b0));
  FDRE \storage_data2_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[3]),
        .Q(storage_data2[3]),
        .R(1'b0));
  FDRE \storage_data2_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[4]),
        .Q(storage_data2[4]),
        .R(1'b0));
  FDRE \storage_data2_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[5]),
        .Q(storage_data2[5]),
        .R(1'b0));
  FDRE \storage_data2_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[6]),
        .Q(storage_data2[6]),
        .R(1'b0));
  FDRE \storage_data2_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[7]),
        .Q(storage_data2[7]),
        .R(1'b0));
  FDRE \storage_data2_reg[8] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[8]),
        .Q(storage_data2[8]),
        .R(1'b0));
  FDRE \storage_data2_reg[9] 
       (.C(s_axi_lite_aclk),
        .CE(E),
        .D(D[9]),
        .Q(storage_data2[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_asitv10_axisc_register_slice" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_asitv10_axisc_register_slice__parameterized0
   (Q,
    axi_bready_rs,
    s_axi_lite_bresp,
    axi_bvalid_rs,
    s_axi_lite_bready,
    SR,
    s_axi_lite_aclk,
    \storage_data2_reg[1]_0 );
  output [0:0]Q;
  output axi_bready_rs;
  output [1:0]s_axi_lite_bresp;
  input axi_bvalid_rs;
  input s_axi_lite_bready;
  input [0:0]SR;
  input s_axi_lite_aclk;
  input [1:0]\storage_data2_reg[1]_0 ;

  wire \FSM_onehot_state[0]_i_1__0_n_0 ;
  wire \FSM_onehot_state[1]_i_1__0_n_0 ;
  wire \FSM_onehot_state[3]_i_1__0_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [1:0]areset_d;
  wire axi_bready_rs;
  wire axi_bvalid_rs;
  wire load_s1_from_s2;
  wire s_axi_lite_aclk;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_ready_i_i_1_n_0;
  wire \state[0]_i_1__3_n_0 ;
  wire \state[0]_i_2__0_n_0 ;
  wire \state[0]_i_3__0_n_0 ;
  wire \state[1]_i_1__3_n_0 ;
  wire \state_reg_n_0_[1] ;
  wire storage_data1;
  wire \storage_data1[0]_i_1_n_0 ;
  wire \storage_data1[1]_i_1_n_0 ;
  wire \storage_data2[0]_i_1_n_0 ;
  wire \storage_data2[1]_i_1_n_0 ;
  wire [1:0]\storage_data2_reg[1]_0 ;
  wire \storage_data2_reg_n_0_[0] ;
  wire \storage_data2_reg_n_0_[1] ;

  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[0]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(s_axi_lite_bready),
        .I2(axi_bvalid_rs),
        .O(\FSM_onehot_state[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[1]_i_1__0 
       (.I0(axi_bvalid_rs),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(s_axi_lite_bready),
        .I3(load_s1_from_s2),
        .O(\FSM_onehot_state[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \FSM_onehot_state[3]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(s_axi_lite_bready),
        .I2(axi_bvalid_rs),
        .O(\FSM_onehot_state[3]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[0]_i_1__0_n_0 ),
        .Q(load_s1_from_s2),
        .R(\state[0]_i_1__3_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(\state[0]_i_1__3_n_0 ));
  (* FSM_ENCODED_STATES = "ZERO:1000,TWO:0001,iSTATE:0100,ONE:0010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\FSM_onehot_state[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .S(\state[0]_i_1__3_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(SR),
        .Q(areset_d[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \areset_d_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(areset_d[0]),
        .Q(areset_d[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFD500FF00C0)) 
    s_ready_i_i_1
       (.I0(\FSM_onehot_state[0]_i_1__0_n_0 ),
        .I1(s_axi_lite_bready),
        .I2(load_s1_from_s2),
        .I3(areset_d[0]),
        .I4(areset_d[1]),
        .I5(axi_bready_rs),
        .O(s_ready_i_i_1_n_0));
  FDRE s_ready_i_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(axi_bready_rs),
        .R(SR));
  LUT3 #(
    .INIT(8'hF4)) 
    \state[0]_i_1__3 
       (.I0(areset_d[0]),
        .I1(areset_d[1]),
        .I2(SR),
        .O(\state[0]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h1111111101100000)) 
    \state[0]_i_2__0 
       (.I0(areset_d[1]),
        .I1(areset_d[0]),
        .I2(axi_bvalid_rs),
        .I3(s_axi_lite_bready),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .I5(\FSM_onehot_state[1]_i_1__0_n_0 ),
        .O(\state[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2AC8)) 
    \state[0]_i_3__0 
       (.I0(axi_bvalid_rs),
        .I1(s_axi_lite_bready),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .O(\state[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'hF4A8)) 
    \state[1]_i_1__3 
       (.I0(Q),
        .I1(\state_reg_n_0_[1] ),
        .I2(s_axi_lite_bready),
        .I3(axi_bvalid_rs),
        .O(\state[1]_i_1__3_n_0 ));
  FDRE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\state[0]_i_3__0_n_0 ),
        .Q(Q),
        .R(\state[0]_i_1__3_n_0 ));
  FDSE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[0]_i_2__0_n_0 ),
        .D(\state[1]_i_1__3_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .S(\state[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \storage_data1[0]_i_1 
       (.I0(\storage_data2_reg_n_0_[0] ),
        .I1(load_s1_from_s2),
        .I2(\storage_data2_reg[1]_0 [0]),
        .I3(storage_data1),
        .I4(s_axi_lite_bresp[0]),
        .O(\storage_data1[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \storage_data1[1]_i_1 
       (.I0(\storage_data2_reg_n_0_[1] ),
        .I1(load_s1_from_s2),
        .I2(\storage_data2_reg[1]_0 [1]),
        .I3(storage_data1),
        .I4(s_axi_lite_bresp[1]),
        .O(\storage_data1[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'hFFE0C0C0)) 
    \storage_data1[1]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(load_s1_from_s2),
        .I2(s_axi_lite_bready),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(axi_bvalid_rs),
        .O(storage_data1));
  FDRE \storage_data1_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\storage_data1[0]_i_1_n_0 ),
        .Q(s_axi_lite_bresp[0]),
        .R(1'b0));
  FDRE \storage_data1_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\storage_data1[1]_i_1_n_0 ),
        .Q(s_axi_lite_bresp[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hBF80)) 
    \storage_data2[0]_i_1 
       (.I0(\storage_data2_reg[1]_0 [0]),
        .I1(axi_bvalid_rs),
        .I2(axi_bready_rs),
        .I3(\storage_data2_reg_n_0_[0] ),
        .O(\storage_data2[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \storage_data2[1]_i_1 
       (.I0(\storage_data2_reg[1]_0 [1]),
        .I1(axi_bvalid_rs),
        .I2(axi_bready_rs),
        .I3(\storage_data2_reg_n_0_[1] ),
        .O(\storage_data2[1]_i_1_n_0 ));
  FDRE \storage_data2_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\storage_data2[0]_i_1_n_0 ),
        .Q(\storage_data2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \storage_data2_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\storage_data2[1]_i_1_n_0 ),
        .Q(\storage_data2_reg_n_0_[1] ),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo
   (full,
    prog_full,
    wr_rst_busy,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    E,
    m_axi_arvalid,
    rst,
    clk_ph_out,
    din,
    m_aclk,
    ar_ch_data_valid,
    p_0_in,
    m_axi_arready);
  output full;
  output prog_full;
  output wr_rst_busy;
  output [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  output [0:0]E;
  output m_axi_arvalid;
  input rst;
  input clk_ph_out;
  input [55:0]din;
  input m_aclk;
  input ar_ch_data_valid;
  input p_0_in;
  input m_axi_arready;

  wire [0:0]E;
  wire ar_ch_data_valid;
  wire clk_ph_out;
  wire [55:0]din;
  wire fifo_empty;
  wire full;
  wire [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;
  wire pack_data_we;
  wire prog_full;
  wire rst;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_2__4_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_arvalid_INST_0
       (.I0(fifo_empty),
        .O(m_axi_arvalid));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \mux_by_2.pack_reg0[27]_i_1__0 
       (.I0(wr_rst_busy),
        .I1(ar_ch_data_valid),
        .I2(full),
        .O(E));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "block" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "2" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "56" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "56" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(\gen_wr_a.gen_word_narrow.mem_reg ),
        .empty(fifo_empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full),
        .rd_clk(m_aclk),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[7:0]),
        .rd_en(xpm_fifo_async_inst_i_2__4_n_0),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(clk_ph_out),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[7:0]),
        .wr_en(pack_data_we),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    xpm_fifo_async_inst_i_1__0
       (.I0(full),
        .I1(ar_ch_data_valid),
        .I2(wr_rst_busy),
        .I3(p_0_in),
        .O(pack_data_we));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__4
       (.I0(m_axi_arready),
        .I1(fifo_empty),
        .O(xpm_fifo_async_inst_i_2__4_n_0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized0
   (full,
    prog_full,
    wr_rst_busy,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    E,
    m_axi_wvalid,
    rst,
    clk_ph_out,
    din,
    m_aclk,
    wd_ch_data_valid,
    p_0_in,
    m_axi_wready);
  output full;
  output prog_full;
  output wr_rst_busy;
  output [37:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  output [0:0]E;
  output m_axi_wvalid;
  input rst;
  input clk_ph_out;
  input [37:0]din;
  input m_aclk;
  input wd_ch_data_valid;
  input p_0_in;
  input m_axi_wready;

  wire [0:0]E;
  wire clk_ph_out;
  wire [37:0]din;
  wire fifo_empty;
  wire full;
  wire [37:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire m_aclk;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_0_in;
  wire pack_data_we;
  wire prog_full;
  wire rst;
  wire wd_ch_data_valid;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_2__5_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [8:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [8:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_wvalid_INST_0
       (.I0(fifo_empty),
        .O(m_axi_wvalid));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \mux_by_2.pack_reg0[18]_i_1 
       (.I0(wr_rst_busy),
        .I1(wd_ch_data_valid),
        .I2(full),
        .O(E));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "block" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "2" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(\gen_wr_a.gen_word_narrow.mem_reg ),
        .empty(fifo_empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full),
        .rd_clk(m_aclk),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(xpm_fifo_async_inst_i_2__5_n_0),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(clk_ph_out),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(pack_data_we),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    xpm_fifo_async_inst_i_1__1
       (.I0(full),
        .I1(wd_ch_data_valid),
        .I2(wr_rst_busy),
        .I3(p_0_in),
        .O(pack_data_we));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__5
       (.I0(m_axi_wready),
        .I1(fifo_empty),
        .O(xpm_fifo_async_inst_i_2__5_n_0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized1
   (dout,
    empty,
    p_12_in,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_4 ,
    m_axi_rready,
    out,
    m_aclk,
    din,
    clk_ph_out,
    int_ch1_ready,
    \tdm_data_out_reg[25] ,
    tx_phy_ready,
    int_ch2_ready_reg,
    \tdm_data_out_reg[25]_0 ,
    m_axi_rvalid);
  output [35:0]dout;
  output empty;
  output p_12_in;
  output \gen_wr_a.gen_word_narrow.mem_reg ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  output m_axi_rready;
  input out;
  input m_aclk;
  input [46:0]din;
  input clk_ph_out;
  input int_ch1_ready;
  input \tdm_data_out_reg[25] ;
  input tx_phy_ready;
  input [0:0]int_ch2_ready_reg;
  input \tdm_data_out_reg[25]_0 ;
  input m_axi_rvalid;

  wire clk_ph_out;
  wire [46:0]din;
  wire [35:0]dout;
  wire empty;
  wire full_int;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  wire int_ch1_ready;
  wire [0:0]int_ch2_ready_reg;
  wire m_aclk;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire out;
  wire p_12_in;
  wire prog_full_int;
  wire \tdm_data_out_reg[25] ;
  wire \tdm_data_out_reg[25]_0 ;
  wire tx_phy_ready;
  wire [43:14]unpack_data_in;
  wire unpack_data_re;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_1__3_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [8:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [8:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'h04)) 
    int_ch1_ready_i_5
       (.I0(empty),
        .I1(tx_phy_ready),
        .I2(int_ch2_ready_reg),
        .O(p_12_in));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h1)) 
    m_axi_rready_INST_0
       (.I0(wr_rst_busy),
        .I1(full_int),
        .O(m_axi_rready));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[20]_i_2 
       (.I0(unpack_data_in[38]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[14]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg ));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[21]_i_2 
       (.I0(unpack_data_in[39]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[15]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0 ));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[22]_i_2 
       (.I0(unpack_data_in[40]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[16]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_1 ));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[23]_i_2 
       (.I0(unpack_data_in[41]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[17]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_2 ));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[24]_i_2 
       (.I0(unpack_data_in[42]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[18]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_3 ));
  LUT5 #(
    .INIT(32'hF8880000)) 
    \tdm_data_out[25]_i_2 
       (.I0(unpack_data_in[43]),
        .I1(\tdm_data_out_reg[25] ),
        .I2(unpack_data_in[19]),
        .I3(\tdm_data_out_reg[25]_0 ),
        .I4(int_ch1_ready),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_4 ));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "block" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "2" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "48" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "48" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized1 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din({1'b0,din}),
        .dout({dout[35:32],unpack_data_in[43:38],dout[31:14],unpack_data_in[19:14],dout[13:0]}),
        .empty(empty),
        .full(full_int),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full_int),
        .rd_clk(clk_ph_out),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(unpack_data_re),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(out),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(m_aclk),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(xpm_fifo_async_inst_i_1__3_n_0),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h02)) 
    xpm_fifo_async_inst_i_1__3
       (.I0(m_axi_rvalid),
        .I1(wr_rst_busy),
        .I2(full_int),
        .O(xpm_fifo_async_inst_i_1__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'h40)) 
    xpm_fifo_async_inst_i_2
       (.I0(empty),
        .I1(int_ch1_ready),
        .I2(\tdm_data_out_reg[25] ),
        .O(unpack_data_re));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized2
   (dout,
    empty,
    int_ch1_ready5__1,
    m_axi_bready,
    out,
    m_aclk,
    \gen_rd_b.doutb_reg_reg_pipe_4_reg ,
    clk_ph_out,
    rd_en,
    tx_phy_ready,
    Q,
    m_axi_bvalid);
  output [13:0]dout;
  output empty;
  output int_ch1_ready5__1;
  output m_axi_bready;
  input out;
  input m_aclk;
  input [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  input clk_ph_out;
  input rd_en;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;

  wire [0:0]Q;
  wire clk_ph_out;
  wire [13:0]dout;
  wire empty;
  wire full_int;
  wire [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  wire int_ch1_ready5__1;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire out;
  wire prog_full_int;
  wire rd_en;
  wire tx_phy_ready;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_1__4_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  LUT3 #(
    .INIT(8'h04)) 
    int_ch1_ready_i_3
       (.I0(empty),
        .I1(tx_phy_ready),
        .I2(Q),
        .O(int_ch1_ready5__1));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h1)) 
    m_axi_bready_INST_0
       (.I0(wr_rst_busy),
        .I1(full_int),
        .O(m_axi_bready));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "14" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "14" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(\gen_rd_b.doutb_reg_reg_pipe_4_reg ),
        .dout(dout),
        .empty(empty),
        .full(full_int),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full_int),
        .rd_clk(clk_ph_out),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[7:0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(out),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(m_aclk),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[7:0]),
        .wr_en(xpm_fifo_async_inst_i_1__4_n_0),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h02)) 
    xpm_fifo_async_inst_i_1__4
       (.I0(m_axi_bvalid),
        .I1(wr_rst_busy),
        .I2(full_int),
        .O(xpm_fifo_async_inst_i_1__4_n_0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized3
   (dout,
    empty,
    \state_reg[0] ,
    D,
    \gen_fwft.empty_fwft_i_reg ,
    rst,
    clk_ph_out,
    Q,
    s_axi_lite_aclk,
    rd_en,
    axi_lite_rx_valid,
    \state_reg[5] ,
    axi_rready_rs,
    axi_bready_rs);
  output [18:0]dout;
  output empty;
  output \state_reg[0] ;
  output [2:0]D;
  output \gen_fwft.empty_fwft_i_reg ;
  input rst;
  input clk_ph_out;
  input [19:0]Q;
  input s_axi_lite_aclk;
  input rd_en;
  input axi_lite_rx_valid;
  input [4:0]\state_reg[5] ;
  input axi_rready_rs;
  input axi_bready_rs;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_bready_rs;
  wire axi_lite_rx_valid;
  wire axi_rready_rs;
  wire clk_ph_out;
  wire [18:0]dout;
  wire empty;
  wire full_int;
  wire \gen_fwft.empty_fwft_i_reg ;
  wire prog_full_int;
  wire rd_en;
  wire rst;
  wire [19:19]rx_data;
  wire s_axi_lite_aclk;
  wire \state_reg[0] ;
  wire [4:0]\state_reg[5] ;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_1__5_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [3:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h04)) 
    ch0_valid_out_i_3
       (.I0(empty),
        .I1(\state_reg[5] [1]),
        .I2(rx_data),
        .O(\gen_fwft.empty_fwft_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'hACA0A0A0)) 
    \state[0]_i_2__1 
       (.I0(\state_reg[5] [0]),
        .I1(\state_reg[5] [1]),
        .I2(empty),
        .I3(dout[18]),
        .I4(rx_data),
        .O(\state_reg[0] ));
  LUT6 #(
    .INIT(64'h0010FFFF00100010)) 
    \state[3]_i_1__0 
       (.I0(dout[18]),
        .I1(empty),
        .I2(\state_reg[5] [1]),
        .I3(rx_data),
        .I4(axi_rready_rs),
        .I5(\state_reg[5] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0020FFFF00200020)) 
    \state[4]_i_1__0 
       (.I0(dout[18]),
        .I1(empty),
        .I2(\state_reg[5] [1]),
        .I3(rx_data),
        .I4(axi_bready_rs),
        .I5(\state_reg[5] [3]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hFFFF0020)) 
    \state[5]_i_2 
       (.I0(\state_reg[5] [1]),
        .I1(empty),
        .I2(rx_data),
        .I3(dout[18]),
        .I4(\state_reg[5] [4]),
        .O(D[2]));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(Q),
        .dout({rx_data,dout}),
        .empty(empty),
        .full(full_int),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full_int),
        .rd_clk(s_axi_lite_aclk),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(clk_ph_out),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(xpm_fifo_async_inst_i_1__5_n_0),
        .wr_rst_busy(wr_rst_busy));
  LUT3 #(
    .INIT(8'h02)) 
    xpm_fifo_async_inst_i_1__5
       (.I0(axi_lite_rx_valid),
        .I1(wr_rst_busy),
        .I2(full_int),
        .O(xpm_fifo_async_inst_i_1__5_n_0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized3__xdcDup__1
   (prog_full,
    wr_rst_busy,
    dout,
    empty,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ,
    use_w_channel_reg,
    next_send_ready1__0,
    out,
    s_axi_lite_aclk,
    Q,
    clk_ph_out,
    rd_en,
    rx_user_reset,
    tx_fifo_we,
    use_w_channel,
    tx_fifo_we_reg,
    s_axi_lite_wvalid);
  output prog_full;
  output wr_rst_busy;
  output [3:0]dout;
  output empty;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  output use_w_channel_reg;
  output next_send_ready1__0;
  input out;
  input s_axi_lite_aclk;
  input [19:0]Q;
  input clk_ph_out;
  input rd_en;
  input rx_user_reset;
  input tx_fifo_we;
  input use_w_channel;
  input [0:0]tx_fifo_we_reg;
  input s_axi_lite_wvalid;

  wire [19:0]Q;
  wire [19:4]axi_lite_tx_data;
  wire clk_ph_out;
  wire [3:0]dout;
  wire empty;
  wire fifo_we;
  wire full_int;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  wire next_send_ready1__0;
  wire out;
  wire prog_full;
  wire rd_en;
  wire rx_user_reset;
  wire s_axi_lite_aclk;
  wire s_axi_lite_wvalid;
  wire tx_fifo_we;
  wire [0:0]tx_fifo_we_reg;
  wire use_w_channel;
  wire use_w_channel_reg;
  wire wr_rst_busy;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [3:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[10]_i_1 
       (.I0(axi_lite_tx_data[10]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[11]_i_1 
       (.I0(axi_lite_tx_data[11]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[12]_i_1 
       (.I0(axi_lite_tx_data[12]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[13]_i_1 
       (.I0(axi_lite_tx_data[13]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[14]_i_1 
       (.I0(axi_lite_tx_data[14]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[15]_i_1 
       (.I0(axi_lite_tx_data[15]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[16]_i_1 
       (.I0(axi_lite_tx_data[16]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[17]_i_1 
       (.I0(axi_lite_tx_data[17]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[18]_i_1 
       (.I0(axi_lite_tx_data[18]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[19]_i_2 
       (.I0(axi_lite_tx_data[19]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[4]_i_1 
       (.I0(axi_lite_tx_data[4]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[5]_i_1 
       (.I0(axi_lite_tx_data[5]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[6]_i_1 
       (.I0(axi_lite_tx_data[6]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[7]_i_1 
       (.I0(axi_lite_tx_data[7]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[8]_i_1 
       (.I0(axi_lite_tx_data[8]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \calib_intr_gen.tx_ch0_data[9]_i_1 
       (.I0(axi_lite_tx_data[9]),
        .I1(rx_user_reset),
        .O(\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h1)) 
    send_ready_i_3
       (.I0(prog_full),
        .I1(wr_rst_busy),
        .O(next_send_ready1__0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    tx_fifo_we_i_2
       (.I0(use_w_channel),
        .I1(tx_fifo_we_reg),
        .I2(s_axi_lite_wvalid),
        .I3(wr_rst_busy),
        .I4(prog_full),
        .O(use_w_channel_reg));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3__xdcDup__1 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(Q),
        .dout({axi_lite_tx_data,dout}),
        .empty(empty),
        .full(full_int),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full),
        .rd_clk(clk_ph_out),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[3:0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(out),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(s_axi_lite_aclk),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[3:0]),
        .wr_en(fifo_we),
        .wr_rst_busy(wr_rst_busy));
  LUT3 #(
    .INIT(8'h10)) 
    xpm_fifo_async_inst_i_1__2
       (.I0(wr_rst_busy),
        .I1(full_int),
        .I2(tx_fifo_we),
        .O(fifo_we));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_async_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__xdcDup__1
   (full,
    prog_full,
    wr_rst_busy,
    dout,
    E,
    m_axi_awvalid,
    rst,
    clk_ph_out,
    din,
    m_aclk,
    aw_ch_data_valid,
    p_0_in,
    m_axi_awready);
  output full;
  output prog_full;
  output wr_rst_busy;
  output [55:0]dout;
  output [0:0]E;
  output m_axi_awvalid;
  input rst;
  input clk_ph_out;
  input [55:0]din;
  input m_aclk;
  input aw_ch_data_valid;
  input p_0_in;
  input m_axi_awready;

  wire [0:0]E;
  wire aw_ch_data_valid;
  wire clk_ph_out;
  wire [55:0]din;
  wire [55:0]dout;
  wire fifo_empty;
  wire full;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;
  wire pack_data_we;
  wire prog_full;
  wire rst;
  wire wr_rst_busy;
  wire xpm_fifo_async_inst_i_2__3_n_0;
  wire NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_overflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_underflow_UNCONNECTED;
  wire NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED;
  wire [7:0]NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_awvalid_INST_0
       (.I0(fifo_empty),
        .O(m_axi_awvalid));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \mux_by_2.pack_reg0[27]_i_1 
       (.I0(wr_rst_busy),
        .I1(aw_ch_data_valid),
        .I2(full),
        .O(E));
  (* CDC_SYNC_STAGES = "3" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "block" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "2" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "56" *) 
  (* READ_MODE = "fwft" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "56" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__xdcDup__1 xpm_fifo_async_inst
       (.almost_empty(NLW_xpm_fifo_async_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_async_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_async_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_async_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(fifo_empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_xpm_fifo_async_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_xpm_fifo_async_inst_prog_empty_UNCONNECTED),
        .prog_full(prog_full),
        .rd_clk(m_aclk),
        .rd_data_count(NLW_xpm_fifo_async_inst_rd_data_count_UNCONNECTED[7:0]),
        .rd_en(xpm_fifo_async_inst_i_2__3_n_0),
        .rd_rst_busy(NLW_xpm_fifo_async_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_async_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_xpm_fifo_async_inst_underflow_UNCONNECTED),
        .wr_ack(NLW_xpm_fifo_async_inst_wr_ack_UNCONNECTED),
        .wr_clk(clk_ph_out),
        .wr_data_count(NLW_xpm_fifo_async_inst_wr_data_count_UNCONNECTED[7:0]),
        .wr_en(pack_data_we),
        .wr_rst_busy(wr_rst_busy));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    xpm_fifo_async_inst_i_1
       (.I0(full),
        .I1(aw_ch_data_valid),
        .I2(wr_rst_busy),
        .I3(p_0_in),
        .O(pack_data_we));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__3
       (.I0(m_axi_awready),
        .I1(fifo_empty),
        .O(xpm_fifo_async_inst_i_2__3_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo
   (prog_full,
    wr_rst_busy,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    m_axi_arvalid,
    rst,
    clk_ph_out,
    Q,
    m_aclk,
    ar_ch_data_valid,
    m_axi_arready,
    rx_user_reset);
  output prog_full;
  output wr_rst_busy;
  output [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  output m_axi_arvalid;
  input rst;
  input clk_ph_out;
  input [27:0]Q;
  input m_aclk;
  input ar_ch_data_valid;
  input m_axi_arready;
  input rx_user_reset;

  wire [27:0]Q;
  wire ar_ch_data_valid;
  wire clk_ph_out;
  wire full_int;
  wire [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire m_aclk;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire p_0_in;
  wire p_0_in1_in;
  wire [27:0]pack_data_out;
  wire prog_full;
  wire rst;
  wire rx_user_reset;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo axi_chip2chip_async_fifo_inst
       (.E(p_0_in1_in),
        .ar_ch_data_valid(ar_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .din({Q,pack_data_out}),
        .full(full_int),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .p_0_in(p_0_in),
        .prog_full(prog_full),
        .rst(rst),
        .wr_rst_busy(wr_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer_35 axi_chip2chip_packer_inst
       (.E(p_0_in1_in),
        .Q(pack_data_out),
        .ar_ch_data_valid(ar_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .full(full_int),
        .\mux_by_2.pack_reg0_reg[27]_0 (Q),
        .p_0_in(p_0_in),
        .rx_user_reset(rx_user_reset),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_awr_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__parameterized0
   (prog_full,
    wr_rst_busy,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    m_axi_wvalid,
    rst,
    clk_ph_out,
    \mux_by_2.pack_reg0_reg[18] ,
    m_aclk,
    wd_ch_data_valid,
    m_axi_wready,
    rx_user_reset);
  output prog_full;
  output wr_rst_busy;
  output [37:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  output m_axi_wvalid;
  input rst;
  input clk_ph_out;
  input [18:0]\mux_by_2.pack_reg0_reg[18] ;
  input m_aclk;
  input wd_ch_data_valid;
  input m_axi_wready;
  input rx_user_reset;

  wire clk_ph_out;
  wire full_int;
  wire [37:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire m_aclk;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire [18:0]\mux_by_2.pack_reg0_reg[18] ;
  wire p_0_in;
  wire p_0_in1_in;
  wire [18:0]pack_data_out;
  wire prog_full;
  wire rst;
  wire rx_user_reset;
  wire wd_ch_data_valid;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized0 axi_chip2chip_async_fifo_inst
       (.E(p_0_in1_in),
        .clk_ph_out(clk_ph_out),
        .din({\mux_by_2.pack_reg0_reg[18] ,pack_data_out}),
        .full(full_int),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .m_aclk(m_aclk),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .p_0_in(p_0_in),
        .prog_full(prog_full),
        .rst(rst),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wr_rst_busy(wr_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer__parameterized0 axi_chip2chip_packer_inst
       (.E(p_0_in1_in),
        .Q(pack_data_out),
        .clk_ph_out(clk_ph_out),
        .full(full_int),
        .\mux_by_2.pack_reg0_reg[18]_0 (\mux_by_2.pack_reg0_reg[18] ),
        .p_0_in(p_0_in),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_awr_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__parameterized1
   (dout,
    empty,
    p_0_in,
    p_12_in,
    D,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \mux_by_2.data_count_reg[0] ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_4 ,
    m_axi_rready,
    out,
    m_aclk,
    din,
    clk_ph_out,
    int_ch1_ready,
    tx_phy_ready,
    int_ch2_ready_reg,
    Q,
    tdm_data_out47_out,
    m_axi_rvalid,
    rx_user_reset);
  output [27:0]dout;
  output empty;
  output p_0_in;
  output p_12_in;
  output [3:0]D;
  output \gen_wr_a.gen_word_narrow.mem_reg ;
  output \mux_by_2.data_count_reg[0] ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  output m_axi_rready;
  input out;
  input m_aclk;
  input [46:0]din;
  input clk_ph_out;
  input int_ch1_ready;
  input tx_phy_ready;
  input [0:0]int_ch2_ready_reg;
  input [3:0]Q;
  input [0:0]tdm_data_out47_out;
  input m_axi_rvalid;
  input rx_user_reset;

  wire [3:0]D;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [46:0]din;
  wire [27:0]dout;
  wire empty;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  wire int_ch1_ready;
  wire [0:0]int_ch2_ready_reg;
  wire m_aclk;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire \mux_by_2.data_count_reg[0] ;
  wire out;
  wire p_0_in;
  wire p_12_in;
  wire rx_user_reset;
  wire [0:0]tdm_data_out47_out;
  wire tx_phy_ready;
  wire [47:20]unpack_data_in;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized1 axi_chip2chip_async_fifo_inst
       (.clk_ph_out(clk_ph_out),
        .din(din),
        .dout({unpack_data_in[47:44],dout[27:14],unpack_data_in[23:20],dout[13:0]}),
        .empty(empty),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (\gen_wr_a.gen_word_narrow.mem_reg_2 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_3 (\gen_wr_a.gen_word_narrow.mem_reg_3 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_4 (\gen_wr_a.gen_word_narrow.mem_reg_4 ),
        .int_ch1_ready(int_ch1_ready),
        .int_ch2_ready_reg(int_ch2_ready_reg),
        .m_aclk(m_aclk),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .out(out),
        .p_12_in(p_12_in),
        .\tdm_data_out_reg[25] (p_0_in),
        .\tdm_data_out_reg[25]_0 (\mux_by_2.data_count_reg[0] ),
        .tx_phy_ready(tx_phy_ready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_unpacker__parameterized1 axi_chip2chip_unpacker_inst
       (.D(D),
        .Q(Q),
        .clk_ph_out(clk_ph_out),
        .dout({unpack_data_in[47:44],unpack_data_in[23:20]}),
        .empty(empty),
        .int_ch1_ready(int_ch1_ready),
        .\mux_by_2.data_count_reg[0]_0 (\mux_by_2.data_count_reg[0] ),
        .\mux_by_2.data_count_reg[1]_0 (p_0_in),
        .rx_user_reset(rx_user_reset),
        .tdm_data_out47_out(tdm_data_out47_out));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_awr_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__xdcDup__1
   (prog_full,
    wr_rst_busy,
    dout,
    m_axi_awvalid,
    rst,
    clk_ph_out,
    Q,
    m_aclk,
    aw_ch_data_valid,
    m_axi_awready,
    rx_user_reset);
  output prog_full;
  output wr_rst_busy;
  output [55:0]dout;
  output m_axi_awvalid;
  input rst;
  input clk_ph_out;
  input [27:0]Q;
  input m_aclk;
  input aw_ch_data_valid;
  input m_axi_awready;
  input rx_user_reset;

  wire [27:0]Q;
  wire aw_ch_data_valid;
  wire clk_ph_out;
  wire [55:0]dout;
  wire full_int;
  wire m_aclk;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire p_0_in;
  wire p_0_in1_in;
  wire [27:0]pack_data_out;
  wire prog_full;
  wire rst;
  wire rx_user_reset;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__xdcDup__1 axi_chip2chip_async_fifo_inst
       (.E(p_0_in1_in),
        .aw_ch_data_valid(aw_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .din({Q,pack_data_out}),
        .dout(dout),
        .full(full_int),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .p_0_in(p_0_in),
        .prog_full(prog_full),
        .rst(rst),
        .wr_rst_busy(wr_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer axi_chip2chip_packer_inst
       (.E(p_0_in1_in),
        .Q(pack_data_out),
        .aw_ch_data_valid(aw_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .full(full_int),
        .\mux_by_2.pack_reg0_reg[27]_0 (Q),
        .p_0_in(p_0_in),
        .rx_user_reset(rx_user_reset),
        .wr_rst_busy(wr_rst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo
   (dout,
    empty,
    int_ch1_ready5__1,
    m_axi_bready,
    out,
    m_aclk,
    \gen_rd_b.doutb_reg_reg_pipe_4_reg ,
    clk_ph_out,
    rd_en,
    tx_phy_ready,
    Q,
    m_axi_bvalid);
  output [13:0]dout;
  output empty;
  output int_ch1_ready5__1;
  output m_axi_bready;
  input out;
  input m_aclk;
  input [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  input clk_ph_out;
  input rd_en;
  input tx_phy_ready;
  input [0:0]Q;
  input m_axi_bvalid;

  wire [0:0]Q;
  wire clk_ph_out;
  wire [13:0]dout;
  wire empty;
  wire [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  wire int_ch1_ready5__1;
  wire m_aclk;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire out;
  wire rd_en;
  wire tx_phy_ready;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized2 axi_chip2chip_async_fifo_inst
       (.Q(Q),
        .clk_ph_out(clk_ph_out),
        .dout(dout),
        .empty(empty),
        .\gen_rd_b.doutb_reg_reg_pipe_4_reg (\gen_rd_b.doutb_reg_reg_pipe_4_reg ),
        .int_ch1_ready5__1(int_ch1_ready5__1),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .out(out),
        .rd_en(rd_en),
        .tx_phy_ready(tx_phy_ready));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_b_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo__parameterized0
   (dout,
    empty,
    \state_reg[0] ,
    D,
    \gen_fwft.empty_fwft_i_reg ,
    rst,
    clk_ph_out,
    Q,
    s_axi_lite_aclk,
    rd_en,
    axi_lite_rx_valid,
    \state_reg[5] ,
    axi_rready_rs,
    axi_bready_rs);
  output [18:0]dout;
  output empty;
  output \state_reg[0] ;
  output [2:0]D;
  output \gen_fwft.empty_fwft_i_reg ;
  input rst;
  input clk_ph_out;
  input [19:0]Q;
  input s_axi_lite_aclk;
  input rd_en;
  input axi_lite_rx_valid;
  input [4:0]\state_reg[5] ;
  input axi_rready_rs;
  input axi_bready_rs;

  wire [2:0]D;
  wire [19:0]Q;
  wire axi_bready_rs;
  wire axi_lite_rx_valid;
  wire axi_rready_rs;
  wire clk_ph_out;
  wire [18:0]dout;
  wire empty;
  wire \gen_fwft.empty_fwft_i_reg ;
  wire rd_en;
  wire rst;
  wire s_axi_lite_aclk;
  wire \state_reg[0] ;
  wire [4:0]\state_reg[5] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized3 axi_chip2chip_async_fifo_inst
       (.D(D),
        .Q(Q),
        .axi_bready_rs(axi_bready_rs),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_rready_rs(axi_rready_rs),
        .clk_ph_out(clk_ph_out),
        .dout(dout),
        .empty(empty),
        .\gen_fwft.empty_fwft_i_reg (\gen_fwft.empty_fwft_i_reg ),
        .rd_en(rd_en),
        .rst(rst),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .\state_reg[0] (\state_reg[0] ),
        .\state_reg[5] (\state_reg[5] ));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_b_fifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo__parameterized0__xdcDup__1
   (prog_full,
    wr_rst_busy,
    dout,
    empty,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ,
    use_w_channel_reg,
    next_send_ready1__0,
    out,
    s_axi_lite_aclk,
    Q,
    clk_ph_out,
    rd_en,
    rx_user_reset,
    tx_fifo_we,
    use_w_channel,
    tx_fifo_we_reg,
    s_axi_lite_wvalid);
  output prog_full;
  output wr_rst_busy;
  output [3:0]dout;
  output empty;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  output use_w_channel_reg;
  output next_send_ready1__0;
  input out;
  input s_axi_lite_aclk;
  input [19:0]Q;
  input clk_ph_out;
  input rd_en;
  input rx_user_reset;
  input tx_fifo_we;
  input use_w_channel;
  input [0:0]tx_fifo_we_reg;
  input s_axi_lite_wvalid;

  wire [19:0]Q;
  wire clk_ph_out;
  wire [3:0]dout;
  wire empty;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  wire next_send_ready1__0;
  wire out;
  wire prog_full;
  wire rd_en;
  wire rx_user_reset;
  wire s_axi_lite_aclk;
  wire s_axi_lite_wvalid;
  wire tx_fifo_we;
  wire [0:0]tx_fifo_we_reg;
  wire use_w_channel;
  wire use_w_channel_reg;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_async_fifo__parameterized3__xdcDup__1 axi_chip2chip_async_fifo_inst
       (.Q(Q),
        .clk_ph_out(clk_ph_out),
        .dout(dout),
        .empty(empty),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ),
        .next_send_ready1__0(next_send_ready1__0),
        .out(out),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rx_user_reset(rx_user_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .tx_fifo_we(tx_fifo_we),
        .tx_fifo_we_reg(tx_fifo_we_reg),
        .use_w_channel(use_w_channel),
        .use_w_channel_reg(use_w_channel_reg),
        .wr_rst_busy(wr_rst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_ch0_ctrl
   (send_ch0,
    axi_lite_rx_valid,
    \calib_intr_gen.intr_flop_reg_0 ,
    Q,
    \calib_intr_gen.tx_ch0_valid_reg_0 ,
    \calib_intr_gen.intr_flop_reg_1 ,
    rd_en,
    \calib_intr_gen.send_ch0_reg_0 ,
    D,
    \calib_intr_gen.tx_ch0_data_reg[26]_0 ,
    \calib_intr_gen.cal_nibble_reg[2]_0 ,
    \calib_intr_gen.cal_nibble_reg[3]_0 ,
    \calib_intr_gen.cal_nibble_reg[0]_0 ,
    \calib_intr_gen.cal_nibble_reg[1]_0 ,
    \calib_intr_gen.cal_nibble_reg[2]_1 ,
    \calib_intr_gen.cal_nibble_reg[3]_1 ,
    \calib_intr_gen.cal_nibble_reg[0]_1 ,
    \calib_intr_gen.cal_nibble_reg[1]_1 ,
    \calib_intr_gen.cal_nibble_reg[2]_2 ,
    \calib_intr_gen.cal_nibble_reg[3]_2 ,
    \calib_intr_gen.cal_nibble_reg[0]_2 ,
    \calib_intr_gen.cal_nibble_reg[1]_2 ,
    \calib_intr_gen.cal_nibble_reg[2]_3 ,
    \calib_intr_gen.cal_nibble_reg[3]_3 ,
    AR,
    axi_c2c_m2s_intr_out,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 ,
    axi_c2c_s2m_intr_in,
    rx_user_reset,
    \calib_intr_gen.send_ch0_reg_1 ,
    clk_ph_out,
    \axi_lite_rx_gen.axi_lite_rx_data_valid ,
    \calib_intr_gen.send_calib_reg_0 ,
    \calib_intr_gen.send_intr_reg_0 ,
    tx_phy_ctrl,
    empty,
    \calib_intr_gen.tx_ch0_data_reg[3]_0 ,
    int_ch0_ready,
    \tdm_data_out_reg[20] ,
    \tdm_data_out_reg[21] ,
    \tdm_data_out_reg[22] ,
    \tdm_data_out_reg[23] ,
    \tdm_data_out_reg[24] ,
    \tdm_data_out_reg[25] ,
    dout,
    p_0_in,
    int_ch1_ready,
    wr_rst_busy,
    prog_full,
    \tdm_data_out_reg[3] ,
    \tdm_data_out_reg[3]_0 ,
    \tdm_data_out_reg[2] ,
    \tdm_data_out_reg[2]_0 ,
    int_ch2_ready,
    m_aresetn,
    m_aclk,
    E,
    \calib_intr_gen.tx_ch0_data_reg[4]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[26]_1 ,
    \calib_intr_gen.tx_ch0_data_reg[19]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[18]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[17]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[16]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[15]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[14]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[13]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[12]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[11]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[10]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[9]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[8]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[7]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[6]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[5]_0 ,
    \calib_intr_gen.tx_ch0_data_reg[4]_1 ,
    SR,
    \axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 ,
    \intr_data_reg[3]_0 );
  output send_ch0;
  output axi_lite_rx_valid;
  output \calib_intr_gen.intr_flop_reg_0 ;
  output [3:0]Q;
  output \calib_intr_gen.tx_ch0_valid_reg_0 ;
  output \calib_intr_gen.intr_flop_reg_1 ;
  output rd_en;
  output \calib_intr_gen.send_ch0_reg_0 ;
  output [14:0]D;
  output [0:0]\calib_intr_gen.tx_ch0_data_reg[26]_0 ;
  output \calib_intr_gen.cal_nibble_reg[2]_0 ;
  output \calib_intr_gen.cal_nibble_reg[3]_0 ;
  output \calib_intr_gen.cal_nibble_reg[0]_0 ;
  output \calib_intr_gen.cal_nibble_reg[1]_0 ;
  output \calib_intr_gen.cal_nibble_reg[2]_1 ;
  output \calib_intr_gen.cal_nibble_reg[3]_1 ;
  output \calib_intr_gen.cal_nibble_reg[0]_1 ;
  output \calib_intr_gen.cal_nibble_reg[1]_1 ;
  output \calib_intr_gen.cal_nibble_reg[2]_2 ;
  output \calib_intr_gen.cal_nibble_reg[3]_2 ;
  output \calib_intr_gen.cal_nibble_reg[0]_2 ;
  output \calib_intr_gen.cal_nibble_reg[1]_2 ;
  output \calib_intr_gen.cal_nibble_reg[2]_3 ;
  output \calib_intr_gen.cal_nibble_reg[3]_3 ;
  output [0:0]AR;
  output [3:0]axi_c2c_m2s_intr_out;
  output [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 ;
  input [3:0]axi_c2c_s2m_intr_in;
  input rx_user_reset;
  input \calib_intr_gen.send_ch0_reg_1 ;
  input clk_ph_out;
  input \axi_lite_rx_gen.axi_lite_rx_data_valid ;
  input \calib_intr_gen.send_calib_reg_0 ;
  input \calib_intr_gen.send_intr_reg_0 ;
  input [1:0]tx_phy_ctrl;
  input empty;
  input [3:0]\calib_intr_gen.tx_ch0_data_reg[3]_0 ;
  input int_ch0_ready;
  input \tdm_data_out_reg[20] ;
  input \tdm_data_out_reg[21] ;
  input \tdm_data_out_reg[22] ;
  input \tdm_data_out_reg[23] ;
  input \tdm_data_out_reg[24] ;
  input \tdm_data_out_reg[25] ;
  input [13:0]dout;
  input p_0_in;
  input int_ch1_ready;
  input wr_rst_busy;
  input prog_full;
  input \tdm_data_out_reg[3] ;
  input \tdm_data_out_reg[3]_0 ;
  input \tdm_data_out_reg[2] ;
  input \tdm_data_out_reg[2]_0 ;
  input int_ch2_ready;
  input m_aresetn;
  input m_aclk;
  input [0:0]E;
  input \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  input [0:0]\calib_intr_gen.tx_ch0_data_reg[26]_1 ;
  input \calib_intr_gen.tx_ch0_data_reg[19]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[18]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[17]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[16]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[15]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[14]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[13]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[12]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[11]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[10]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[9]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[8]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[7]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[6]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[5]_0 ;
  input \calib_intr_gen.tx_ch0_data_reg[4]_1 ;
  input [0:0]SR;
  input [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 ;
  input [0:0]\intr_data_reg[3]_0 ;

  wire [0:0]AR;
  wire [14:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 ;
  wire [19:0]\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 ;
  wire \axi_lite_rx_gen.axi_lite_rx_data_valid ;
  wire axi_lite_rx_valid;
  wire axi_lite_tx_ready;
  wire \calib_intr_gen.axi_lite_tx_ready_i_1_n_0 ;
  wire \calib_intr_gen.cal_nibble[0]_i_1_n_0 ;
  wire \calib_intr_gen.cal_nibble[1]_i_1_n_0 ;
  wire \calib_intr_gen.cal_nibble[2]_i_1_n_0 ;
  wire \calib_intr_gen.cal_nibble[3]_i_2_n_0 ;
  wire \calib_intr_gen.cal_nibble_reg[0]_0 ;
  wire \calib_intr_gen.cal_nibble_reg[0]_1 ;
  wire \calib_intr_gen.cal_nibble_reg[0]_2 ;
  wire \calib_intr_gen.cal_nibble_reg[1]_0 ;
  wire \calib_intr_gen.cal_nibble_reg[1]_1 ;
  wire \calib_intr_gen.cal_nibble_reg[1]_2 ;
  wire \calib_intr_gen.cal_nibble_reg[2]_0 ;
  wire \calib_intr_gen.cal_nibble_reg[2]_1 ;
  wire \calib_intr_gen.cal_nibble_reg[2]_2 ;
  wire \calib_intr_gen.cal_nibble_reg[2]_3 ;
  wire \calib_intr_gen.cal_nibble_reg[3]_0 ;
  wire \calib_intr_gen.cal_nibble_reg[3]_1 ;
  wire \calib_intr_gen.cal_nibble_reg[3]_2 ;
  wire \calib_intr_gen.cal_nibble_reg[3]_3 ;
  wire \calib_intr_gen.intr_flop_i_1_n_0 ;
  wire \calib_intr_gen.intr_flop_i_3_n_0 ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire \calib_intr_gen.intr_flop_reg_1 ;
  wire \calib_intr_gen.send_calib_reg_0 ;
  wire \calib_intr_gen.send_ch0_reg_0 ;
  wire \calib_intr_gen.send_ch0_reg_1 ;
  wire \calib_intr_gen.send_intr ;
  wire \calib_intr_gen.send_intr_reg_0 ;
  wire \calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[10]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[11]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[12]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[13]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[14]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[15]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[16]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[17]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[18]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[19]_0 ;
  wire [0:0]\calib_intr_gen.tx_ch0_data_reg[26]_0 ;
  wire [0:0]\calib_intr_gen.tx_ch0_data_reg[26]_1 ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[4]_1 ;
  wire \calib_intr_gen.tx_ch0_data_reg[5]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[6]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[7]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[8]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[9]_0 ;
  wire \calib_intr_gen.tx_ch0_valid_i_1_n_0 ;
  wire \calib_intr_gen.tx_ch0_valid_reg_0 ;
  wire clk_ph_out;
  wire [13:0]dout;
  wire empty;
  wire int_ch0_ready;
  wire int_ch1_ready;
  wire int_ch2_ready;
  wire [3:0]intr_data;
  wire [0:0]\intr_data_reg[3]_0 ;
  wire intr_event;
  wire m_aclk;
  wire m_aresetn;
  wire p_0_in;
  wire prog_full;
  wire rd_en;
  wire rx_user_reset;
  wire send_calib;
  wire send_ch0;
  wire [3:0]sync_intr_in;
  wire [3:0]sync_intr_in_d1;
  wire [3:0]sync_intr_out;
  wire [3:0]sync_intr_sent;
  wire \tdm_data_out_reg[20] ;
  wire \tdm_data_out_reg[21] ;
  wire \tdm_data_out_reg[22] ;
  wire \tdm_data_out_reg[23] ;
  wire \tdm_data_out_reg[24] ;
  wire \tdm_data_out_reg[25] ;
  wire \tdm_data_out_reg[2] ;
  wire \tdm_data_out_reg[2]_0 ;
  wire \tdm_data_out_reg[3] ;
  wire \tdm_data_out_reg[3]_0 ;
  wire [19:0]tx_ch0_tdm_data;
  wire [1:0]tx_phy_ctrl;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell axi_chip2chip_sync_cell_intr_in_inst
       (.D(sync_intr_in),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .clk_ph_out(clk_ph_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell_16 axi_chip2chip_sync_cell_intr_out_inst
       (.D(sync_intr_out),
        .Q(intr_data),
        .m_aclk(m_aclk));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [0]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [0]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [10]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [10]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [11]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [11]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [12]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [12]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [13]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [13]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [14]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [14]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [15]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [15]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [16]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [16]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [17]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [17]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [18]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [18]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [19]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [19]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [1]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [1]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [2]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [2]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [3]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [3]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [4]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [4]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [5]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [5]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [6]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [6]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [7]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [7]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [8]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [8]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_data_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [9]),
        .Q(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 [9]),
        .R(1'b0));
  FDRE \axi_lite_rx_gen.axi_lite_rx_valid_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_valid ),
        .Q(axi_lite_rx_valid),
        .R(rx_user_reset));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \calib_intr_gen.axi_lite_tx_ready_i_1 
       (.I0(\calib_intr_gen.send_calib_reg_0 ),
        .I1(\calib_intr_gen.intr_flop_reg_0 ),
        .I2(rx_user_reset),
        .I3(intr_event),
        .I4(empty),
        .I5(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .O(\calib_intr_gen.axi_lite_tx_ready_i_1_n_0 ));
  FDRE \calib_intr_gen.axi_lite_tx_ready_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.axi_lite_tx_ready_i_1_n_0 ),
        .Q(axi_lite_tx_ready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000FBFFFFFF0000)) 
    \calib_intr_gen.cal_nibble[0]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(tx_phy_ctrl[0]),
        .I5(tx_phy_ctrl[1]),
        .O(\calib_intr_gen.cal_nibble[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F0F0F00600000)) 
    \calib_intr_gen.cal_nibble[1]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(tx_phy_ctrl[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_phy_ctrl[0]),
        .O(\calib_intr_gen.cal_nibble[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAFFAAFF8AFFAA)) 
    \calib_intr_gen.cal_nibble[2]_i_1 
       (.I0(tx_phy_ctrl[1]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(tx_phy_ctrl[0]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\calib_intr_gen.cal_nibble[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004000)) 
    \calib_intr_gen.cal_nibble[3]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(tx_phy_ctrl[1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_phy_ctrl[0]),
        .O(\calib_intr_gen.cal_nibble[3]_i_2_n_0 ));
  FDRE \calib_intr_gen.cal_nibble_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.cal_nibble[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.cal_nibble[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.cal_nibble[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(SR));
  FDRE \calib_intr_gen.cal_nibble_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.cal_nibble[3]_i_2_n_0 ),
        .Q(Q[3]),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000AE)) 
    \calib_intr_gen.intr_flop_i_1 
       (.I0(intr_event),
        .I1(\calib_intr_gen.intr_flop_reg_0 ),
        .I2(\calib_intr_gen.send_intr ),
        .I3(\calib_intr_gen.send_calib_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.intr_flop_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \calib_intr_gen.intr_flop_i_2 
       (.I0(sync_intr_in_d1[1]),
        .I1(sync_intr_sent[1]),
        .I2(sync_intr_in_d1[2]),
        .I3(sync_intr_sent[2]),
        .I4(\calib_intr_gen.intr_flop_i_3_n_0 ),
        .O(intr_event));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \calib_intr_gen.intr_flop_i_3 
       (.I0(sync_intr_sent[0]),
        .I1(sync_intr_in_d1[0]),
        .I2(sync_intr_sent[3]),
        .I3(sync_intr_in_d1[3]),
        .O(\calib_intr_gen.intr_flop_i_3_n_0 ));
  FDRE \calib_intr_gen.intr_flop_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.intr_flop_i_1_n_0 ),
        .Q(\calib_intr_gen.intr_flop_reg_0 ),
        .R(1'b0));
  FDRE \calib_intr_gen.send_calib_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.send_calib_reg_0 ),
        .Q(send_calib),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.send_ch0_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.send_ch0_reg_1 ),
        .Q(send_ch0),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.send_intr_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.send_intr_reg_0 ),
        .Q(\calib_intr_gen.send_intr ),
        .R(1'b0));
  FDRE \calib_intr_gen.sync_intr_sent_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(sync_intr_in_d1[0]),
        .Q(sync_intr_sent[0]),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.sync_intr_sent_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(sync_intr_in_d1[1]),
        .Q(sync_intr_sent[1]),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.sync_intr_sent_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(sync_intr_in_d1[2]),
        .Q(sync_intr_sent[2]),
        .R(rx_user_reset));
  FDRE \calib_intr_gen.sync_intr_sent_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(sync_intr_in_d1[3]),
        .Q(sync_intr_sent[3]),
        .R(rx_user_reset));
  LUT5 #(
    .INIT(32'h0000CACC)) 
    \calib_intr_gen.tx_ch0_data[0]_i_1 
       (.I0(sync_intr_in_d1[0]),
        .I1(\calib_intr_gen.tx_ch0_data_reg[3]_0 [0]),
        .I2(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I3(\calib_intr_gen.intr_flop_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000200)) 
    \calib_intr_gen.tx_ch0_data[19]_i_1 
       (.I0(\calib_intr_gen.intr_flop_reg_0 ),
        .I1(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I2(rx_user_reset),
        .I3(\calib_intr_gen.intr_flop_reg_1 ),
        .I4(\calib_intr_gen.send_calib_reg_0 ),
        .O(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000CACC)) 
    \calib_intr_gen.tx_ch0_data[1]_i_1 
       (.I0(sync_intr_in_d1[1]),
        .I1(\calib_intr_gen.tx_ch0_data_reg[3]_0 [1]),
        .I2(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I3(\calib_intr_gen.intr_flop_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000CACC)) 
    \calib_intr_gen.tx_ch0_data[2]_i_1 
       (.I0(sync_intr_in_d1[2]),
        .I1(\calib_intr_gen.tx_ch0_data_reg[3]_0 [2]),
        .I2(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I3(\calib_intr_gen.intr_flop_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000CACC)) 
    \calib_intr_gen.tx_ch0_data[3]_i_1 
       (.I0(sync_intr_in_d1[3]),
        .I1(\calib_intr_gen.tx_ch0_data_reg[3]_0 [3]),
        .I2(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I3(\calib_intr_gen.intr_flop_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ));
  FDRE \calib_intr_gen.tx_ch0_data_reg[0] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data[0]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[0]),
        .R(1'b0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[10] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[10]_0 ),
        .Q(tx_ch0_tdm_data[10]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[11] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[11]_0 ),
        .Q(tx_ch0_tdm_data[11]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[12] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[12]_0 ),
        .Q(tx_ch0_tdm_data[12]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[13] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[13]_0 ),
        .Q(tx_ch0_tdm_data[13]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[14] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[14]_0 ),
        .Q(tx_ch0_tdm_data[14]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[15] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[15]_0 ),
        .Q(tx_ch0_tdm_data[15]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[16] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[16]_0 ),
        .Q(tx_ch0_tdm_data[16]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[17] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[17]_0 ),
        .Q(tx_ch0_tdm_data[17]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[18] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[18]_0 ),
        .Q(tx_ch0_tdm_data[18]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[19] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[19]_0 ),
        .Q(tx_ch0_tdm_data[19]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDRE \calib_intr_gen.tx_ch0_data_reg[1] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data[1]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[1]),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[26] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[26]_1 ),
        .Q(\calib_intr_gen.tx_ch0_data_reg[26]_0 ),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[2] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data[2]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[2]),
        .R(1'b0));
  FDRE \calib_intr_gen.tx_ch0_data_reg[3] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data[3]_i_1_n_0 ),
        .Q(tx_ch0_tdm_data[3]),
        .R(1'b0));
  FDSE \calib_intr_gen.tx_ch0_data_reg[4] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[4]_1 ),
        .Q(tx_ch0_tdm_data[4]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[5] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[5]_0 ),
        .Q(tx_ch0_tdm_data[5]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[6] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[6]_0 ),
        .Q(tx_ch0_tdm_data[6]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[7] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[7]_0 ),
        .Q(tx_ch0_tdm_data[7]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[8] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[8]_0 ),
        .Q(tx_ch0_tdm_data[8]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  FDSE \calib_intr_gen.tx_ch0_data_reg[9] 
       (.C(clk_ph_out),
        .CE(\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .D(\calib_intr_gen.tx_ch0_data_reg[9]_0 ),
        .Q(tx_ch0_tdm_data[9]),
        .S(\calib_intr_gen.tx_ch0_data[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000AE)) 
    \calib_intr_gen.tx_ch0_valid_i_1 
       (.I0(\calib_intr_gen.intr_flop_reg_1 ),
        .I1(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .I2(int_ch0_ready),
        .I3(\calib_intr_gen.send_calib_reg_0 ),
        .I4(rx_user_reset),
        .O(\calib_intr_gen.tx_ch0_valid_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h00AB)) 
    \calib_intr_gen.tx_ch0_valid_i_2 
       (.I0(\calib_intr_gen.intr_flop_reg_0 ),
        .I1(intr_event),
        .I2(empty),
        .I3(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .O(\calib_intr_gen.intr_flop_reg_1 ));
  FDRE \calib_intr_gen.tx_ch0_valid_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\calib_intr_gen.tx_ch0_valid_i_1_n_0 ),
        .Q(\calib_intr_gen.tx_ch0_valid_reg_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h2)) 
    int_ch0_ready_i_1
       (.I0(send_ch0),
        .I1(send_calib),
        .O(\calib_intr_gen.send_ch0_reg_0 ));
  FDRE \intr_data_reg[0] 
       (.C(clk_ph_out),
        .CE(\intr_data_reg[3]_0 ),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [0]),
        .Q(intr_data[0]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[1] 
       (.C(clk_ph_out),
        .CE(\intr_data_reg[3]_0 ),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [1]),
        .Q(intr_data[1]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[2] 
       (.C(clk_ph_out),
        .CE(\intr_data_reg[3]_0 ),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [2]),
        .Q(intr_data[2]),
        .R(rx_user_reset));
  FDRE \intr_data_reg[3] 
       (.C(clk_ph_out),
        .CE(\intr_data_reg[3]_0 ),
        .D(\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 [3]),
        .Q(intr_data[3]),
        .R(rx_user_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \intr_out[3]_i_1 
       (.I0(m_aresetn),
        .O(AR));
  FDCE \intr_out_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[0]),
        .Q(axi_c2c_m2s_intr_out[0]));
  FDCE \intr_out_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[1]),
        .Q(axi_c2c_m2s_intr_out[1]));
  FDCE \intr_out_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[2]),
        .Q(axi_c2c_m2s_intr_out[2]));
  FDCE \intr_out_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_intr_out[3]),
        .Q(axi_c2c_m2s_intr_out[3]));
  (* equivalent_register_removal = "no" *) 
  FDRE \sync_intr_in_d1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[0]),
        .Q(sync_intr_in_d1[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \sync_intr_in_d1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[1]),
        .Q(sync_intr_in_d1[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \sync_intr_in_d1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[2]),
        .Q(sync_intr_in_d1[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \sync_intr_in_d1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_intr_in[3]),
        .Q(sync_intr_in_d1[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tdm_data_out[0]_i_1 
       (.I0(Q[0]),
        .I1(int_ch1_ready),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[10]_i_2 
       (.I0(Q[2]),
        .I1(tx_ch0_tdm_data[4]),
        .I2(int_ch0_ready),
        .I3(dout[4]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[2]_1 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[11]_i_2 
       (.I0(Q[3]),
        .I1(tx_ch0_tdm_data[5]),
        .I2(int_ch0_ready),
        .I3(dout[5]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[3]_1 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[12]_i_2 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[6]),
        .I2(int_ch0_ready),
        .I3(dout[6]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[13]_i_2 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[7]),
        .I2(int_ch0_ready),
        .I3(dout[7]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[14]_i_2 
       (.I0(Q[2]),
        .I1(tx_ch0_tdm_data[8]),
        .I2(int_ch0_ready),
        .I3(dout[8]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[15]_i_2 
       (.I0(Q[3]),
        .I1(tx_ch0_tdm_data[9]),
        .I2(int_ch0_ready),
        .I3(dout[9]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[3]_2 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[16]_i_2 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[10]),
        .I2(int_ch0_ready),
        .I3(dout[10]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[0]_2 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[17]_i_2 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[11]),
        .I2(int_ch0_ready),
        .I3(dout[11]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[1]_2 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[18]_i_2 
       (.I0(Q[2]),
        .I1(tx_ch0_tdm_data[12]),
        .I2(int_ch0_ready),
        .I3(dout[12]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[2]_3 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[19]_i_2 
       (.I0(Q[3]),
        .I1(tx_ch0_tdm_data[13]),
        .I2(int_ch0_ready),
        .I3(dout[13]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[3]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tdm_data_out[1]_i_1 
       (.I0(Q[1]),
        .I1(int_ch2_ready),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[20]_i_1 
       (.I0(\tdm_data_out_reg[20] ),
        .I1(Q[0]),
        .I2(tx_ch0_tdm_data[14]),
        .I3(int_ch0_ready),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[21]_i_1 
       (.I0(\tdm_data_out_reg[21] ),
        .I1(Q[1]),
        .I2(tx_ch0_tdm_data[15]),
        .I3(int_ch0_ready),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[22]_i_1 
       (.I0(\tdm_data_out_reg[22] ),
        .I1(Q[2]),
        .I2(tx_ch0_tdm_data[16]),
        .I3(int_ch0_ready),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[23]_i_1 
       (.I0(\tdm_data_out_reg[23] ),
        .I1(Q[3]),
        .I2(tx_ch0_tdm_data[17]),
        .I3(int_ch0_ready),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[24]_i_1 
       (.I0(\tdm_data_out_reg[24] ),
        .I1(Q[0]),
        .I2(tx_ch0_tdm_data[18]),
        .I3(int_ch0_ready),
        .O(D[9]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'hFEEE)) 
    \tdm_data_out[25]_i_1 
       (.I0(\tdm_data_out_reg[25] ),
        .I1(Q[1]),
        .I2(tx_ch0_tdm_data[19]),
        .I3(int_ch0_ready),
        .O(D[10]));
  LUT4 #(
    .INIT(16'hAFAE)) 
    \tdm_data_out[2]_i_1 
       (.I0(Q[2]),
        .I1(\tdm_data_out_reg[2] ),
        .I2(send_calib),
        .I3(\tdm_data_out_reg[2]_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[30]_i_1 
       (.I0(\calib_intr_gen.tx_ch0_data_reg[26]_0 ),
        .I1(int_ch0_ready),
        .I2(Q[2]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[31]_i_1 
       (.I0(\calib_intr_gen.tx_ch0_data_reg[26]_0 ),
        .I1(int_ch0_ready),
        .I2(Q[3]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[32]_i_1 
       (.I0(\calib_intr_gen.tx_ch0_data_reg[26]_0 ),
        .I1(int_ch0_ready),
        .I2(Q[0]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \tdm_data_out[33]_i_1 
       (.I0(\calib_intr_gen.tx_ch0_data_reg[26]_0 ),
        .I1(int_ch0_ready),
        .I2(Q[1]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'hAFAE)) 
    \tdm_data_out[3]_i_1 
       (.I0(Q[3]),
        .I1(\tdm_data_out_reg[3] ),
        .I2(send_calib),
        .I3(\tdm_data_out_reg[3]_0 ),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hAFAE)) 
    \tdm_data_out[4]_i_1 
       (.I0(Q[0]),
        .I1(wr_rst_busy),
        .I2(send_calib),
        .I3(prog_full),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[6]_i_2 
       (.I0(Q[2]),
        .I1(tx_ch0_tdm_data[0]),
        .I2(int_ch0_ready),
        .I3(dout[0]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[7]_i_2 
       (.I0(Q[3]),
        .I1(tx_ch0_tdm_data[1]),
        .I2(int_ch0_ready),
        .I3(dout[1]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[8]_i_2 
       (.I0(Q[0]),
        .I1(tx_ch0_tdm_data[2]),
        .I2(int_ch0_ready),
        .I3(dout[2]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[9]_i_2 
       (.I0(Q[1]),
        .I1(tx_ch0_tdm_data[3]),
        .I2(int_ch0_ready),
        .I3(dout[3]),
        .I4(p_0_in),
        .I5(int_ch1_ready),
        .O(\calib_intr_gen.cal_nibble_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__1
       (.I0(axi_lite_tx_ready),
        .I1(empty),
        .O(rd_en));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_clk_gen
   (SR,
    D,
    m_aresetn_0,
    in0,
    clk_ph_out,
    Q,
    \count_4_reg[2] ,
    m_aresetn,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    reset);
  output [0:0]SR;
  output [2:0]D;
  output m_aresetn_0;
  output in0;
  output clk_ph_out;
  input [0:0]Q;
  input [2:0]\count_4_reg[2] ;
  input m_aresetn;
  input axi_c2c_selio_rx_diff_clk_in_p;
  input axi_c2c_selio_rx_diff_clk_in_n;
  input reset;

  wire [2:0]D;
  wire [0:0]Q;
  wire [0:0]SR;
  wire axi_c2c_selio_rx_diff_clk_in_n;
  wire axi_c2c_selio_rx_diff_clk_in_p;
  wire bufgn_inst_n_0;
  wire clk_in_ibufg;
  wire clk_locked;
  wire clk_out;
  wire clk_outn;
  wire clk_ph_out;
  wire clkfbout;
  wire clkfbout_bufg;
  wire [2:0]\count_4_reg[2] ;
  wire in0;
  wire m_aresetn;
  wire m_aresetn_0;
  wire reset;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKFBOUTB_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3B_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT4_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT5_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT6_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_DRDY_UNCONNECTED ;
  wire \NLW_gen_mmcme2.mmcm_adv_inst_PSDONE_UNCONNECTED ;
  wire [15:0]\NLW_gen_mmcme2.mmcm_adv_inst_DO_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_current_state[2]_i_1 
       (.I0(clk_locked),
        .O(SR));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufg_inst
       (.I(clk_out),
        .O(clk_ph_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufgn_inst
       (.I(clk_outn),
        .O(bufgn_inst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \count_4[0]_i_1__0 
       (.I0(Q),
        .I1(\count_4_reg[2] [0]),
        .I2(clk_locked),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'h1400)) 
    \count_4[1]_i_1__0 
       (.I0(Q),
        .I1(\count_4_reg[2] [0]),
        .I2(\count_4_reg[2] [1]),
        .I3(clk_locked),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT5 #(
    .INIT(32'h14440000)) 
    \count_4[2]_i_1 
       (.I0(Q),
        .I1(\count_4_reg[2] [2]),
        .I2(\count_4_reg[2] [0]),
        .I3(\count_4_reg[2] [1]),
        .I4(clk_locked),
        .O(D[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* XILINX_LEGACY_PRIM = "IBUFGDS" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \diff_clk_input_gen.ibufgds_clk_inst 
       (.I(axi_c2c_selio_rx_diff_clk_in_p),
        .IB(axi_c2c_selio_rx_diff_clk_in_n),
        .O(clk_in_ibufg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG fb_bufg_inst
       (.I(clkfbout),
        .O(clkfbout_bufg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(12.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(12.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(90.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(1),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    \gen_mmcme2.mmcm_adv_inst 
       (.CLKFBIN(clkfbout_bufg),
        .CLKFBOUT(clkfbout),
        .CLKFBOUTB(\NLW_gen_mmcme2.mmcm_adv_inst_CLKFBOUTB_UNCONNECTED ),
        .CLKFBSTOPPED(\NLW_gen_mmcme2.mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED ),
        .CLKIN1(clk_in_ibufg),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(\NLW_gen_mmcme2.mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED ),
        .CLKOUT0(clk_out),
        .CLKOUT0B(clk_outn),
        .CLKOUT1(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1_UNCONNECTED ),
        .CLKOUT1B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT1B_UNCONNECTED ),
        .CLKOUT2(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2_UNCONNECTED ),
        .CLKOUT2B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT2B_UNCONNECTED ),
        .CLKOUT3(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3_UNCONNECTED ),
        .CLKOUT3B(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT3B_UNCONNECTED ),
        .CLKOUT4(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT4_UNCONNECTED ),
        .CLKOUT5(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT5_UNCONNECTED ),
        .CLKOUT6(\NLW_gen_mmcme2.mmcm_adv_inst_CLKOUT6_UNCONNECTED ),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(\NLW_gen_mmcme2.mmcm_adv_inst_DO_UNCONNECTED [15:0]),
        .DRDY(\NLW_gen_mmcme2.mmcm_adv_inst_DRDY_UNCONNECTED ),
        .DWE(1'b0),
        .LOCKED(clk_locked),
        .PSCLK(1'b0),
        .PSDONE(\NLW_gen_mmcme2.mmcm_adv_inst_PSDONE_UNCONNECTED ),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(reset));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT2 #(
    .INIT(4'h7)) 
    reset_idelay_Ctrl_inferred__0_i_1
       (.I0(Q),
        .I1(clk_locked),
        .O(in0));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT2 #(
    .INIT(4'h7)) 
    sync_reset_out_i_1
       (.I0(clk_locked),
        .I1(m_aresetn),
        .O(m_aresetn_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_decoder
   (aw_ch_data_valid,
    ar_ch_data_valid,
    wd_ch_data_valid,
    \data_out_reg[27]_0 ,
    \ctrl_info_reg[1]_0 ,
    \axi_lite_rx_gen.axi_lite_rx_data_valid ,
    \data_out_reg[19]_0 ,
    rx_user_reset,
    clk_ph_out,
    rx_phy_ready,
    rx_user_data_valid_flop,
    Q);
  output aw_ch_data_valid;
  output ar_ch_data_valid;
  output wd_ch_data_valid;
  output [27:0]\data_out_reg[27]_0 ;
  output [1:0]\ctrl_info_reg[1]_0 ;
  output \axi_lite_rx_gen.axi_lite_rx_data_valid ;
  output [0:0]\data_out_reg[19]_0 ;
  input rx_user_reset;
  input clk_ph_out;
  input rx_phy_ready;
  input rx_user_data_valid_flop;
  input [33:0]Q;

  wire [33:0]Q;
  wire ar_ch_data_valid;
  wire aw_ch_data_valid;
  wire \axi_lite_rx_gen.axi_lite_rx_data_valid ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_6_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_7_n_0 ;
  wire \axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ;
  wire ch0_valid0__0;
  wire ch1_valid0__0;
  wire ch2_valid0__0;
  wire ch3_valid0__0;
  wire clk_ph_out;
  wire [1:0]\ctrl_info_reg[1]_0 ;
  wire [0:0]\data_out_reg[19]_0 ;
  wire [27:0]\data_out_reg[27]_0 ;
  wire \intr_data[3]_i_2_n_0 ;
  wire \intr_data[3]_i_3_n_0 ;
  wire \intr_data[3]_i_4_n_0 ;
  wire \intr_data[3]_i_5_n_0 ;
  wire rx_ch0_valid;
  wire [28:28]rx_dec_data;
  wire rx_phy_ready;
  wire rx_user_data_valid_flop;
  wire rx_user_reset;
  wire wd_ch_data_valid;

  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_1 
       (.I0(\axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ),
        .I1(\axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ),
        .I2(\axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ),
        .I3(\axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ),
        .I4(\axi_lite_rx_gen.axi_lite_rx_valid_i_6_n_0 ),
        .O(\axi_lite_rx_gen.axi_lite_rx_data_valid ));
  LUT6 #(
    .INIT(64'hFFFFFFFF30303020)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_2 
       (.I0(\data_out_reg[27]_0 [1]),
        .I1(\data_out_reg[27]_0 [18]),
        .I2(rx_ch0_valid),
        .I3(\data_out_reg[27]_0 [2]),
        .I4(\data_out_reg[27]_0 [3]),
        .I5(\axi_lite_rx_gen.axi_lite_rx_valid_i_7_n_0 ),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0000)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_3 
       (.I0(\data_out_reg[27]_0 [15]),
        .I1(\data_out_reg[27]_0 [20]),
        .I2(\data_out_reg[27]_0 [21]),
        .I3(\data_out_reg[27]_0 [17]),
        .I4(\axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ),
        .I5(\data_out_reg[27]_0 [16]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0000)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_4 
       (.I0(\data_out_reg[27]_0 [22]),
        .I1(\data_out_reg[27]_0 [25]),
        .I2(\data_out_reg[27]_0 [26]),
        .I3(\data_out_reg[27]_0 [24]),
        .I4(\axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ),
        .I5(\data_out_reg[27]_0 [23]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0000)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_5 
       (.I0(\data_out_reg[27]_0 [10]),
        .I1(\data_out_reg[27]_0 [13]),
        .I2(\data_out_reg[27]_0 [14]),
        .I3(\data_out_reg[27]_0 [12]),
        .I4(\axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ),
        .I5(\data_out_reg[27]_0 [11]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0000)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_6 
       (.I0(\data_out_reg[27]_0 [5]),
        .I1(\data_out_reg[27]_0 [8]),
        .I2(\data_out_reg[27]_0 [9]),
        .I3(\data_out_reg[27]_0 [7]),
        .I4(\axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ),
        .I5(\data_out_reg[27]_0 [6]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0F00FF000F00FE00)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_7 
       (.I0(\data_out_reg[27]_0 [4]),
        .I1(rx_dec_data),
        .I2(\data_out_reg[27]_0 [19]),
        .I3(rx_ch0_valid),
        .I4(\data_out_reg[27]_0 [18]),
        .I5(\data_out_reg[27]_0 [27]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \axi_lite_rx_gen.axi_lite_rx_valid_i_8 
       (.I0(rx_ch0_valid),
        .I1(\data_out_reg[27]_0 [18]),
        .O(\axi_lite_rx_gen.axi_lite_rx_valid_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    ch0_valid0
       (.I0(rx_phy_ready),
        .I1(rx_user_data_valid_flop),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[4]),
        .O(ch0_valid0__0));
  FDRE ch0_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch0_valid0__0),
        .Q(rx_ch0_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    ch1_valid0
       (.I0(rx_phy_ready),
        .I1(rx_user_data_valid_flop),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[4]),
        .O(ch1_valid0__0));
  FDRE ch1_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch1_valid0__0),
        .Q(aw_ch_data_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    ch2_valid0
       (.I0(rx_phy_ready),
        .I1(rx_user_data_valid_flop),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[4]),
        .O(ch2_valid0__0));
  FDRE ch2_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch2_valid0__0),
        .Q(ar_ch_data_valid),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    ch3_valid0
       (.I0(rx_phy_ready),
        .I1(rx_user_data_valid_flop),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[4]),
        .O(ch3_valid0__0));
  FDRE ch3_valid_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(ch3_valid0__0),
        .Q(wd_ch_data_valid),
        .R(rx_user_reset));
  FDRE \ctrl_info_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[2]),
        .Q(\ctrl_info_reg[1]_0 [0]),
        .R(rx_user_reset));
  FDRE \ctrl_info_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[3]),
        .Q(\ctrl_info_reg[1]_0 [1]),
        .R(rx_user_reset));
  FDRE \data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[5]),
        .Q(\data_out_reg[27]_0 [0]),
        .R(rx_user_reset));
  FDRE \data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[15]),
        .Q(\data_out_reg[27]_0 [10]),
        .R(rx_user_reset));
  FDRE \data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[16]),
        .Q(\data_out_reg[27]_0 [11]),
        .R(rx_user_reset));
  FDRE \data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[17]),
        .Q(\data_out_reg[27]_0 [12]),
        .R(rx_user_reset));
  FDRE \data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[18]),
        .Q(\data_out_reg[27]_0 [13]),
        .R(rx_user_reset));
  FDRE \data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[19]),
        .Q(\data_out_reg[27]_0 [14]),
        .R(rx_user_reset));
  FDRE \data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[20]),
        .Q(\data_out_reg[27]_0 [15]),
        .R(rx_user_reset));
  FDRE \data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[21]),
        .Q(\data_out_reg[27]_0 [16]),
        .R(rx_user_reset));
  FDRE \data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[22]),
        .Q(\data_out_reg[27]_0 [17]),
        .R(rx_user_reset));
  FDRE \data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[23]),
        .Q(\data_out_reg[27]_0 [18]),
        .R(rx_user_reset));
  FDRE \data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[24]),
        .Q(\data_out_reg[27]_0 [19]),
        .R(rx_user_reset));
  FDRE \data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[6]),
        .Q(\data_out_reg[27]_0 [1]),
        .R(rx_user_reset));
  FDRE \data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[25]),
        .Q(\data_out_reg[27]_0 [20]),
        .R(rx_user_reset));
  FDRE \data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[26]),
        .Q(\data_out_reg[27]_0 [21]),
        .R(rx_user_reset));
  FDRE \data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[27]),
        .Q(\data_out_reg[27]_0 [22]),
        .R(rx_user_reset));
  FDRE \data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[28]),
        .Q(\data_out_reg[27]_0 [23]),
        .R(rx_user_reset));
  FDRE \data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[29]),
        .Q(\data_out_reg[27]_0 [24]),
        .R(rx_user_reset));
  FDRE \data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[30]),
        .Q(\data_out_reg[27]_0 [25]),
        .R(rx_user_reset));
  FDRE \data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[31]),
        .Q(\data_out_reg[27]_0 [26]),
        .R(rx_user_reset));
  FDRE \data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[32]),
        .Q(\data_out_reg[27]_0 [27]),
        .R(rx_user_reset));
  FDRE \data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rx_dec_data),
        .R(rx_user_reset));
  FDRE \data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[7]),
        .Q(\data_out_reg[27]_0 [2]),
        .R(rx_user_reset));
  FDRE \data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[8]),
        .Q(\data_out_reg[27]_0 [3]),
        .R(rx_user_reset));
  FDRE \data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[9]),
        .Q(\data_out_reg[27]_0 [4]),
        .R(rx_user_reset));
  FDRE \data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[10]),
        .Q(\data_out_reg[27]_0 [5]),
        .R(rx_user_reset));
  FDRE \data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[11]),
        .Q(\data_out_reg[27]_0 [6]),
        .R(rx_user_reset));
  FDRE \data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[12]),
        .Q(\data_out_reg[27]_0 [7]),
        .R(rx_user_reset));
  FDRE \data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[13]),
        .Q(\data_out_reg[27]_0 [8]),
        .R(rx_user_reset));
  FDRE \data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(Q[14]),
        .Q(\data_out_reg[27]_0 [9]),
        .R(rx_user_reset));
  LUT4 #(
    .INIT(16'h8000)) 
    \intr_data[3]_i_1 
       (.I0(\intr_data[3]_i_2_n_0 ),
        .I1(\intr_data[3]_i_3_n_0 ),
        .I2(\intr_data[3]_i_4_n_0 ),
        .I3(\intr_data[3]_i_5_n_0 ),
        .O(\data_out_reg[19]_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_2 
       (.I0(\data_out_reg[27]_0 [19]),
        .I1(\data_out_reg[27]_0 [20]),
        .I2(\data_out_reg[27]_0 [17]),
        .I3(\data_out_reg[27]_0 [18]),
        .I4(\data_out_reg[27]_0 [22]),
        .I5(\data_out_reg[27]_0 [21]),
        .O(\intr_data[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_3 
       (.I0(\data_out_reg[27]_0 [25]),
        .I1(\data_out_reg[27]_0 [26]),
        .I2(\data_out_reg[27]_0 [23]),
        .I3(\data_out_reg[27]_0 [24]),
        .I4(rx_dec_data),
        .I5(\data_out_reg[27]_0 [27]),
        .O(\intr_data[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \intr_data[3]_i_4 
       (.I0(\data_out_reg[27]_0 [13]),
        .I1(\data_out_reg[27]_0 [14]),
        .I2(\data_out_reg[27]_0 [11]),
        .I3(\data_out_reg[27]_0 [12]),
        .I4(\data_out_reg[27]_0 [16]),
        .I5(\data_out_reg[27]_0 [15]),
        .O(\intr_data[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \intr_data[3]_i_5 
       (.I0(rx_ch0_valid),
        .I1(\data_out_reg[27]_0 [7]),
        .I2(\data_out_reg[27]_0 [8]),
        .I3(\data_out_reg[27]_0 [10]),
        .I4(\data_out_reg[27]_0 [9]),
        .O(\intr_data[3]_i_5_n_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_ar_seq
   (use_ar_channel,
    SR,
    s_axi_lite_aclk,
    Q,
    s_axi_lite_rready,
    s_axi_lite_arvalid,
    use_ar_channel_reg_0);
  output use_ar_channel;
  input [0:0]SR;
  input s_axi_lite_aclk;
  input [0:0]Q;
  input s_axi_lite_rready;
  input s_axi_lite_arvalid;
  input use_ar_channel_reg_0;

  wire [0:0]Q;
  wire [0:0]SR;
  wire next_use_ar_channel;
  wire s_axi_lite_aclk;
  wire s_axi_lite_arvalid;
  wire s_axi_lite_rready;
  wire [1:0]state;
  wire \state[0]_i_1__0_n_0 ;
  wire \state[1]_i_1__0_n_0 ;
  wire use_ar_channel;
  wire use_ar_channel_reg_0;

  LUT6 #(
    .INIT(64'hFFFF88880FFF0000)) 
    \state[0]_i_1__0 
       (.I0(Q),
        .I1(s_axi_lite_rready),
        .I2(s_axi_lite_arvalid),
        .I3(use_ar_channel_reg_0),
        .I4(state[0]),
        .I5(state[1]),
        .O(\state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7777F0000000)) 
    \state[1]_i_1__0 
       (.I0(Q),
        .I1(s_axi_lite_rready),
        .I2(s_axi_lite_arvalid),
        .I3(use_ar_channel_reg_0),
        .I4(state[0]),
        .I5(state[1]),
        .O(\state[1]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "WAIT_R:10,WAIT_AR:01" *) 
  FDSE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\state[0]_i_1__0_n_0 ),
        .Q(state[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "WAIT_R:10,WAIT_AR:01" *) 
  FDRE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(state[1]),
        .R(SR));
  LUT6 #(
    .INIT(64'h000088880FFF0000)) 
    use_ar_channel_i_1
       (.I0(Q),
        .I1(s_axi_lite_rready),
        .I2(s_axi_lite_arvalid),
        .I3(use_ar_channel_reg_0),
        .I4(state[0]),
        .I5(state[1]),
        .O(next_use_ar_channel));
  FDRE use_ar_channel_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_use_ar_channel),
        .Q(use_ar_channel),
        .R(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_aw_seq
   (use_aw_channel,
    use_w_channel,
    SR,
    s_axi_lite_aclk,
    Q,
    s_axi_lite_bready,
    next_use_aw_channel1__0,
    s_axi_lite_wvalid,
    use_w_channel_reg_0,
    next_use_w_channel1__0);
  output use_aw_channel;
  output use_w_channel;
  input [0:0]SR;
  input s_axi_lite_aclk;
  input [0:0]Q;
  input s_axi_lite_bready;
  input next_use_aw_channel1__0;
  input s_axi_lite_wvalid;
  input use_w_channel_reg_0;
  input next_use_w_channel1__0;

  wire [0:0]Q;
  wire [0:0]SR;
  wire next_use_aw_channel;
  wire next_use_aw_channel1__0;
  wire next_use_w_channel;
  wire next_use_w_channel1__0;
  wire s_axi_lite_aclk;
  wire s_axi_lite_bready;
  wire s_axi_lite_wvalid;
  wire [2:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire use_aw_channel;
  wire use_w_channel;
  wire use_w_channel_reg_0;

  LUT6 #(
    .INIT(64'hFF00FF00FF880F00)) 
    \state[0]_i_1 
       (.I0(Q),
        .I1(s_axi_lite_bready),
        .I2(next_use_aw_channel1__0),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF770000F000)) 
    \state[1]_i_1 
       (.I0(s_axi_lite_wvalid),
        .I1(use_w_channel_reg_0),
        .I2(next_use_aw_channel1__0),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00F0FF770000)) 
    \state[2]_i_1 
       (.I0(Q),
        .I1(s_axi_lite_bready),
        .I2(next_use_w_channel1__0),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WAIT_W:010,WAIT_B:100,WAIT_AW:001" *) 
  FDSE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "WAIT_W:010,WAIT_B:100,WAIT_AW:001" *) 
  FDRE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "WAIT_W:010,WAIT_B:100,WAIT_AW:001" *) 
  FDRE \state_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000F00008800)) 
    use_aw_channel_i_1
       (.I0(Q),
        .I1(s_axi_lite_bready),
        .I2(next_use_aw_channel1__0),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(next_use_aw_channel));
  FDRE use_aw_channel_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_use_aw_channel),
        .Q(use_aw_channel),
        .R(SR));
  LUT6 #(
    .INIT(64'h000000F000770000)) 
    use_w_channel_i_1
       (.I0(s_axi_lite_wvalid),
        .I1(use_w_channel_reg_0),
        .I2(next_use_aw_channel1__0),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(next_use_w_channel));
  FDRE use_w_channel_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_use_w_channel),
        .Q(use_w_channel),
        .R(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_decoder
   (axi_rvalid_rs,
    axi_bvalid_rs,
    E,
    rd_en,
    Q,
    \ch0_data_out_reg[33]_0 ,
    SR,
    s_axi_lite_aclk,
    axi_rready_rs,
    empty,
    dout,
    ch0_valid_out_reg_0,
    D,
    \state_reg[0]_0 ,
    axi_bready_rs);
  output axi_rvalid_rs;
  output axi_bvalid_rs;
  output [0:0]E;
  output rd_en;
  output [4:0]Q;
  output [33:0]\ch0_data_out_reg[33]_0 ;
  input [0:0]SR;
  input s_axi_lite_aclk;
  input axi_rready_rs;
  input empty;
  input [18:0]dout;
  input ch0_valid_out_reg_0;
  input [2:0]D;
  input \state_reg[0]_0 ;
  input axi_bready_rs;

  wire [2:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire axi_bready_rs;
  wire axi_bvalid_rs;
  wire axi_rready_rs;
  wire axi_rvalid_rs;
  wire [33:0]\ch0_data_out_reg[33]_0 ;
  wire ch0_valid_out_i_2_n_0;
  wire ch0_valid_out_reg_0;
  wire ch1_valid_out_i_2_n_0;
  wire [18:0]dout;
  wire empty;
  wire [31:1]next_ch0_data_out;
  wire next_ch0_valid_out;
  wire next_ch1_valid_out;
  wire next_rx_fifo_re;
  wire [2:0]next_state;
  wire rd_en;
  wire rx_fifo_re;
  wire rx_fifo_re_i_2_n_0;
  wire s_axi_lite_aclk;
  wire [1:1]state;
  wire \state[5]_i_1__1_n_0 ;
  wire \state_reg[0]_0 ;

  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \ch0_data_out[17]_i_1 
       (.I0(Q[0]),
        .I1(state),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(next_ch0_data_out[1]));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \ch0_data_out[33]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(state),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(next_ch0_data_out[31]));
  FDRE \ch0_data_out_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[0]),
        .Q(\ch0_data_out_reg[33]_0 [0]),
        .R(SR));
  FDRE \ch0_data_out_reg[10] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[10]),
        .Q(\ch0_data_out_reg[33]_0 [10]),
        .R(SR));
  FDRE \ch0_data_out_reg[11] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[11]),
        .Q(\ch0_data_out_reg[33]_0 [11]),
        .R(SR));
  FDRE \ch0_data_out_reg[12] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[12]),
        .Q(\ch0_data_out_reg[33]_0 [12]),
        .R(SR));
  FDRE \ch0_data_out_reg[13] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[13]),
        .Q(\ch0_data_out_reg[33]_0 [13]),
        .R(SR));
  FDRE \ch0_data_out_reg[14] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[14]),
        .Q(\ch0_data_out_reg[33]_0 [14]),
        .R(SR));
  FDRE \ch0_data_out_reg[15] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[15]),
        .Q(\ch0_data_out_reg[33]_0 [15]),
        .R(SR));
  FDRE \ch0_data_out_reg[16] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[16]),
        .Q(\ch0_data_out_reg[33]_0 [16]),
        .R(SR));
  FDRE \ch0_data_out_reg[17] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[17]),
        .Q(\ch0_data_out_reg[33]_0 [17]),
        .R(SR));
  FDRE \ch0_data_out_reg[18] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[0]),
        .Q(\ch0_data_out_reg[33]_0 [18]),
        .R(SR));
  FDRE \ch0_data_out_reg[19] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[1]),
        .Q(\ch0_data_out_reg[33]_0 [19]),
        .R(SR));
  FDRE \ch0_data_out_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[1]),
        .Q(\ch0_data_out_reg[33]_0 [1]),
        .R(SR));
  FDRE \ch0_data_out_reg[20] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[2]),
        .Q(\ch0_data_out_reg[33]_0 [20]),
        .R(SR));
  FDRE \ch0_data_out_reg[21] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[3]),
        .Q(\ch0_data_out_reg[33]_0 [21]),
        .R(SR));
  FDRE \ch0_data_out_reg[22] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[4]),
        .Q(\ch0_data_out_reg[33]_0 [22]),
        .R(SR));
  FDRE \ch0_data_out_reg[23] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[5]),
        .Q(\ch0_data_out_reg[33]_0 [23]),
        .R(SR));
  FDRE \ch0_data_out_reg[24] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[6]),
        .Q(\ch0_data_out_reg[33]_0 [24]),
        .R(SR));
  FDRE \ch0_data_out_reg[25] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[7]),
        .Q(\ch0_data_out_reg[33]_0 [25]),
        .R(SR));
  FDRE \ch0_data_out_reg[26] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[8]),
        .Q(\ch0_data_out_reg[33]_0 [26]),
        .R(SR));
  FDRE \ch0_data_out_reg[27] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[9]),
        .Q(\ch0_data_out_reg[33]_0 [27]),
        .R(SR));
  FDRE \ch0_data_out_reg[28] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[10]),
        .Q(\ch0_data_out_reg[33]_0 [28]),
        .R(SR));
  FDRE \ch0_data_out_reg[29] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[11]),
        .Q(\ch0_data_out_reg[33]_0 [29]),
        .R(SR));
  FDRE \ch0_data_out_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[2]),
        .Q(\ch0_data_out_reg[33]_0 [2]),
        .R(SR));
  FDRE \ch0_data_out_reg[30] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[12]),
        .Q(\ch0_data_out_reg[33]_0 [30]),
        .R(SR));
  FDRE \ch0_data_out_reg[31] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[13]),
        .Q(\ch0_data_out_reg[33]_0 [31]),
        .R(SR));
  FDRE \ch0_data_out_reg[32] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[14]),
        .Q(\ch0_data_out_reg[33]_0 [32]),
        .R(SR));
  FDRE \ch0_data_out_reg[33] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[31]),
        .D(dout[15]),
        .Q(\ch0_data_out_reg[33]_0 [33]),
        .R(SR));
  FDRE \ch0_data_out_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[3]),
        .Q(\ch0_data_out_reg[33]_0 [3]),
        .R(SR));
  FDRE \ch0_data_out_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[4]),
        .Q(\ch0_data_out_reg[33]_0 [4]),
        .R(SR));
  FDRE \ch0_data_out_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[5]),
        .Q(\ch0_data_out_reg[33]_0 [5]),
        .R(SR));
  FDRE \ch0_data_out_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[6]),
        .Q(\ch0_data_out_reg[33]_0 [6]),
        .R(SR));
  FDRE \ch0_data_out_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[7]),
        .Q(\ch0_data_out_reg[33]_0 [7]),
        .R(SR));
  FDRE \ch0_data_out_reg[8] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[8]),
        .Q(\ch0_data_out_reg[33]_0 [8]),
        .R(SR));
  FDRE \ch0_data_out_reg[9] 
       (.C(s_axi_lite_aclk),
        .CE(next_ch0_data_out[1]),
        .D(dout[9]),
        .Q(\ch0_data_out_reg[33]_0 [9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h101000F010100000)) 
    ch0_valid_out_i_1
       (.I0(axi_rready_rs),
        .I1(Q[1]),
        .I2(ch0_valid_out_i_2_n_0),
        .I3(dout[18]),
        .I4(Q[2]),
        .I5(ch0_valid_out_reg_0),
        .O(next_ch0_valid_out));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    ch0_valid_out_i_2
       (.I0(state),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[3]),
        .O(ch0_valid_out_i_2_n_0));
  FDRE ch0_valid_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch0_valid_out),
        .Q(axi_rvalid_rs),
        .R(SR));
  LUT6 #(
    .INIT(64'h10F0100010001000)) 
    ch1_valid_out_i_1
       (.I0(axi_bready_rs),
        .I1(Q[1]),
        .I2(ch1_valid_out_i_2_n_0),
        .I3(Q[3]),
        .I4(dout[18]),
        .I5(ch0_valid_out_reg_0),
        .O(next_ch1_valid_out));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    ch1_valid_out_i_2
       (.I0(state),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[2]),
        .O(ch1_valid_out_i_2_n_0));
  FDRE ch1_valid_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch1_valid_out),
        .Q(axi_bvalid_rs),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000110)) 
    rx_fifo_re_i_1
       (.I0(Q[4]),
        .I1(state),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(empty),
        .I5(rx_fifo_re_i_2_n_0),
        .O(next_rx_fifo_re));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'hE)) 
    rx_fifo_re_i_2
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(rx_fifo_re_i_2_n_0));
  FDRE rx_fifo_re_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_rx_fifo_re),
        .Q(rx_fifo_re),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \state[0]_i_1__5 
       (.I0(\state_reg[0]_0 ),
        .I1(Q[2]),
        .I2(axi_rready_rs),
        .I3(Q[3]),
        .I4(axi_bready_rs),
        .O(next_state[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \state[1]_i_1__5 
       (.I0(Q[0]),
        .I1(empty),
        .O(next_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \state[2]_i_1__1 
       (.I0(empty),
        .I1(Q[1]),
        .I2(state),
        .O(next_state[2]));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    \state[5]_i_1__1 
       (.I0(Q[0]),
        .I1(state),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[4]),
        .I5(Q[3]),
        .O(\state[5]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDSE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(next_state[0]),
        .Q(Q[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDRE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(next_state[1]),
        .Q(state),
        .R(SR));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDRE \state_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(next_state[2]),
        .Q(Q[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDRE \state_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(D[0]),
        .Q(Q[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDRE \state_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(D[1]),
        .Q(Q[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "WAIT:000010,DATA_MSB:000100,READY_CH0:001000,READY_CH1:010000,READY_CH2:100000,IDLE:000001" *) 
  FDRE \state_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__1_n_0 ),
        .D(D[2]),
        .Q(Q[4]),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \storage_data2[33]_i_1 
       (.I0(axi_rvalid_rs),
        .I1(axi_rready_rs),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__2
       (.I0(rx_fifo_re),
        .I1(empty),
        .O(rd_en));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_master
   (dout,
    empty,
    s_axi_lite_awready,
    ch1_ready_out_reg,
    ch2_ready_out_reg,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ,
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ,
    \state_reg[0] ,
    \state_reg[0]_0 ,
    \storage_data1_reg[33] ,
    s_axi_lite_bresp,
    s_axi_lite_aclk,
    clk_ph_out,
    rd_en,
    Q,
    SR,
    fifo_reset_reg_0,
    rx_user_reset,
    axi_lite_rx_valid,
    s_axi_lite_bready,
    s_axi_lite_wvalid,
    s_axi_lite_rready,
    s_axi_lite_arvalid,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_araddr,
    s_axi_lite_awaddr,
    s_axi_lite_arprot,
    s_axi_lite_awprot,
    s_axi_lite_awvalid);
  output [3:0]dout;
  output empty;
  output s_axi_lite_awready;
  output ch1_ready_out_reg;
  output ch2_ready_out_reg;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  output \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  output [0:0]\state_reg[0] ;
  output [0:0]\state_reg[0]_0 ;
  output [33:0]\storage_data1_reg[33] ;
  output [1:0]s_axi_lite_bresp;
  input s_axi_lite_aclk;
  input clk_ph_out;
  input rd_en;
  input [19:0]Q;
  input [0:0]SR;
  input fifo_reset_reg_0;
  input rx_user_reset;
  input axi_lite_rx_valid;
  input s_axi_lite_bready;
  input s_axi_lite_wvalid;
  input s_axi_lite_rready;
  input s_axi_lite_arvalid;
  input [31:0]s_axi_lite_wdata;
  input [3:0]s_axi_lite_wstrb;
  input [31:0]s_axi_lite_araddr;
  input [31:0]s_axi_lite_awaddr;
  input [1:0]s_axi_lite_arprot;
  input [1:0]s_axi_lite_awprot;
  input s_axi_lite_awvalid;

  wire [19:0]Q;
  wire [0:0]SR;
  wire axi_bready_rs;
  wire axi_bvalid_rs;
  wire \axi_chip2chip_async_fifo_inst/prog_full_int ;
  wire \axi_chip2chip_async_fifo_inst/wr_rst_busy ;
  wire axi_chip2chip_lite_decoder_inst_n_10;
  wire axi_chip2chip_lite_decoder_inst_n_11;
  wire axi_chip2chip_lite_decoder_inst_n_12;
  wire axi_chip2chip_lite_decoder_inst_n_13;
  wire axi_chip2chip_lite_decoder_inst_n_14;
  wire axi_chip2chip_lite_decoder_inst_n_15;
  wire axi_chip2chip_lite_decoder_inst_n_16;
  wire axi_chip2chip_lite_decoder_inst_n_17;
  wire axi_chip2chip_lite_decoder_inst_n_18;
  wire axi_chip2chip_lite_decoder_inst_n_19;
  wire axi_chip2chip_lite_decoder_inst_n_20;
  wire axi_chip2chip_lite_decoder_inst_n_21;
  wire axi_chip2chip_lite_decoder_inst_n_22;
  wire axi_chip2chip_lite_decoder_inst_n_23;
  wire axi_chip2chip_lite_decoder_inst_n_24;
  wire axi_chip2chip_lite_decoder_inst_n_25;
  wire axi_chip2chip_lite_decoder_inst_n_26;
  wire axi_chip2chip_lite_decoder_inst_n_27;
  wire axi_chip2chip_lite_decoder_inst_n_28;
  wire axi_chip2chip_lite_decoder_inst_n_29;
  wire axi_chip2chip_lite_decoder_inst_n_30;
  wire axi_chip2chip_lite_decoder_inst_n_31;
  wire axi_chip2chip_lite_decoder_inst_n_32;
  wire axi_chip2chip_lite_decoder_inst_n_33;
  wire axi_chip2chip_lite_decoder_inst_n_34;
  wire axi_chip2chip_lite_decoder_inst_n_35;
  wire axi_chip2chip_lite_decoder_inst_n_36;
  wire axi_chip2chip_lite_decoder_inst_n_37;
  wire axi_chip2chip_lite_decoder_inst_n_38;
  wire axi_chip2chip_lite_decoder_inst_n_39;
  wire axi_chip2chip_lite_decoder_inst_n_40;
  wire axi_chip2chip_lite_decoder_inst_n_9;
  wire axi_chip2chip_lite_master_rx_fifo_n_20;
  wire axi_chip2chip_lite_master_rx_fifo_n_24;
  wire axi_chip2chip_lite_master_tx_fifo_n_23;
  wire axi_lite_rx_valid;
  wire axi_rready_rs;
  wire axi_rvalid_rs;
  wire [1:0]b_data;
  wire ch1_ready_out_reg;
  wire ch2_ready_out_reg;
  wire clk_ph_out;
  wire [3:0]dout;
  wire empty;
  wire fifo_empty;
  wire fifo_re;
  wire fifo_reset;
  wire fifo_reset_axi_clk;
  wire fifo_reset_reg_0;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ;
  wire \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ;
  wire next_send_ready1__0;
  wire [5:3]next_state;
  wire next_use_aw_channel1__0;
  wire next_use_w_channel1__0;
  wire rd_en;
  wire [18:0]rx_data;
  wire rx_user_reset;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_rready;
  wire [31:0]s_axi_lite_wdata;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire [5:0]state;
  wire [4:4]state_0;
  wire [0:0]\state_reg[0] ;
  wire [0:0]\state_reg[0]_0 ;
  wire [33:0]\storage_data1_reg[33] ;
  wire storage_data2;
  wire [19:0]tx_data;
  wire tx_fifo_we;
  wire use_ar_channel;
  wire use_aw_channel;
  wire use_w_channel;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_ar_seq axi_chip2chip_lite_ar_seq_inst
       (.Q(\state_reg[0]_0 ),
        .SR(SR),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_rready(s_axi_lite_rready),
        .use_ar_channel(use_ar_channel),
        .use_ar_channel_reg_0(ch1_ready_out_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_aw_seq axi_chip2chip_lite_aw_seq_inst
       (.Q(\state_reg[0] ),
        .SR(SR),
        .next_use_aw_channel1__0(next_use_aw_channel1__0),
        .next_use_w_channel1__0(next_use_w_channel1__0),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .use_aw_channel(use_aw_channel),
        .use_w_channel(use_w_channel),
        .use_w_channel_reg_0(ch2_ready_out_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_decoder axi_chip2chip_lite_decoder_inst
       (.D(next_state),
        .E(storage_data2),
        .Q({state[5:2],state[0]}),
        .SR(SR),
        .axi_bready_rs(axi_bready_rs),
        .axi_bvalid_rs(axi_bvalid_rs),
        .axi_rready_rs(axi_rready_rs),
        .axi_rvalid_rs(axi_rvalid_rs),
        .\ch0_data_out_reg[33]_0 ({axi_chip2chip_lite_decoder_inst_n_9,axi_chip2chip_lite_decoder_inst_n_10,axi_chip2chip_lite_decoder_inst_n_11,axi_chip2chip_lite_decoder_inst_n_12,axi_chip2chip_lite_decoder_inst_n_13,axi_chip2chip_lite_decoder_inst_n_14,axi_chip2chip_lite_decoder_inst_n_15,axi_chip2chip_lite_decoder_inst_n_16,axi_chip2chip_lite_decoder_inst_n_17,axi_chip2chip_lite_decoder_inst_n_18,axi_chip2chip_lite_decoder_inst_n_19,axi_chip2chip_lite_decoder_inst_n_20,axi_chip2chip_lite_decoder_inst_n_21,axi_chip2chip_lite_decoder_inst_n_22,axi_chip2chip_lite_decoder_inst_n_23,axi_chip2chip_lite_decoder_inst_n_24,axi_chip2chip_lite_decoder_inst_n_25,axi_chip2chip_lite_decoder_inst_n_26,axi_chip2chip_lite_decoder_inst_n_27,axi_chip2chip_lite_decoder_inst_n_28,axi_chip2chip_lite_decoder_inst_n_29,axi_chip2chip_lite_decoder_inst_n_30,axi_chip2chip_lite_decoder_inst_n_31,axi_chip2chip_lite_decoder_inst_n_32,axi_chip2chip_lite_decoder_inst_n_33,axi_chip2chip_lite_decoder_inst_n_34,axi_chip2chip_lite_decoder_inst_n_35,axi_chip2chip_lite_decoder_inst_n_36,axi_chip2chip_lite_decoder_inst_n_37,axi_chip2chip_lite_decoder_inst_n_38,axi_chip2chip_lite_decoder_inst_n_39,axi_chip2chip_lite_decoder_inst_n_40,b_data}),
        .ch0_valid_out_reg_0(axi_chip2chip_lite_master_rx_fifo_n_24),
        .dout(rx_data),
        .empty(fifo_empty),
        .rd_en(fifo_re),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .\state_reg[0]_0 (axi_chip2chip_lite_master_rx_fifo_n_20));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo__parameterized0 axi_chip2chip_lite_master_rx_fifo
       (.D(next_state),
        .Q(Q),
        .axi_bready_rs(axi_bready_rs),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .axi_rready_rs(axi_rready_rs),
        .clk_ph_out(clk_ph_out),
        .dout(rx_data),
        .empty(fifo_empty),
        .\gen_fwft.empty_fwft_i_reg (axi_chip2chip_lite_master_rx_fifo_n_24),
        .rd_en(fifo_re),
        .rst(fifo_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .\state_reg[0] (axi_chip2chip_lite_master_rx_fifo_n_20),
        .\state_reg[5] ({state[5:2],state[0]}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo__parameterized0__xdcDup__1 axi_chip2chip_lite_master_tx_fifo
       (.Q(tx_data),
        .clk_ph_out(clk_ph_out),
        .dout(dout),
        .empty(empty),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] ),
        .\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] (\gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] ),
        .next_send_ready1__0(next_send_ready1__0),
        .out(fifo_reset_axi_clk),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int ),
        .rd_en(rd_en),
        .rx_user_reset(rx_user_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .tx_fifo_we(tx_fifo_we),
        .tx_fifo_we_reg(state_0),
        .use_w_channel(use_w_channel),
        .use_w_channel_reg(axi_chip2chip_lite_master_tx_fifo_n_23),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_tdm axi_chip2chip_lite_tx_tdm_inst
       (.Q(state_0),
        .SR(SR),
        .ch1_ready_out_reg_0(ch1_ready_out_reg),
        .ch2_ready_out_reg_0(ch2_ready_out_reg),
        .next_send_ready1__0(next_send_ready1__0),
        .next_use_aw_channel1__0(next_use_aw_channel1__0),
        .next_use_w_channel1__0(next_use_w_channel1__0),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int ),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .\tx_data_reg[19]_0 (tx_data),
        .tx_fifo_we(tx_fifo_we),
        .tx_fifo_we_reg_0(axi_chip2chip_lite_master_tx_fifo_n_23),
        .use_ar_channel(use_ar_channel),
        .use_aw_channel(use_aw_channel),
        .use_w_channel(use_w_channel),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized0_47 axi_chip2chip_sync_cell_lit_mas_rst_axi_clk_xpm
       (.out(fifo_reset_axi_clk),
        .rst(fifo_reset),
        .s_axi_lite_aclk(s_axi_lite_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_asitv10_axisc_register_slice__parameterized0 bch_reg_slice_inst
       (.Q(\state_reg[0] ),
        .SR(SR),
        .axi_bready_rs(axi_bready_rs),
        .axi_bvalid_rs(axi_bvalid_rs),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .\storage_data2_reg[1]_0 (b_data));
  FDPE fifo_reset_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(fifo_reset_reg_0),
        .PRE(SR),
        .Q(fifo_reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_asitv10_axisc_register_slice rch_reg_slice_inst
       (.D({axi_chip2chip_lite_decoder_inst_n_9,axi_chip2chip_lite_decoder_inst_n_10,axi_chip2chip_lite_decoder_inst_n_11,axi_chip2chip_lite_decoder_inst_n_12,axi_chip2chip_lite_decoder_inst_n_13,axi_chip2chip_lite_decoder_inst_n_14,axi_chip2chip_lite_decoder_inst_n_15,axi_chip2chip_lite_decoder_inst_n_16,axi_chip2chip_lite_decoder_inst_n_17,axi_chip2chip_lite_decoder_inst_n_18,axi_chip2chip_lite_decoder_inst_n_19,axi_chip2chip_lite_decoder_inst_n_20,axi_chip2chip_lite_decoder_inst_n_21,axi_chip2chip_lite_decoder_inst_n_22,axi_chip2chip_lite_decoder_inst_n_23,axi_chip2chip_lite_decoder_inst_n_24,axi_chip2chip_lite_decoder_inst_n_25,axi_chip2chip_lite_decoder_inst_n_26,axi_chip2chip_lite_decoder_inst_n_27,axi_chip2chip_lite_decoder_inst_n_28,axi_chip2chip_lite_decoder_inst_n_29,axi_chip2chip_lite_decoder_inst_n_30,axi_chip2chip_lite_decoder_inst_n_31,axi_chip2chip_lite_decoder_inst_n_32,axi_chip2chip_lite_decoder_inst_n_33,axi_chip2chip_lite_decoder_inst_n_34,axi_chip2chip_lite_decoder_inst_n_35,axi_chip2chip_lite_decoder_inst_n_36,axi_chip2chip_lite_decoder_inst_n_37,axi_chip2chip_lite_decoder_inst_n_38,axi_chip2chip_lite_decoder_inst_n_39,axi_chip2chip_lite_decoder_inst_n_40,b_data}),
        .E(storage_data2),
        .Q(\state_reg[0]_0 ),
        .SR(SR),
        .axi_rready_rs(axi_rready_rs),
        .axi_rvalid_rs(axi_rvalid_rs),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_rready(s_axi_lite_rready),
        .\storage_data1_reg[33]_0 (\storage_data1_reg[33] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_lite_tdm
   (s_axi_lite_awready,
    ch1_ready_out_reg_0,
    ch2_ready_out_reg_0,
    tx_fifo_we,
    Q,
    next_use_aw_channel1__0,
    next_use_w_channel1__0,
    \tx_data_reg[19]_0 ,
    SR,
    s_axi_lite_aclk,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_araddr,
    s_axi_lite_awaddr,
    s_axi_lite_arprot,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_wvalid,
    tx_fifo_we_reg_0,
    use_w_channel,
    next_send_ready1__0,
    prog_full,
    wr_rst_busy,
    s_axi_lite_arvalid,
    use_ar_channel,
    use_aw_channel);
  output s_axi_lite_awready;
  output ch1_ready_out_reg_0;
  output ch2_ready_out_reg_0;
  output tx_fifo_we;
  output [0:0]Q;
  output next_use_aw_channel1__0;
  output next_use_w_channel1__0;
  output [19:0]\tx_data_reg[19]_0 ;
  input [0:0]SR;
  input s_axi_lite_aclk;
  input [31:0]s_axi_lite_wdata;
  input [3:0]s_axi_lite_wstrb;
  input [31:0]s_axi_lite_araddr;
  input [31:0]s_axi_lite_awaddr;
  input [1:0]s_axi_lite_arprot;
  input [1:0]s_axi_lite_awprot;
  input s_axi_lite_awvalid;
  input s_axi_lite_wvalid;
  input tx_fifo_we_reg_0;
  input use_w_channel;
  input next_send_ready1__0;
  input prog_full;
  input wr_rst_busy;
  input s_axi_lite_arvalid;
  input use_ar_channel;
  input use_aw_channel;

  wire [0:0]Q;
  wire [0:0]SR;
  wire ch0_ready_out_i_2_n_0;
  wire ch1_ready_out_i_2_n_0;
  wire ch1_ready_out_reg_0;
  wire ch2_ready_out_reg_0;
  wire next_ch0_ready_out;
  wire next_ch1_ready_out;
  wire next_ch2_ready_out;
  wire next_send_ready;
  wire next_send_ready1__0;
  wire [1:0]next_state;
  wire next_tx_data;
  wire next_tx_fifo_we;
  wire next_use_aw_channel1__0;
  wire next_use_w_channel1__0;
  wire next_wait_count;
  wire [8:0]p_0_in;
  wire prog_full;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire [31:0]s_axi_lite_wdata;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire send_ready;
  wire send_ready_i_2_n_0;
  wire send_ready_i_4_n_0;
  wire send_ready_i_5_n_0;
  wire [5:0]state;
  wire \state[5]_i_1__0_n_0 ;
  wire \tx_data[0]_i_1_n_0 ;
  wire \tx_data[0]_i_2_n_0 ;
  wire \tx_data[0]_i_3_n_0 ;
  wire \tx_data[10]_i_1_n_0 ;
  wire \tx_data[10]_i_2_n_0 ;
  wire \tx_data[10]_i_3_n_0 ;
  wire \tx_data[11]_i_1_n_0 ;
  wire \tx_data[11]_i_2_n_0 ;
  wire \tx_data[11]_i_3_n_0 ;
  wire \tx_data[12]_i_1_n_0 ;
  wire \tx_data[12]_i_2_n_0 ;
  wire \tx_data[12]_i_3_n_0 ;
  wire \tx_data[13]_i_1_n_0 ;
  wire \tx_data[13]_i_2_n_0 ;
  wire \tx_data[13]_i_3_n_0 ;
  wire \tx_data[14]_i_1_n_0 ;
  wire \tx_data[14]_i_2_n_0 ;
  wire \tx_data[14]_i_3_n_0 ;
  wire \tx_data[15]_i_1_n_0 ;
  wire \tx_data[15]_i_2_n_0 ;
  wire \tx_data[15]_i_3_n_0 ;
  wire \tx_data[16]_i_1_n_0 ;
  wire \tx_data[16]_i_2_n_0 ;
  wire \tx_data[17]_i_1_n_0 ;
  wire \tx_data[17]_i_2_n_0 ;
  wire \tx_data[18]_i_1_n_0 ;
  wire \tx_data[19]_i_2_n_0 ;
  wire \tx_data[19]_i_3_n_0 ;
  wire \tx_data[1]_i_1_n_0 ;
  wire \tx_data[1]_i_2_n_0 ;
  wire \tx_data[1]_i_3_n_0 ;
  wire \tx_data[2]_i_1_n_0 ;
  wire \tx_data[2]_i_2_n_0 ;
  wire \tx_data[2]_i_3_n_0 ;
  wire \tx_data[3]_i_1_n_0 ;
  wire \tx_data[3]_i_2_n_0 ;
  wire \tx_data[3]_i_3_n_0 ;
  wire \tx_data[4]_i_1_n_0 ;
  wire \tx_data[4]_i_2_n_0 ;
  wire \tx_data[4]_i_3_n_0 ;
  wire \tx_data[5]_i_1_n_0 ;
  wire \tx_data[5]_i_2_n_0 ;
  wire \tx_data[5]_i_3_n_0 ;
  wire \tx_data[6]_i_1_n_0 ;
  wire \tx_data[6]_i_2_n_0 ;
  wire \tx_data[6]_i_3_n_0 ;
  wire \tx_data[7]_i_1_n_0 ;
  wire \tx_data[7]_i_2_n_0 ;
  wire \tx_data[7]_i_3_n_0 ;
  wire \tx_data[8]_i_1_n_0 ;
  wire \tx_data[8]_i_2_n_0 ;
  wire \tx_data[8]_i_3_n_0 ;
  wire \tx_data[9]_i_1_n_0 ;
  wire \tx_data[9]_i_2_n_0 ;
  wire \tx_data[9]_i_3_n_0 ;
  wire [19:0]\tx_data_reg[19]_0 ;
  wire tx_fifo_we;
  wire tx_fifo_we_i_3_n_0;
  wire tx_fifo_we_reg_0;
  wire use_ar_channel;
  wire use_aw_channel;
  wire use_w_channel;
  wire \wait_count[8]_i_3_n_0 ;
  wire \wait_count_reg_n_0_[0] ;
  wire \wait_count_reg_n_0_[1] ;
  wire \wait_count_reg_n_0_[2] ;
  wire \wait_count_reg_n_0_[3] ;
  wire \wait_count_reg_n_0_[4] ;
  wire \wait_count_reg_n_0_[5] ;
  wire \wait_count_reg_n_0_[6] ;
  wire \wait_count_reg_n_0_[7] ;
  wire wait_done;
  wire wr_rst_busy;

  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    ch0_ready_out_i_1
       (.I0(send_ready),
        .I1(state[5]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(ch0_ready_out_i_2_n_0),
        .O(next_ch0_ready_out));
  LUT3 #(
    .INIT(8'h01)) 
    ch0_ready_out_i_2
       (.I0(state[3]),
        .I1(Q),
        .I2(state[2]),
        .O(ch0_ready_out_i_2_n_0));
  FDRE ch0_ready_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch0_ready_out),
        .Q(s_axi_lite_awready),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    ch1_ready_out_i_1
       (.I0(send_ready),
        .I1(Q),
        .I2(ch1_ready_out_i_2_n_0),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[2]),
        .O(next_ch1_ready_out));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h1)) 
    ch1_ready_out_i_2
       (.I0(state[5]),
        .I1(state[1]),
        .O(ch1_ready_out_i_2_n_0));
  FDRE ch1_ready_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch1_ready_out),
        .Q(ch1_ready_out_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    ch2_ready_out_i_1
       (.I0(state[5]),
        .I1(send_ready),
        .I2(state[0]),
        .I3(state[1]),
        .I4(ch0_ready_out_i_2_n_0),
        .O(next_ch2_ready_out));
  FDRE ch2_ready_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_ch2_ready_out),
        .Q(ch2_ready_out_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAA80000000)) 
    send_ready_i_1
       (.I0(send_ready_i_2_n_0),
        .I1(use_w_channel),
        .I2(Q),
        .I3(s_axi_lite_wvalid),
        .I4(next_send_ready1__0),
        .I5(send_ready_i_4_n_0),
        .O(next_send_ready));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    send_ready_i_2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(Q),
        .I5(state[5]),
        .O(send_ready_i_2_n_0));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAAAAA)) 
    send_ready_i_4
       (.I0(send_ready_i_5_n_0),
        .I1(prog_full),
        .I2(wr_rst_busy),
        .I3(s_axi_lite_arvalid),
        .I4(state[2]),
        .I5(use_ar_channel),
        .O(send_ready_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    send_ready_i_5
       (.I0(wait_done),
        .I1(s_axi_lite_awvalid),
        .I2(use_aw_channel),
        .I3(state[0]),
        .I4(wr_rst_busy),
        .I5(prog_full),
        .O(send_ready_i_5_n_0));
  FDRE send_ready_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_send_ready),
        .Q(send_ready),
        .R(SR));
  LUT3 #(
    .INIT(8'hF4)) 
    \state[0]_i_1__4 
       (.I0(wait_done),
        .I1(state[0]),
        .I2(state[5]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \state[1]_i_1__4 
       (.I0(wait_done),
        .I1(state[5]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(Q),
        .I5(state[3]),
        .O(next_state[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_lite_awvalid),
        .I1(s_axi_lite_awready),
        .O(next_use_aw_channel1__0));
  LUT2 #(
    .INIT(4'h8)) 
    \state[2]_i_2__0 
       (.I0(s_axi_lite_wvalid),
        .I1(ch2_ready_out_reg_0),
        .O(next_use_w_channel1__0));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    \state[5]_i_1__0 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(Q),
        .I4(state[5]),
        .I5(state[3]),
        .O(\state[5]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDSE \state_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(next_state[0]),
        .Q(state[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDRE \state_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(next_state[1]),
        .Q(state[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDRE \state_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(state[1]),
        .Q(state[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDRE \state_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(state[2]),
        .Q(state[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDRE \state_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(state[3]),
        .Q(Q),
        .R(SR));
  (* FSM_ENCODED_STATES = "S2:000100,S3:001000,S4:010000,S5:100000,S0:000001,S1:000010" *) 
  FDRE \state_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(\state[5]_i_1__0_n_0 ),
        .D(Q),
        .Q(state[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[0]_i_1 
       (.I0(\tx_data[0]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[18]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[0]),
        .I4(state[2]),
        .I5(\tx_data[0]_i_3_n_0 ),
        .O(\tx_data[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[0]_i_2 
       (.I0(s_axi_lite_awaddr[18]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[0]),
        .I3(state[0]),
        .O(\tx_data[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[0]_i_3 
       (.I0(s_axi_lite_wdata[18]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[0]),
        .I3(Q),
        .O(\tx_data[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[10]_i_1 
       (.I0(\tx_data[10]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[28]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[10]),
        .I4(state[2]),
        .I5(\tx_data[10]_i_3_n_0 ),
        .O(\tx_data[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[10]_i_2 
       (.I0(s_axi_lite_awaddr[28]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[10]),
        .I3(state[0]),
        .O(\tx_data[10]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[10]_i_3 
       (.I0(s_axi_lite_wdata[28]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[10]),
        .I3(Q),
        .O(\tx_data[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[11]_i_1 
       (.I0(\tx_data[11]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[29]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[11]),
        .I4(state[2]),
        .I5(\tx_data[11]_i_3_n_0 ),
        .O(\tx_data[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[11]_i_2 
       (.I0(s_axi_lite_awaddr[29]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[11]),
        .I3(state[0]),
        .O(\tx_data[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[11]_i_3 
       (.I0(s_axi_lite_wdata[29]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[11]),
        .I3(Q),
        .O(\tx_data[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[12]_i_1 
       (.I0(\tx_data[12]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[30]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[12]),
        .I4(state[2]),
        .I5(\tx_data[12]_i_3_n_0 ),
        .O(\tx_data[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[12]_i_2 
       (.I0(s_axi_lite_awaddr[30]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[12]),
        .I3(state[0]),
        .O(\tx_data[12]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[12]_i_3 
       (.I0(s_axi_lite_wdata[30]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[12]),
        .I3(Q),
        .O(\tx_data[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[13]_i_1 
       (.I0(\tx_data[13]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[31]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[13]),
        .I4(state[2]),
        .I5(\tx_data[13]_i_3_n_0 ),
        .O(\tx_data[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[13]_i_2 
       (.I0(s_axi_lite_awaddr[31]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[13]),
        .I3(state[0]),
        .O(\tx_data[13]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[13]_i_3 
       (.I0(s_axi_lite_wdata[31]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[13]),
        .I3(Q),
        .O(\tx_data[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[14]_i_1 
       (.I0(\tx_data[14]_i_2_n_0 ),
        .I1(s_axi_lite_arprot[0]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[14]),
        .I4(state[2]),
        .I5(\tx_data[14]_i_3_n_0 ),
        .O(\tx_data[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[14]_i_2 
       (.I0(s_axi_lite_awprot[0]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[14]),
        .I3(state[0]),
        .O(\tx_data[14]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[14]_i_3 
       (.I0(s_axi_lite_wstrb[0]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[14]),
        .I3(Q),
        .O(\tx_data[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[15]_i_1 
       (.I0(\tx_data[15]_i_2_n_0 ),
        .I1(s_axi_lite_arprot[1]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[15]),
        .I4(state[2]),
        .I5(\tx_data[15]_i_3_n_0 ),
        .O(\tx_data[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[15]_i_2 
       (.I0(s_axi_lite_awprot[1]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[15]),
        .I3(state[0]),
        .O(\tx_data[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[15]_i_3 
       (.I0(s_axi_lite_wstrb[1]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[15]),
        .I3(Q),
        .O(\tx_data[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \tx_data[16]_i_1 
       (.I0(Q),
        .I1(s_axi_lite_wdata[16]),
        .I2(state[5]),
        .I3(s_axi_lite_wstrb[2]),
        .I4(\tx_data[16]_i_2_n_0 ),
        .O(\tx_data[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[16]_i_2 
       (.I0(s_axi_lite_araddr[16]),
        .I1(state[2]),
        .I2(s_axi_lite_awaddr[16]),
        .I3(state[0]),
        .O(\tx_data[16]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \tx_data[17]_i_1 
       (.I0(Q),
        .I1(s_axi_lite_wdata[17]),
        .I2(state[5]),
        .I3(s_axi_lite_wstrb[3]),
        .I4(\tx_data[17]_i_2_n_0 ),
        .O(\tx_data[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[17]_i_2 
       (.I0(s_axi_lite_araddr[17]),
        .I1(state[2]),
        .I2(s_axi_lite_awaddr[17]),
        .I3(state[0]),
        .O(\tx_data[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data[18]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .O(\tx_data[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000080)) 
    \tx_data[19]_i_1 
       (.I0(ch0_ready_out_i_2_n_0),
        .I1(wait_done),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[5]),
        .I5(\tx_data[19]_i_3_n_0 ),
        .O(next_tx_data));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_data[19]_i_2 
       (.I0(Q),
        .I1(state[5]),
        .O(\tx_data[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010116)) 
    \tx_data[19]_i_3 
       (.I0(state[3]),
        .I1(state[5]),
        .I2(Q),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\tx_data[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[1]_i_1 
       (.I0(\tx_data[1]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[19]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[1]),
        .I4(state[2]),
        .I5(\tx_data[1]_i_3_n_0 ),
        .O(\tx_data[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[1]_i_2 
       (.I0(s_axi_lite_awaddr[19]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[1]),
        .I3(state[0]),
        .O(\tx_data[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[1]_i_3 
       (.I0(s_axi_lite_wdata[19]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[1]),
        .I3(Q),
        .O(\tx_data[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[2]_i_1 
       (.I0(\tx_data[2]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[20]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[2]),
        .I4(state[2]),
        .I5(\tx_data[2]_i_3_n_0 ),
        .O(\tx_data[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[2]_i_2 
       (.I0(s_axi_lite_awaddr[20]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[2]),
        .I3(state[0]),
        .O(\tx_data[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[2]_i_3 
       (.I0(s_axi_lite_wdata[20]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[2]),
        .I3(Q),
        .O(\tx_data[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[3]_i_1 
       (.I0(\tx_data[3]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[21]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[3]),
        .I4(state[2]),
        .I5(\tx_data[3]_i_3_n_0 ),
        .O(\tx_data[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[3]_i_2 
       (.I0(s_axi_lite_awaddr[21]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[3]),
        .I3(state[0]),
        .O(\tx_data[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[3]_i_3 
       (.I0(s_axi_lite_wdata[21]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[3]),
        .I3(Q),
        .O(\tx_data[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[4]_i_1 
       (.I0(\tx_data[4]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[22]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[4]),
        .I4(state[2]),
        .I5(\tx_data[4]_i_3_n_0 ),
        .O(\tx_data[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[4]_i_2 
       (.I0(s_axi_lite_awaddr[22]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[4]),
        .I3(state[0]),
        .O(\tx_data[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[4]_i_3 
       (.I0(s_axi_lite_wdata[22]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[4]),
        .I3(Q),
        .O(\tx_data[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[5]_i_1 
       (.I0(\tx_data[5]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[23]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[5]),
        .I4(state[2]),
        .I5(\tx_data[5]_i_3_n_0 ),
        .O(\tx_data[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[5]_i_2 
       (.I0(s_axi_lite_awaddr[23]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[5]),
        .I3(state[0]),
        .O(\tx_data[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[5]_i_3 
       (.I0(s_axi_lite_wdata[23]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[5]),
        .I3(Q),
        .O(\tx_data[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[6]_i_1 
       (.I0(\tx_data[6]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[24]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[6]),
        .I4(state[2]),
        .I5(\tx_data[6]_i_3_n_0 ),
        .O(\tx_data[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[6]_i_2 
       (.I0(s_axi_lite_awaddr[24]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[6]),
        .I3(state[0]),
        .O(\tx_data[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[6]_i_3 
       (.I0(s_axi_lite_wdata[24]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[6]),
        .I3(Q),
        .O(\tx_data[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[7]_i_1 
       (.I0(\tx_data[7]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[25]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[7]),
        .I4(state[2]),
        .I5(\tx_data[7]_i_3_n_0 ),
        .O(\tx_data[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[7]_i_2 
       (.I0(s_axi_lite_awaddr[25]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[7]),
        .I3(state[0]),
        .O(\tx_data[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[7]_i_3 
       (.I0(s_axi_lite_wdata[25]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[7]),
        .I3(Q),
        .O(\tx_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[8]_i_1 
       (.I0(\tx_data[8]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[26]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[8]),
        .I4(state[2]),
        .I5(\tx_data[8]_i_3_n_0 ),
        .O(\tx_data[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[8]_i_2 
       (.I0(s_axi_lite_awaddr[26]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[8]),
        .I3(state[0]),
        .O(\tx_data[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[8]_i_3 
       (.I0(s_axi_lite_wdata[26]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[8]),
        .I3(Q),
        .O(\tx_data[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \tx_data[9]_i_1 
       (.I0(\tx_data[9]_i_2_n_0 ),
        .I1(s_axi_lite_araddr[27]),
        .I2(state[3]),
        .I3(s_axi_lite_araddr[9]),
        .I4(state[2]),
        .I5(\tx_data[9]_i_3_n_0 ),
        .O(\tx_data[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[9]_i_2 
       (.I0(s_axi_lite_awaddr[27]),
        .I1(state[1]),
        .I2(s_axi_lite_awaddr[9]),
        .I3(state[0]),
        .O(\tx_data[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \tx_data[9]_i_3 
       (.I0(s_axi_lite_wdata[27]),
        .I1(state[5]),
        .I2(s_axi_lite_wdata[9]),
        .I3(Q),
        .O(\tx_data[9]_i_3_n_0 ));
  FDRE \tx_data_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[0]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [0]),
        .R(SR));
  FDRE \tx_data_reg[10] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[10]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [10]),
        .R(SR));
  FDRE \tx_data_reg[11] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[11]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [11]),
        .R(SR));
  FDRE \tx_data_reg[12] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[12]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [12]),
        .R(SR));
  FDRE \tx_data_reg[13] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[13]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [13]),
        .R(SR));
  FDRE \tx_data_reg[14] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[14]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [14]),
        .R(SR));
  FDRE \tx_data_reg[15] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[15]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [15]),
        .R(SR));
  FDRE \tx_data_reg[16] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[16]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [16]),
        .R(SR));
  FDRE \tx_data_reg[17] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[17]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [17]),
        .R(SR));
  FDRE \tx_data_reg[18] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[18]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [18]),
        .R(SR));
  FDRE \tx_data_reg[19] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[19]_i_2_n_0 ),
        .Q(\tx_data_reg[19]_0 [19]),
        .R(SR));
  FDRE \tx_data_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[1]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [1]),
        .R(SR));
  FDRE \tx_data_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[2]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [2]),
        .R(SR));
  FDRE \tx_data_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[3]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [3]),
        .R(SR));
  FDRE \tx_data_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[4]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [4]),
        .R(SR));
  FDRE \tx_data_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[5]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [5]),
        .R(SR));
  FDRE \tx_data_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[6]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [6]),
        .R(SR));
  FDRE \tx_data_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[7]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [7]),
        .R(SR));
  FDRE \tx_data_reg[8] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[8]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [8]),
        .R(SR));
  FDRE \tx_data_reg[9] 
       (.C(s_axi_lite_aclk),
        .CE(next_tx_data),
        .D(\tx_data[9]_i_1_n_0 ),
        .Q(\tx_data_reg[19]_0 [9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAA0AAAAAA80)) 
    tx_fifo_we_i_1
       (.I0(send_ready_i_2_n_0),
        .I1(state[1]),
        .I2(send_ready),
        .I3(tx_fifo_we_reg_0),
        .I4(send_ready_i_4_n_0),
        .I5(tx_fifo_we_i_3_n_0),
        .O(next_tx_fifo_we));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'hE)) 
    tx_fifo_we_i_3
       (.I0(state[3]),
        .I1(state[5]),
        .O(tx_fifo_we_i_3_n_0));
  FDRE tx_fifo_we_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(next_tx_fifo_we),
        .Q(tx_fifo_we),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_count[0]_i_1 
       (.I0(\wait_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_count[1]_i_1 
       (.I0(\wait_count_reg_n_0_[0] ),
        .I1(\wait_count_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_count[2]_i_1 
       (.I0(\wait_count_reg_n_0_[0] ),
        .I1(\wait_count_reg_n_0_[1] ),
        .I2(\wait_count_reg_n_0_[2] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_count[3]_i_1 
       (.I0(\wait_count_reg_n_0_[1] ),
        .I1(\wait_count_reg_n_0_[0] ),
        .I2(\wait_count_reg_n_0_[2] ),
        .I3(\wait_count_reg_n_0_[3] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_count[4]_i_1 
       (.I0(\wait_count_reg_n_0_[2] ),
        .I1(\wait_count_reg_n_0_[0] ),
        .I2(\wait_count_reg_n_0_[1] ),
        .I3(\wait_count_reg_n_0_[3] ),
        .I4(\wait_count_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wait_count[5]_i_1 
       (.I0(\wait_count_reg_n_0_[3] ),
        .I1(\wait_count_reg_n_0_[1] ),
        .I2(\wait_count_reg_n_0_[0] ),
        .I3(\wait_count_reg_n_0_[2] ),
        .I4(\wait_count_reg_n_0_[4] ),
        .I5(\wait_count_reg_n_0_[5] ),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \wait_count[6]_i_1 
       (.I0(\wait_count[8]_i_3_n_0 ),
        .I1(\wait_count_reg_n_0_[6] ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_count[7]_i_1 
       (.I0(\wait_count[8]_i_3_n_0 ),
        .I1(\wait_count_reg_n_0_[6] ),
        .I2(\wait_count_reg_n_0_[7] ),
        .O(p_0_in[7]));
  LUT5 #(
    .INIT(32'h00100000)) 
    \wait_count[8]_i_1 
       (.I0(state[5]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(wait_done),
        .I4(ch0_ready_out_i_2_n_0),
        .O(next_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \wait_count[8]_i_2 
       (.I0(\wait_count_reg_n_0_[6] ),
        .I1(\wait_count[8]_i_3_n_0 ),
        .I2(\wait_count_reg_n_0_[7] ),
        .O(p_0_in[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wait_count[8]_i_3 
       (.I0(\wait_count_reg_n_0_[5] ),
        .I1(\wait_count_reg_n_0_[3] ),
        .I2(\wait_count_reg_n_0_[1] ),
        .I3(\wait_count_reg_n_0_[0] ),
        .I4(\wait_count_reg_n_0_[2] ),
        .I5(\wait_count_reg_n_0_[4] ),
        .O(\wait_count[8]_i_3_n_0 ));
  FDRE \wait_count_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[0]),
        .Q(\wait_count_reg_n_0_[0] ),
        .R(SR));
  FDRE \wait_count_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[1]),
        .Q(\wait_count_reg_n_0_[1] ),
        .R(SR));
  FDRE \wait_count_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[2]),
        .Q(\wait_count_reg_n_0_[2] ),
        .R(SR));
  FDRE \wait_count_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[3]),
        .Q(\wait_count_reg_n_0_[3] ),
        .R(SR));
  FDRE \wait_count_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[4]),
        .Q(\wait_count_reg_n_0_[4] ),
        .R(SR));
  FDRE \wait_count_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[5]),
        .Q(\wait_count_reg_n_0_[5] ),
        .R(SR));
  FDRE \wait_count_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[6]),
        .Q(\wait_count_reg_n_0_[6] ),
        .R(SR));
  FDRE \wait_count_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[7]),
        .Q(\wait_count_reg_n_0_[7] ),
        .R(SR));
  FDRE \wait_count_reg[8] 
       (.C(s_axi_lite_aclk),
        .CE(next_wait_count),
        .D(p_0_in[8]),
        .Q(wait_done),
        .R(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer
   (Q,
    p_0_in,
    E,
    \mux_by_2.pack_reg0_reg[27]_0 ,
    clk_ph_out,
    wr_rst_busy,
    aw_ch_data_valid,
    full,
    rx_user_reset);
  output [27:0]Q;
  output p_0_in;
  input [0:0]E;
  input [27:0]\mux_by_2.pack_reg0_reg[27]_0 ;
  input clk_ph_out;
  input wr_rst_busy;
  input aw_ch_data_valid;
  input full;
  input rx_user_reset;

  wire [0:0]E;
  wire [27:0]Q;
  wire aw_ch_data_valid;
  wire clk_ph_out;
  wire full;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire [27:0]\mux_by_2.pack_reg0_reg[27]_0 ;
  wire p_0_in;
  wire rx_user_reset;
  wire wr_rst_busy;

  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(wr_rst_busy),
        .I2(aw_ch_data_valid),
        .I3(full),
        .I4(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(wr_rst_busy),
        .I2(aw_ch_data_valid),
        .I3(full),
        .I4(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[20] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[21] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[22] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[23] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[24] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[25] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[26] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[27] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_packer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer_35
   (Q,
    p_0_in,
    E,
    \mux_by_2.pack_reg0_reg[27]_0 ,
    clk_ph_out,
    wr_rst_busy,
    ar_ch_data_valid,
    full,
    rx_user_reset);
  output [27:0]Q;
  output p_0_in;
  input [0:0]E;
  input [27:0]\mux_by_2.pack_reg0_reg[27]_0 ;
  input clk_ph_out;
  input wr_rst_busy;
  input ar_ch_data_valid;
  input full;
  input rx_user_reset;

  wire [0:0]E;
  wire [27:0]Q;
  wire ar_ch_data_valid;
  wire clk_ph_out;
  wire full;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire [27:0]\mux_by_2.pack_reg0_reg[27]_0 ;
  wire p_0_in;
  wire rx_user_reset;
  wire wr_rst_busy;

  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(wr_rst_busy),
        .I2(ar_ch_data_valid),
        .I3(full),
        .I4(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(wr_rst_busy),
        .I2(ar_ch_data_valid),
        .I3(full),
        .I4(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[19] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[20] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[21] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[22] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[23] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[24] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[25] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[26] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[27] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[27]_0 [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_packer" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_packer__parameterized0
   (Q,
    p_0_in,
    E,
    \mux_by_2.pack_reg0_reg[18]_0 ,
    clk_ph_out,
    wr_rst_busy,
    wd_ch_data_valid,
    full,
    rx_user_reset);
  output [18:0]Q;
  output p_0_in;
  input [0:0]E;
  input [18:0]\mux_by_2.pack_reg0_reg[18]_0 ;
  input clk_ph_out;
  input wr_rst_busy;
  input wd_ch_data_valid;
  input full;
  input rx_user_reset;

  wire [0:0]E;
  wire [18:0]Q;
  wire clk_ph_out;
  wire full;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg_n_0_[0] ;
  wire [18:0]\mux_by_2.pack_reg0_reg[18]_0 ;
  wire p_0_in;
  wire rx_user_reset;
  wire wd_ch_data_valid;
  wire wr_rst_busy;

  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(p_0_in),
        .I1(wr_rst_busy),
        .I2(wd_ch_data_valid),
        .I3(full),
        .I4(\mux_by_2.data_count_reg_n_0_[0] ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg_n_0_[0] ),
        .I1(wr_rst_busy),
        .I2(wd_ch_data_valid),
        .I3(full),
        .I4(p_0_in),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg_n_0_[0] ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(rx_user_reset));
  FDRE \mux_by_2.pack_reg0_reg[0] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[10] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[11] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[12] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[13] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[14] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[15] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[16] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[17] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[18] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[1] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[2] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[3] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[4] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[5] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[6] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[7] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[8] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \mux_by_2.pack_reg0_reg[9] 
       (.C(clk_ph_out),
        .CE(E),
        .D(\mux_by_2.pack_reg0_reg[18]_0 [9]),
        .Q(Q[9]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_calib
   (flip_type,
    \deskew_enable_gen.min_flip_0 ,
    \deskew_enable_gen.min_flip_1 ,
    calib_done,
    calib_error,
    \deskew_enable_gen.p3_val_reg[0]_0 ,
    \deskew_enable_gen.f3_val_reg[0]_0 ,
    Q,
    \deskew_enable_gen.grp_count_reg[3]_0 ,
    \deskew_enable_gen.grp_count_reg[3]_1 ,
    \deskew_enable_gen.grp_count_reg[2]_0 ,
    \deskew_enable_gen.grp_count_reg[2]_1 ,
    \deskew_enable_gen.grp_count_reg[2]_2 ,
    \deskew_enable_gen.grp_count_reg[1]_0 ,
    \deskew_enable_gen.step_count_reg[2]_0 ,
    \deskew_enable_gen.step_count ,
    \deskew_enable_gen.delay_tap_reg[4]_0 ,
    \deskew_enable_gen.grp_count_reg[1]_1 ,
    \ddr_data_gen.data_dly_reg[23]_0 ,
    \deskew_enable_gen.grp_count_reg[3]_2 ,
    \deskew_enable_gen.grp_count_reg[1]_2 ,
    \deskew_enable_gen.grp_count_reg[1]_3 ,
    \deskew_enable_gen.min_flip_0_reg_0 ,
    next_calib_done,
    \deskew_enable_gen.state_reg[3]_0 ,
    \deskew_enable_gen.state_reg[10]_0 ,
    \deskew_enable_gen.state_reg[0]_0 ,
    \deskew_enable_gen.state_reg[1]_0 ,
    \deskew_enable_gen.data_out_reg[33]_0 ,
    \deskew_enable_gen.delay_load_reg[32]_0 ,
    \deskew_enable_gen.data_out_reg[24]_0 ,
    \deskew_enable_gen.data_out_reg[24]_1 ,
    \deskew_enable_gen.data_out_reg[24]_2 ,
    clk_ph_out,
    SR,
    S,
    f0_val0_carry__0_0,
    \deskew_enable_gen.f0_val_reg[0]_0 ,
    p2_val0_carry__0_0,
    \deskew_enable_gen.p2_val_reg[0]_0 ,
    \deskew_enable_gen.p2_val_reg[0]_1 ,
    p1_val0_carry__0_0,
    \deskew_enable_gen.p1_val_reg[0]_0 ,
    \deskew_enable_gen.p1_val_reg[0]_1 ,
    p0_val0_carry__0_0,
    \deskew_enable_gen.p0_val_reg[0]_0 ,
    \deskew_enable_gen.p0_val_reg[0]_1 ,
    \deskew_enable_gen.p3_val_reg0_carry__0_0 ,
    \deskew_enable_gen.p3_val_reg[0]_1 ,
    \deskew_enable_gen.p3_val_reg[0]_2 ,
    \deskew_enable_gen.flip_type_reg_0 ,
    \deskew_enable_gen.min_flip_0_reg_1 ,
    \deskew_enable_gen.min_flip_1_reg_0 ,
    \deskew_enable_gen.calib_done_reg_0 ,
    \deskew_enable_gen.calib_error_reg_0 ,
    calib_start,
    \ddr_data_gen.data_dly_reg[33]_0 );
  output flip_type;
  output \deskew_enable_gen.min_flip_0 ;
  output \deskew_enable_gen.min_flip_1 ;
  output calib_done;
  output calib_error;
  output \deskew_enable_gen.p3_val_reg[0]_0 ;
  output \deskew_enable_gen.f3_val_reg[0]_0 ;
  output [1:0]Q;
  output \deskew_enable_gen.grp_count_reg[3]_0 ;
  output \deskew_enable_gen.grp_count_reg[3]_1 ;
  output \deskew_enable_gen.grp_count_reg[2]_0 ;
  output \deskew_enable_gen.grp_count_reg[2]_1 ;
  output \deskew_enable_gen.grp_count_reg[2]_2 ;
  output \deskew_enable_gen.grp_count_reg[1]_0 ;
  output \deskew_enable_gen.step_count_reg[2]_0 ;
  output [2:0]\deskew_enable_gen.step_count ;
  output [4:0]\deskew_enable_gen.delay_tap_reg[4]_0 ;
  output \deskew_enable_gen.grp_count_reg[1]_1 ;
  output [1:0]\ddr_data_gen.data_dly_reg[23]_0 ;
  output \deskew_enable_gen.grp_count_reg[3]_2 ;
  output \deskew_enable_gen.grp_count_reg[1]_2 ;
  output \deskew_enable_gen.grp_count_reg[1]_3 ;
  output \deskew_enable_gen.min_flip_0_reg_0 ;
  output next_calib_done;
  output \deskew_enable_gen.state_reg[3]_0 ;
  output \deskew_enable_gen.state_reg[10]_0 ;
  output \deskew_enable_gen.state_reg[0]_0 ;
  output \deskew_enable_gen.state_reg[1]_0 ;
  output [33:0]\deskew_enable_gen.data_out_reg[33]_0 ;
  output [8:0]\deskew_enable_gen.delay_load_reg[32]_0 ;
  output \deskew_enable_gen.data_out_reg[24]_0 ;
  output \deskew_enable_gen.data_out_reg[24]_1 ;
  output \deskew_enable_gen.data_out_reg[24]_2 ;
  input clk_ph_out;
  input [0:0]SR;
  input [0:0]S;
  input [0:0]f0_val0_carry__0_0;
  input [0:0]\deskew_enable_gen.f0_val_reg[0]_0 ;
  input [3:0]p2_val0_carry__0_0;
  input [3:0]\deskew_enable_gen.p2_val_reg[0]_0 ;
  input [2:0]\deskew_enable_gen.p2_val_reg[0]_1 ;
  input [3:0]p1_val0_carry__0_0;
  input [3:0]\deskew_enable_gen.p1_val_reg[0]_0 ;
  input [2:0]\deskew_enable_gen.p1_val_reg[0]_1 ;
  input [3:0]p0_val0_carry__0_0;
  input [3:0]\deskew_enable_gen.p0_val_reg[0]_0 ;
  input [2:0]\deskew_enable_gen.p0_val_reg[0]_1 ;
  input [3:0]\deskew_enable_gen.p3_val_reg0_carry__0_0 ;
  input [3:0]\deskew_enable_gen.p3_val_reg[0]_1 ;
  input [2:0]\deskew_enable_gen.p3_val_reg[0]_2 ;
  input \deskew_enable_gen.flip_type_reg_0 ;
  input \deskew_enable_gen.min_flip_0_reg_1 ;
  input \deskew_enable_gen.min_flip_1_reg_0 ;
  input \deskew_enable_gen.calib_done_reg_0 ;
  input \deskew_enable_gen.calib_error_reg_0 ;
  input calib_start;
  input [33:0]\ddr_data_gen.data_dly_reg[33]_0 ;

  wire [1:0]Q;
  wire [0:0]S;
  wire [0:0]SR;
  wire calib_done;
  wire calib_error;
  wire calib_start;
  wire clk_ph_out;
  wire [2:0]count;
  wire [1:0]\ddr_data_gen.data_dly_reg[23]_0 ;
  wire [33:0]\ddr_data_gen.data_dly_reg[33]_0 ;
  wire \ddr_data_gen.data_dly_reg_n_0_[0] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[10] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[12] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[14] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[16] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[18] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[20] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[22] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[24] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[26] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[28] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[2] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[30] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[32] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[4] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[6] ;
  wire \ddr_data_gen.data_dly_reg_n_0_[8] ;
  wire [32:0]delay_load0;
  wire \deskew_enable_gen.calib_done_i_3_n_0 ;
  wire \deskew_enable_gen.calib_done_reg_0 ;
  wire \deskew_enable_gen.calib_error_reg_0 ;
  wire \deskew_enable_gen.count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.count[2]_i_3_n_0 ;
  wire \deskew_enable_gen.count[2]_i_4_n_0 ;
  wire \deskew_enable_gen.count[2]_i_5_n_0 ;
  wire \deskew_enable_gen.count[2]_i_6_n_0 ;
  wire \deskew_enable_gen.count[2]_i_7_n_0 ;
  wire [33:0]\deskew_enable_gen.data_flip_sel ;
  wire [33:0]\deskew_enable_gen.data_flip_sel0 ;
  wire \deskew_enable_gen.data_out[0]_i_2_n_0 ;
  wire \deskew_enable_gen.data_out[12]_i_2_n_0 ;
  wire \deskew_enable_gen.data_out[24]_i_2_n_0 ;
  wire \deskew_enable_gen.data_out_reg[24]_0 ;
  wire \deskew_enable_gen.data_out_reg[24]_1 ;
  wire \deskew_enable_gen.data_out_reg[24]_2 ;
  wire [33:0]\deskew_enable_gen.data_out_reg[33]_0 ;
  wire [33:0]\deskew_enable_gen.data_stage0 ;
  wire [33:0]\deskew_enable_gen.data_stage1 ;
  wire [33:0]\deskew_enable_gen.data_stage2 ;
  wire [33:0]\deskew_enable_gen.data_stage_sel0 ;
  wire [33:0]\deskew_enable_gen.data_stage_sel00 ;
  wire \deskew_enable_gen.data_stage_sel0[33]_i_3_n_0 ;
  wire \deskew_enable_gen.data_stage_sel0[33]_i_4_n_0 ;
  wire \deskew_enable_gen.data_stage_sel0[33]_i_5_n_0 ;
  wire [33:0]\deskew_enable_gen.data_stage_sel1 ;
  wire [33:0]\deskew_enable_gen.data_stage_sel10 ;
  wire \deskew_enable_gen.delay_load[14]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_load[26]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_load[32]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_load[32]_i_3_n_0 ;
  wire [8:0]\deskew_enable_gen.delay_load_reg[32]_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[0]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[1]_i_6_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[2]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_2_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[3]_i_6_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_10_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_11_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_12_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_13_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_14_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_15_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_16_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_17_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_18_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_19_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_1_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_20_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_21_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_3_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_4_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_5_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_6_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_7_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_8_n_0 ;
  wire \deskew_enable_gen.delay_tap[4]_i_9_n_0 ;
  wire [4:0]\deskew_enable_gen.delay_tap_reg[4]_0 ;
  wire \deskew_enable_gen.dout_p0_val ;
  wire \deskew_enable_gen.dout_p0_val0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_i_1_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_i_2_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_i_3_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_i_4_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_i_5_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_n_1 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_n_2 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__0_n_3 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_2_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_3_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_4_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_5_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_i_6_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_n_1 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_n_2 ;
  wire \deskew_enable_gen.dout_p0_val0_carry__1_n_3 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_i_1_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_i_2_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_i_3_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_i_4_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_n_0 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_n_1 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_n_2 ;
  wire \deskew_enable_gen.dout_p0_val0_carry_n_3 ;
  wire [0:0]\deskew_enable_gen.f0_val_reg[0]_0 ;
  wire \deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ;
  wire \deskew_enable_gen.f0_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f1_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f1_val_reg_n_0_[1] ;
  wire \deskew_enable_gen.f2_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.f3_val_reg0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_i_1_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_i_2_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_i_3_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_i_4_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_n_1 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_n_2 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__0_n_3 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_i_2_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_i_3_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_i_4_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_n_1 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_n_2 ;
  wire \deskew_enable_gen.f3_val_reg0_carry__1_n_3 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_i_1_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_i_2_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_i_3_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_i_4_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_n_0 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_n_1 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_n_2 ;
  wire \deskew_enable_gen.f3_val_reg0_carry_n_3 ;
  wire \deskew_enable_gen.f3_val_reg[0]_0 ;
  wire \deskew_enable_gen.flip_type_reg_0 ;
  wire \deskew_enable_gen.grp_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_1_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_3_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_4_n_0 ;
  wire \deskew_enable_gen.grp_count[4]_i_5_n_0 ;
  wire [6:4]\deskew_enable_gen.grp_count_mul ;
  wire \deskew_enable_gen.grp_count_reg[1]_0 ;
  wire \deskew_enable_gen.grp_count_reg[1]_1 ;
  wire \deskew_enable_gen.grp_count_reg[1]_2 ;
  wire \deskew_enable_gen.grp_count_reg[1]_3 ;
  wire \deskew_enable_gen.grp_count_reg[2]_0 ;
  wire \deskew_enable_gen.grp_count_reg[2]_1 ;
  wire \deskew_enable_gen.grp_count_reg[2]_2 ;
  wire \deskew_enable_gen.grp_count_reg[3]_0 ;
  wire \deskew_enable_gen.grp_count_reg[3]_1 ;
  wire \deskew_enable_gen.grp_count_reg[3]_2 ;
  wire \deskew_enable_gen.grp_flip ;
  wire \deskew_enable_gen.grp_flip_i_2_n_0 ;
  wire \deskew_enable_gen.grp_flip_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p0_val ;
  wire \deskew_enable_gen.grp_p0_val0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_n_1 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_n_2 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__0_n_3 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_n_1 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_n_2 ;
  wire \deskew_enable_gen.grp_p0_val0_carry__1_n_3 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_n_0 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_n_1 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_n_2 ;
  wire \deskew_enable_gen.grp_p0_val0_carry_n_3 ;
  wire \deskew_enable_gen.grp_p1_val ;
  wire \deskew_enable_gen.grp_p1_val0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_n_1 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_n_2 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__0_n_3 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_n_1 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_n_2 ;
  wire \deskew_enable_gen.grp_p1_val0_carry__1_n_3 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_n_0 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_n_1 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_n_2 ;
  wire \deskew_enable_gen.grp_p1_val0_carry_n_3 ;
  wire \deskew_enable_gen.grp_p3_val ;
  wire \deskew_enable_gen.grp_p3_val0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_10_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_n_1 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_n_2 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__0_n_3 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_n_1 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_n_2 ;
  wire \deskew_enable_gen.grp_p3_val0_carry__1_n_3 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_10_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_11_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_12_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_1_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_2_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_3_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_4_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_n_0 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_n_1 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_n_2 ;
  wire \deskew_enable_gen.grp_p3_val0_carry_n_3 ;
  wire [4:0]\deskew_enable_gen.max_value_0 ;
  wire [4:0]\deskew_enable_gen.max_value_1 ;
  wire \deskew_enable_gen.max_value_1[4]_i_3_n_0 ;
  wire \deskew_enable_gen.max_value_1[4]_i_4_n_0 ;
  wire \deskew_enable_gen.min_flip_0 ;
  wire \deskew_enable_gen.min_flip_0_i_3_n_0 ;
  wire \deskew_enable_gen.min_flip_0_reg_0 ;
  wire \deskew_enable_gen.min_flip_0_reg_1 ;
  wire \deskew_enable_gen.min_flip_1 ;
  wire \deskew_enable_gen.min_flip_1_reg_0 ;
  wire [4:0]\deskew_enable_gen.min_value_0 ;
  wire \deskew_enable_gen.min_value_0[4]_i_1_n_0 ;
  wire [4:0]\deskew_enable_gen.min_value_1 ;
  wire \deskew_enable_gen.next_data_stage_sel0 ;
  wire \deskew_enable_gen.next_data_stage_sel1 ;
  wire [4:0]\deskew_enable_gen.next_delay_tap ;
  wire [4:0]\deskew_enable_gen.next_grp_count ;
  wire \deskew_enable_gen.next_grp_flip ;
  wire \deskew_enable_gen.next_max_value_0 ;
  wire \deskew_enable_gen.next_max_value_1 ;
  wire [4:0]\deskew_enable_gen.next_min_value_0 ;
  wire \deskew_enable_gen.next_min_value_1 ;
  wire [11:0]\deskew_enable_gen.next_state ;
  wire [3:0]\deskew_enable_gen.p0_val_reg[0]_0 ;
  wire [2:0]\deskew_enable_gen.p0_val_reg[0]_1 ;
  wire \deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ;
  wire \deskew_enable_gen.p0_val_reg_n_0_[0] ;
  wire [3:0]\deskew_enable_gen.p1_val_reg[0]_0 ;
  wire [2:0]\deskew_enable_gen.p1_val_reg[0]_1 ;
  wire \deskew_enable_gen.p1_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.p1_val_reg_n_0_[1] ;
  wire [3:0]\deskew_enable_gen.p2_val_reg[0]_0 ;
  wire [2:0]\deskew_enable_gen.p2_val_reg[0]_1 ;
  wire \deskew_enable_gen.p2_val_reg_n_0_[0] ;
  wire \deskew_enable_gen.p3_val_reg0 ;
  wire [3:0]\deskew_enable_gen.p3_val_reg0_carry__0_0 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__0_n_0 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__0_n_1 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__0_n_2 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__0_n_3 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__1_i_1_n_0 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__1_n_1 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__1_n_2 ;
  wire \deskew_enable_gen.p3_val_reg0_carry__1_n_3 ;
  wire \deskew_enable_gen.p3_val_reg0_carry_n_0 ;
  wire \deskew_enable_gen.p3_val_reg0_carry_n_1 ;
  wire \deskew_enable_gen.p3_val_reg0_carry_n_2 ;
  wire \deskew_enable_gen.p3_val_reg0_carry_n_3 ;
  wire \deskew_enable_gen.p3_val_reg[0]_0 ;
  wire [3:0]\deskew_enable_gen.p3_val_reg[0]_1 ;
  wire [2:0]\deskew_enable_gen.p3_val_reg[0]_2 ;
  wire \deskew_enable_gen.pat_count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_3_n_0 ;
  wire \deskew_enable_gen.pat_count[2]_i_4_n_0 ;
  wire [33:0]\deskew_enable_gen.selected_data ;
  wire [11:0]\deskew_enable_gen.state ;
  wire \deskew_enable_gen.state[10]_i_2_n_0 ;
  wire \deskew_enable_gen.state[10]_i_4_n_0 ;
  wire \deskew_enable_gen.state[11]_i_10_n_0 ;
  wire \deskew_enable_gen.state[11]_i_11_n_0 ;
  wire \deskew_enable_gen.state[11]_i_1_n_0 ;
  wire \deskew_enable_gen.state[11]_i_4_n_0 ;
  wire \deskew_enable_gen.state[11]_i_5_n_0 ;
  wire \deskew_enable_gen.state[11]_i_6_n_0 ;
  wire \deskew_enable_gen.state[11]_i_7_n_0 ;
  wire \deskew_enable_gen.state[11]_i_8_n_0 ;
  wire \deskew_enable_gen.state[11]_i_9_n_0 ;
  wire \deskew_enable_gen.state[1]_i_2_n_0 ;
  wire \deskew_enable_gen.state[1]_i_3_n_0 ;
  wire \deskew_enable_gen.state[1]_i_4_n_0 ;
  wire \deskew_enable_gen.state[2]_i_2_n_0 ;
  wire \deskew_enable_gen.state[3]_i_2_n_0 ;
  wire \deskew_enable_gen.state[3]_i_3_n_0 ;
  wire \deskew_enable_gen.state[3]_i_4_n_0 ;
  wire \deskew_enable_gen.state[5]_i_2_n_0 ;
  wire \deskew_enable_gen.state[6]_i_4_n_0 ;
  wire \deskew_enable_gen.state[8]_i_2_n_0 ;
  wire \deskew_enable_gen.state[9]_i_2_n_0 ;
  wire \deskew_enable_gen.state[9]_i_3_n_0 ;
  wire \deskew_enable_gen.state[9]_i_4_n_0 ;
  wire \deskew_enable_gen.state[9]_i_5_n_0 ;
  wire \deskew_enable_gen.state_reg[0]_0 ;
  wire \deskew_enable_gen.state_reg[10]_0 ;
  wire \deskew_enable_gen.state_reg[1]_0 ;
  wire \deskew_enable_gen.state_reg[3]_0 ;
  wire [2:0]\deskew_enable_gen.step_count ;
  wire \deskew_enable_gen.step_count[0]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[0]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[1]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[1]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[1]_i_3_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_1_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_2_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_3_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_4_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_5_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_6_n_0 ;
  wire \deskew_enable_gen.step_count[2]_i_7_n_0 ;
  wire \deskew_enable_gen.step_count_reg[2]_0 ;
  wire f0_val0;
  wire [0:0]f0_val0_carry__0_0;
  wire f0_val0_carry__0_i_2_n_0;
  wire f0_val0_carry__0_i_3_n_0;
  wire f0_val0_carry__0_i_4_n_0;
  wire f0_val0_carry__0_n_0;
  wire f0_val0_carry__0_n_1;
  wire f0_val0_carry__0_n_2;
  wire f0_val0_carry__0_n_3;
  wire f0_val0_carry__1_i_1_n_0;
  wire f0_val0_carry__1_i_2_n_0;
  wire f0_val0_carry__1_i_3_n_0;
  wire f0_val0_carry__1_i_4_n_0;
  wire f0_val0_carry__1_n_1;
  wire f0_val0_carry__1_n_2;
  wire f0_val0_carry__1_n_3;
  wire f0_val0_carry_i_2_n_0;
  wire f0_val0_carry_i_3_n_0;
  wire f0_val0_carry_i_4_n_0;
  wire f0_val0_carry_n_0;
  wire f0_val0_carry_n_1;
  wire f0_val0_carry_n_2;
  wire f0_val0_carry_n_3;
  wire f1_val0;
  wire f1_val0_carry__0_i_1_n_0;
  wire f1_val0_carry__0_i_2_n_0;
  wire f1_val0_carry__0_i_3_n_0;
  wire f1_val0_carry__0_i_4_n_0;
  wire f1_val0_carry__0_n_0;
  wire f1_val0_carry__0_n_1;
  wire f1_val0_carry__0_n_2;
  wire f1_val0_carry__0_n_3;
  wire f1_val0_carry__1_i_1_n_0;
  wire f1_val0_carry__1_i_2_n_0;
  wire f1_val0_carry__1_i_3_n_0;
  wire f1_val0_carry__1_i_4_n_0;
  wire f1_val0_carry__1_n_1;
  wire f1_val0_carry__1_n_2;
  wire f1_val0_carry__1_n_3;
  wire f1_val0_carry_i_1_n_0;
  wire f1_val0_carry_i_2_n_0;
  wire f1_val0_carry_i_3_n_0;
  wire f1_val0_carry_i_4_n_0;
  wire f1_val0_carry_n_0;
  wire f1_val0_carry_n_1;
  wire f1_val0_carry_n_2;
  wire f1_val0_carry_n_3;
  wire f2_val0;
  wire f2_val0_carry__0_i_2_n_0;
  wire f2_val0_carry__0_i_3_n_0;
  wire f2_val0_carry__0_i_4_n_0;
  wire f2_val0_carry__0_n_0;
  wire f2_val0_carry__0_n_1;
  wire f2_val0_carry__0_n_2;
  wire f2_val0_carry__0_n_3;
  wire f2_val0_carry__1_i_1_n_0;
  wire f2_val0_carry__1_i_2_n_0;
  wire f2_val0_carry__1_i_3_n_0;
  wire f2_val0_carry__1_i_4_n_0;
  wire f2_val0_carry__1_n_1;
  wire f2_val0_carry__1_n_2;
  wire f2_val0_carry__1_n_3;
  wire f2_val0_carry_i_1_n_0;
  wire f2_val0_carry_i_2_n_0;
  wire f2_val0_carry_i_3_n_0;
  wire f2_val0_carry_i_4_n_0;
  wire f2_val0_carry_n_0;
  wire f2_val0_carry_n_1;
  wire f2_val0_carry_n_2;
  wire f2_val0_carry_n_3;
  (* RTL_KEEP = "true" *) wire [3:0]f3_val;
  wire flip_type;
  wire next_calib_done;
  wire p0_val0;
  wire [3:0]p0_val0_carry__0_0;
  wire p0_val0_carry__0_n_0;
  wire p0_val0_carry__0_n_1;
  wire p0_val0_carry__0_n_2;
  wire p0_val0_carry__0_n_3;
  wire p0_val0_carry__1_i_1_n_0;
  wire p0_val0_carry__1_n_1;
  wire p0_val0_carry__1_n_2;
  wire p0_val0_carry__1_n_3;
  wire p0_val0_carry_n_0;
  wire p0_val0_carry_n_1;
  wire p0_val0_carry_n_2;
  wire p0_val0_carry_n_3;
  wire p1_val0;
  wire [3:0]p1_val0_carry__0_0;
  wire p1_val0_carry__0_n_0;
  wire p1_val0_carry__0_n_1;
  wire p1_val0_carry__0_n_2;
  wire p1_val0_carry__0_n_3;
  wire p1_val0_carry__1_i_1_n_0;
  wire p1_val0_carry__1_n_1;
  wire p1_val0_carry__1_n_2;
  wire p1_val0_carry__1_n_3;
  wire p1_val0_carry_n_0;
  wire p1_val0_carry_n_1;
  wire p1_val0_carry_n_2;
  wire p1_val0_carry_n_3;
  wire p2_val0;
  wire [3:0]p2_val0_carry__0_0;
  wire p2_val0_carry__0_n_0;
  wire p2_val0_carry__0_n_1;
  wire p2_val0_carry__0_n_2;
  wire p2_val0_carry__0_n_3;
  wire p2_val0_carry__1_i_1_n_0;
  wire p2_val0_carry__1_n_1;
  wire p2_val0_carry__1_n_2;
  wire p2_val0_carry__1_n_3;
  wire p2_val0_carry_n_0;
  wire p2_val0_carry_n_1;
  wire p2_val0_carry_n_2;
  wire p2_val0_carry_n_3;
  (* RTL_KEEP = "true" *) wire [3:0]p3_val;
  wire p_0_in4_in;
  wire p_0_in7_in;
  wire p_2_in5_in;
  wire p_2_in8_in;
  wire p_3_in;
  wire p_3_in9_in;
  wire [2:0]pat_count;
  wire \sio_slav_calib_fsm.master_ack_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_ack_i_7_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_init_i_7_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_2_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_3_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_4_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_5_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_6_n_0 ;
  wire \sio_slav_calib_fsm.master_nack_i_7_n_0 ;
  wire [32:0]unalign_data;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.dout_p0_val0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.f3_val_reg0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p0_val0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p1_val0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.grp_p3_val0_carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg0_carry_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg0_carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_deskew_enable_gen.p3_val_reg0_carry__1_O_UNCONNECTED ;
  wire [3:0]NLW_f0_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_f0_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_f0_val0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_f1_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_f1_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_f1_val0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_f2_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_f2_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_f2_val0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_p0_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_p0_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_p0_val0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_p1_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_p1_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_p1_val0_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_p2_val0_carry_O_UNCONNECTED;
  wire [3:0]NLW_p2_val0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_p2_val0_carry__1_O_UNCONNECTED;

  FDRE \ddr_data_gen.data_dly_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [10]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [11]),
        .Q(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [13]),
        .Q(unalign_data[12]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [15]),
        .Q(unalign_data[14]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [17]),
        .Q(unalign_data[16]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [19]),
        .Q(unalign_data[18]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [1]),
        .Q(unalign_data[0]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [20]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [21]),
        .Q(unalign_data[20]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [22]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [23]),
        .Q(\ddr_data_gen.data_dly_reg[23]_0 [1]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [25]),
        .Q(unalign_data[24]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [27]),
        .Q(unalign_data[26]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [29]),
        .Q(unalign_data[28]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [31]),
        .Q(unalign_data[30]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [33]),
        .Q(unalign_data[32]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [3]),
        .Q(unalign_data[2]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [5]),
        .Q(unalign_data[4]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [7]),
        .Q(unalign_data[6]),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [8]),
        .Q(\ddr_data_gen.data_dly_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \ddr_data_gen.data_dly_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\ddr_data_gen.data_dly_reg[33]_0 [9]),
        .Q(unalign_data[8]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \deskew_enable_gen.calib_done_i_2 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.state [11]),
        .I2(\deskew_enable_gen.calib_done_i_3_n_0 ),
        .I3(\deskew_enable_gen.state [10]),
        .I4(\deskew_enable_gen.grp_count[4]_i_4_n_0 ),
        .I5(\deskew_enable_gen.state[11]_i_8_n_0 ),
        .O(next_calib_done));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.calib_done_i_3 
       (.I0(\deskew_enable_gen.state [8]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.calib_done_i_3_n_0 ));
  FDRE \deskew_enable_gen.calib_done_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.calib_done_reg_0 ),
        .Q(calib_done),
        .R(SR));
  FDRE \deskew_enable_gen.calib_error_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.calib_error_reg_0 ),
        .Q(calib_error),
        .R(SR));
  LUT3 #(
    .INIT(8'h34)) 
    \deskew_enable_gen.count[0]_i_1 
       (.I0(\deskew_enable_gen.count[2]_i_2_n_0 ),
        .I1(\deskew_enable_gen.count[2]_i_3_n_0 ),
        .I2(count[0]),
        .O(\deskew_enable_gen.count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'h1F20)) 
    \deskew_enable_gen.count[1]_i_1 
       (.I0(count[0]),
        .I1(\deskew_enable_gen.count[2]_i_2_n_0 ),
        .I2(\deskew_enable_gen.count[2]_i_3_n_0 ),
        .I3(count[1]),
        .O(\deskew_enable_gen.count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h07FF0800)) 
    \deskew_enable_gen.count[2]_i_1 
       (.I0(count[0]),
        .I1(count[1]),
        .I2(\deskew_enable_gen.count[2]_i_2_n_0 ),
        .I3(\deskew_enable_gen.count[2]_i_3_n_0 ),
        .I4(count[2]),
        .O(\deskew_enable_gen.count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT5 #(
    .INIT(32'h0000BB0B)) 
    \deskew_enable_gen.count[2]_i_2 
       (.I0(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .I1(\deskew_enable_gen.state[2]_i_2_n_0 ),
        .I2(\deskew_enable_gen.state [3]),
        .I3(\deskew_enable_gen.state [2]),
        .I4(\deskew_enable_gen.state [1]),
        .O(\deskew_enable_gen.count[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088F000008800000)) 
    \deskew_enable_gen.count[2]_i_3 
       (.I0(\deskew_enable_gen.count[2]_i_4_n_0 ),
        .I1(\deskew_enable_gen.count[2]_i_5_n_0 ),
        .I2(\deskew_enable_gen.state [1]),
        .I3(\deskew_enable_gen.state [0]),
        .I4(\deskew_enable_gen.count[2]_i_6_n_0 ),
        .I5(\deskew_enable_gen.count[2]_i_7_n_0 ),
        .O(\deskew_enable_gen.count[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.count[2]_i_4 
       (.I0(\deskew_enable_gen.state [4]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.count[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.count[2]_i_5 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.state [3]),
        .O(\deskew_enable_gen.count[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \deskew_enable_gen.count[2]_i_6 
       (.I0(\deskew_enable_gen.state [10]),
        .I1(\deskew_enable_gen.state [11]),
        .I2(\deskew_enable_gen.state [5]),
        .I3(\deskew_enable_gen.state [6]),
        .I4(\deskew_enable_gen.state [7]),
        .I5(\deskew_enable_gen.state [8]),
        .O(\deskew_enable_gen.count[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \deskew_enable_gen.count[2]_i_7 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.state [3]),
        .I2(\deskew_enable_gen.state [4]),
        .I3(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.count[2]_i_7_n_0 ));
  FDRE \deskew_enable_gen.count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[0]_i_1_n_0 ),
        .Q(count[0]),
        .R(SR));
  FDRE \deskew_enable_gen.count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[1]_i_1_n_0 ),
        .Q(count[1]),
        .R(SR));
  FDRE \deskew_enable_gen.count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.count[2]_i_1_n_0 ),
        .Q(count[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[0]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [0]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[10]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [10]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[11]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [11]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \deskew_enable_gen.data_flip_sel[11]_i_2 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\deskew_enable_gen.grp_count_reg[2]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[12]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [12]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[13]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [13]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[14]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [14]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[15]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [15]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \deskew_enable_gen.data_flip_sel[15]_i_2 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\deskew_enable_gen.grp_count_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[16]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [16]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[17]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [17]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[18]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [18]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [18]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[19]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [19]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [19]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \deskew_enable_gen.data_flip_sel[19]_i_2 
       (.I0(Q[1]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .O(\deskew_enable_gen.grp_count_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[1]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [1]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[20]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [20]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [20]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[21]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [21]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [21]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[22]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [22]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [22]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[23]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [23]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [23]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \deskew_enable_gen.data_flip_sel[23]_i_2 
       (.I0(Q[1]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .O(\deskew_enable_gen.grp_count_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[24]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [24]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [24]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[25]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [25]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [25]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[26]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [26]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [26]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[27]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [27]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [27]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \deskew_enable_gen.data_flip_sel[27]_i_2 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .O(\deskew_enable_gen.grp_count_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[28]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [28]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [28]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[29]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [29]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [29]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[2]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [2]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[30]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [30]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [30]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[31]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [31]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [31]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \deskew_enable_gen.data_flip_sel[31]_i_2 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .O(\deskew_enable_gen.grp_count_reg[2]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.data_flip_sel[32]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [32]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [32]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \deskew_enable_gen.data_flip_sel[33]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [33]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [33]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'hFFFEFF7F)) 
    \deskew_enable_gen.data_flip_sel[33]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_count_reg[1]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[3]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [3]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[4]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [4]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[5]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [5]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[6]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [6]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[7]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [7]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \deskew_enable_gen.data_flip_sel[7]_i_2 
       (.I0(Q[1]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .O(\deskew_enable_gen.grp_count_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[8]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [8]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \deskew_enable_gen.data_flip_sel[9]_i_1 
       (.I0(\deskew_enable_gen.data_flip_sel [9]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I2(\deskew_enable_gen.grp_flip ),
        .O(\deskew_enable_gen.data_flip_sel0 [9]));
  FDRE \deskew_enable_gen.data_flip_sel_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [0]),
        .Q(\deskew_enable_gen.data_flip_sel [0]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [10]),
        .Q(\deskew_enable_gen.data_flip_sel [10]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [11]),
        .Q(\deskew_enable_gen.data_flip_sel [11]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [12]),
        .Q(\deskew_enable_gen.data_flip_sel [12]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [13]),
        .Q(\deskew_enable_gen.data_flip_sel [13]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [14]),
        .Q(\deskew_enable_gen.data_flip_sel [14]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [15]),
        .Q(\deskew_enable_gen.data_flip_sel [15]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [16]),
        .Q(\deskew_enable_gen.data_flip_sel [16]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [17]),
        .Q(\deskew_enable_gen.data_flip_sel [17]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [18]),
        .Q(\deskew_enable_gen.data_flip_sel [18]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [19]),
        .Q(\deskew_enable_gen.data_flip_sel [19]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [1]),
        .Q(\deskew_enable_gen.data_flip_sel [1]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [20]),
        .Q(\deskew_enable_gen.data_flip_sel [20]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [21]),
        .Q(\deskew_enable_gen.data_flip_sel [21]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [22]),
        .Q(\deskew_enable_gen.data_flip_sel [22]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [23]),
        .Q(\deskew_enable_gen.data_flip_sel [23]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [24]),
        .Q(\deskew_enable_gen.data_flip_sel [24]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [25]),
        .Q(\deskew_enable_gen.data_flip_sel [25]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [26]),
        .Q(\deskew_enable_gen.data_flip_sel [26]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [27]),
        .Q(\deskew_enable_gen.data_flip_sel [27]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [28]),
        .Q(\deskew_enable_gen.data_flip_sel [28]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [29]),
        .Q(\deskew_enable_gen.data_flip_sel [29]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [2]),
        .Q(\deskew_enable_gen.data_flip_sel [2]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [30]),
        .Q(\deskew_enable_gen.data_flip_sel [30]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [31]),
        .Q(\deskew_enable_gen.data_flip_sel [31]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [32]),
        .Q(\deskew_enable_gen.data_flip_sel [32]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [33]),
        .Q(\deskew_enable_gen.data_flip_sel [33]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [3]),
        .Q(\deskew_enable_gen.data_flip_sel [3]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [4]),
        .Q(\deskew_enable_gen.data_flip_sel [4]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [5]),
        .Q(\deskew_enable_gen.data_flip_sel [5]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [6]),
        .Q(\deskew_enable_gen.data_flip_sel [6]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [7]),
        .Q(\deskew_enable_gen.data_flip_sel [7]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [8]),
        .Q(\deskew_enable_gen.data_flip_sel [8]),
        .R(SR));
  FDRE \deskew_enable_gen.data_flip_sel_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_flip_sel0 [9]),
        .Q(\deskew_enable_gen.data_flip_sel [9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \deskew_enable_gen.data_out[0]_i_1 
       (.I0(\deskew_enable_gen.data_out[0]_i_2_n_0 ),
        .O(\deskew_enable_gen.selected_data [0]));
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.data_out[0]_i_2 
       (.I0(\deskew_enable_gen.data_stage1 [0]),
        .I1(\deskew_enable_gen.data_stage2 [0]),
        .I2(\deskew_enable_gen.data_stage_sel0 [0]),
        .I3(\deskew_enable_gen.data_stage_sel1 [0]),
        .I4(\deskew_enable_gen.data_stage0 [0]),
        .O(\deskew_enable_gen.data_out[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[10]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [10]),
        .I1(\deskew_enable_gen.data_stage_sel1 [10]),
        .I2(\deskew_enable_gen.data_stage_sel0 [10]),
        .I3(\deskew_enable_gen.data_stage2 [10]),
        .I4(\deskew_enable_gen.data_stage1 [10]),
        .O(\deskew_enable_gen.selected_data [10]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[11]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [11]),
        .I1(\deskew_enable_gen.data_stage2 [11]),
        .I2(\deskew_enable_gen.data_stage_sel0 [11]),
        .I3(\deskew_enable_gen.data_stage_sel1 [11]),
        .I4(\deskew_enable_gen.data_stage0 [11]),
        .O(\deskew_enable_gen.selected_data [11]));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \deskew_enable_gen.data_out[12]_i_1 
       (.I0(\deskew_enable_gen.data_out[12]_i_2_n_0 ),
        .O(\deskew_enable_gen.selected_data [12]));
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.data_out[12]_i_2 
       (.I0(\deskew_enable_gen.data_stage1 [12]),
        .I1(\deskew_enable_gen.data_stage2 [12]),
        .I2(\deskew_enable_gen.data_stage_sel0 [12]),
        .I3(\deskew_enable_gen.data_stage_sel1 [12]),
        .I4(\deskew_enable_gen.data_stage0 [12]),
        .O(\deskew_enable_gen.data_out[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[13]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [13]),
        .I1(\deskew_enable_gen.data_stage_sel1 [13]),
        .I2(\deskew_enable_gen.data_stage_sel0 [13]),
        .I3(\deskew_enable_gen.data_stage2 [13]),
        .I4(\deskew_enable_gen.data_stage1 [13]),
        .O(\deskew_enable_gen.selected_data [13]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[14]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [14]),
        .I1(\deskew_enable_gen.data_stage2 [14]),
        .I2(\deskew_enable_gen.data_stage_sel0 [14]),
        .I3(\deskew_enable_gen.data_stage_sel1 [14]),
        .I4(\deskew_enable_gen.data_stage0 [14]),
        .O(\deskew_enable_gen.selected_data [14]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[15]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [15]),
        .I1(\deskew_enable_gen.data_stage_sel1 [15]),
        .I2(\deskew_enable_gen.data_stage_sel0 [15]),
        .I3(\deskew_enable_gen.data_stage2 [15]),
        .I4(\deskew_enable_gen.data_stage1 [15]),
        .O(\deskew_enable_gen.selected_data [15]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[16]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [16]),
        .I1(\deskew_enable_gen.data_stage2 [16]),
        .I2(\deskew_enable_gen.data_stage_sel0 [16]),
        .I3(\deskew_enable_gen.data_stage_sel1 [16]),
        .I4(\deskew_enable_gen.data_stage0 [16]),
        .O(\deskew_enable_gen.selected_data [16]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[17]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [17]),
        .I1(\deskew_enable_gen.data_stage2 [17]),
        .I2(\deskew_enable_gen.data_stage_sel0 [17]),
        .I3(\deskew_enable_gen.data_stage_sel1 [17]),
        .I4(\deskew_enable_gen.data_stage0 [17]),
        .O(\deskew_enable_gen.selected_data [17]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[18]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [18]),
        .I1(\deskew_enable_gen.data_stage_sel1 [18]),
        .I2(\deskew_enable_gen.data_stage_sel0 [18]),
        .I3(\deskew_enable_gen.data_stage2 [18]),
        .I4(\deskew_enable_gen.data_stage1 [18]),
        .O(\deskew_enable_gen.selected_data [18]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[19]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [19]),
        .I1(\deskew_enable_gen.data_stage2 [19]),
        .I2(\deskew_enable_gen.data_stage_sel0 [19]),
        .I3(\deskew_enable_gen.data_stage_sel1 [19]),
        .I4(\deskew_enable_gen.data_stage0 [19]),
        .O(\deskew_enable_gen.selected_data [19]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[1]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [1]),
        .I1(\deskew_enable_gen.data_stage_sel1 [1]),
        .I2(\deskew_enable_gen.data_stage_sel0 [1]),
        .I3(\deskew_enable_gen.data_stage2 [1]),
        .I4(\deskew_enable_gen.data_stage1 [1]),
        .O(\deskew_enable_gen.selected_data [1]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[20]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [20]),
        .I1(\deskew_enable_gen.data_stage2 [20]),
        .I2(\deskew_enable_gen.data_stage_sel0 [20]),
        .I3(\deskew_enable_gen.data_stage_sel1 [20]),
        .I4(\deskew_enable_gen.data_stage0 [20]),
        .O(\deskew_enable_gen.selected_data [20]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[21]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [21]),
        .I1(\deskew_enable_gen.data_stage2 [21]),
        .I2(\deskew_enable_gen.data_stage_sel0 [21]),
        .I3(\deskew_enable_gen.data_stage_sel1 [21]),
        .I4(\deskew_enable_gen.data_stage0 [21]),
        .O(\deskew_enable_gen.selected_data [21]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[22]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [22]),
        .I1(\deskew_enable_gen.data_stage_sel1 [22]),
        .I2(\deskew_enable_gen.data_stage_sel0 [22]),
        .I3(\deskew_enable_gen.data_stage2 [22]),
        .I4(\deskew_enable_gen.data_stage1 [22]),
        .O(\deskew_enable_gen.selected_data [22]));
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[23]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [23]),
        .I1(\deskew_enable_gen.data_stage_sel1 [23]),
        .I2(\deskew_enable_gen.data_stage_sel0 [23]),
        .I3(\deskew_enable_gen.data_stage2 [23]),
        .I4(\deskew_enable_gen.data_stage1 [23]),
        .O(\deskew_enable_gen.selected_data [23]));
  LUT1 #(
    .INIT(2'h1)) 
    \deskew_enable_gen.data_out[24]_i_1 
       (.I0(\deskew_enable_gen.data_out[24]_i_2_n_0 ),
        .O(\deskew_enable_gen.selected_data [24]));
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.data_out[24]_i_2 
       (.I0(\deskew_enable_gen.data_stage1 [24]),
        .I1(\deskew_enable_gen.data_stage2 [24]),
        .I2(\deskew_enable_gen.data_stage_sel0 [24]),
        .I3(\deskew_enable_gen.data_stage_sel1 [24]),
        .I4(\deskew_enable_gen.data_stage0 [24]),
        .O(\deskew_enable_gen.data_out[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[25]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [25]),
        .I1(\deskew_enable_gen.data_stage_sel1 [25]),
        .I2(\deskew_enable_gen.data_stage_sel0 [25]),
        .I3(\deskew_enable_gen.data_stage2 [25]),
        .I4(\deskew_enable_gen.data_stage1 [25]),
        .O(\deskew_enable_gen.selected_data [25]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[26]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [26]),
        .I1(\deskew_enable_gen.data_stage2 [26]),
        .I2(\deskew_enable_gen.data_stage_sel0 [26]),
        .I3(\deskew_enable_gen.data_stage_sel1 [26]),
        .I4(\deskew_enable_gen.data_stage0 [26]),
        .O(\deskew_enable_gen.selected_data [26]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[27]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [27]),
        .I1(\deskew_enable_gen.data_stage_sel1 [27]),
        .I2(\deskew_enable_gen.data_stage_sel0 [27]),
        .I3(\deskew_enable_gen.data_stage2 [27]),
        .I4(\deskew_enable_gen.data_stage1 [27]),
        .O(\deskew_enable_gen.selected_data [27]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[28]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [28]),
        .I1(\deskew_enable_gen.data_stage2 [28]),
        .I2(\deskew_enable_gen.data_stage_sel0 [28]),
        .I3(\deskew_enable_gen.data_stage_sel1 [28]),
        .I4(\deskew_enable_gen.data_stage0 [28]),
        .O(\deskew_enable_gen.selected_data [28]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[29]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [29]),
        .I1(\deskew_enable_gen.data_stage2 [29]),
        .I2(\deskew_enable_gen.data_stage_sel0 [29]),
        .I3(\deskew_enable_gen.data_stage_sel1 [29]),
        .I4(\deskew_enable_gen.data_stage0 [29]),
        .O(\deskew_enable_gen.selected_data [29]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[2]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [2]),
        .I1(\deskew_enable_gen.data_stage2 [2]),
        .I2(\deskew_enable_gen.data_stage_sel0 [2]),
        .I3(\deskew_enable_gen.data_stage_sel1 [2]),
        .I4(\deskew_enable_gen.data_stage0 [2]),
        .O(\deskew_enable_gen.selected_data [2]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[30]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [30]),
        .I1(\deskew_enable_gen.data_stage_sel1 [30]),
        .I2(\deskew_enable_gen.data_stage_sel0 [30]),
        .I3(\deskew_enable_gen.data_stage2 [30]),
        .I4(\deskew_enable_gen.data_stage1 [30]),
        .O(\deskew_enable_gen.selected_data [30]));
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[31]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [31]),
        .I1(\deskew_enable_gen.data_stage_sel1 [31]),
        .I2(\deskew_enable_gen.data_stage_sel0 [31]),
        .I3(\deskew_enable_gen.data_stage2 [31]),
        .I4(\deskew_enable_gen.data_stage1 [31]),
        .O(\deskew_enable_gen.selected_data [31]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[32]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [32]),
        .I1(\deskew_enable_gen.data_stage2 [32]),
        .I2(\deskew_enable_gen.data_stage_sel0 [32]),
        .I3(\deskew_enable_gen.data_stage_sel1 [32]),
        .I4(\deskew_enable_gen.data_stage0 [32]),
        .O(\deskew_enable_gen.selected_data [32]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[33]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [33]),
        .I1(\deskew_enable_gen.data_stage_sel1 [33]),
        .I2(\deskew_enable_gen.data_stage_sel0 [33]),
        .I3(\deskew_enable_gen.data_stage2 [33]),
        .I4(\deskew_enable_gen.data_stage1 [33]),
        .O(\deskew_enable_gen.selected_data [33]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[3]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [3]),
        .I1(\deskew_enable_gen.data_stage_sel1 [3]),
        .I2(\deskew_enable_gen.data_stage_sel0 [3]),
        .I3(\deskew_enable_gen.data_stage2 [3]),
        .I4(\deskew_enable_gen.data_stage1 [3]),
        .O(\deskew_enable_gen.selected_data [3]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[4]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [4]),
        .I1(\deskew_enable_gen.data_stage2 [4]),
        .I2(\deskew_enable_gen.data_stage_sel0 [4]),
        .I3(\deskew_enable_gen.data_stage_sel1 [4]),
        .I4(\deskew_enable_gen.data_stage0 [4]),
        .O(\deskew_enable_gen.selected_data [4]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[5]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [5]),
        .I1(\deskew_enable_gen.data_stage2 [5]),
        .I2(\deskew_enable_gen.data_stage_sel0 [5]),
        .I3(\deskew_enable_gen.data_stage_sel1 [5]),
        .I4(\deskew_enable_gen.data_stage0 [5]),
        .O(\deskew_enable_gen.selected_data [5]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[6]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [6]),
        .I1(\deskew_enable_gen.data_stage_sel1 [6]),
        .I2(\deskew_enable_gen.data_stage_sel0 [6]),
        .I3(\deskew_enable_gen.data_stage2 [6]),
        .I4(\deskew_enable_gen.data_stage1 [6]),
        .O(\deskew_enable_gen.selected_data [6]));
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[7]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [7]),
        .I1(\deskew_enable_gen.data_stage_sel1 [7]),
        .I2(\deskew_enable_gen.data_stage_sel0 [7]),
        .I3(\deskew_enable_gen.data_stage2 [7]),
        .I4(\deskew_enable_gen.data_stage1 [7]),
        .O(\deskew_enable_gen.selected_data [7]));
  LUT5 #(
    .INIT(32'hCF0AC00A)) 
    \deskew_enable_gen.data_out[8]_i_1 
       (.I0(\deskew_enable_gen.data_stage1 [8]),
        .I1(\deskew_enable_gen.data_stage2 [8]),
        .I2(\deskew_enable_gen.data_stage_sel0 [8]),
        .I3(\deskew_enable_gen.data_stage_sel1 [8]),
        .I4(\deskew_enable_gen.data_stage0 [8]),
        .O(\deskew_enable_gen.selected_data [8]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'hCB0BC808)) 
    \deskew_enable_gen.data_out[9]_i_1 
       (.I0(\deskew_enable_gen.data_stage0 [9]),
        .I1(\deskew_enable_gen.data_stage_sel1 [9]),
        .I2(\deskew_enable_gen.data_stage_sel0 [9]),
        .I3(\deskew_enable_gen.data_stage2 [9]),
        .I4(\deskew_enable_gen.data_stage1 [9]),
        .O(\deskew_enable_gen.selected_data [9]));
  FDRE \deskew_enable_gen.data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [0]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [10]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [11]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [12]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [13]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [14]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [15]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [16]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [17]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [18]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [19]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [1]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [20]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [21]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [22]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [23]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [24]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [25]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [26]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [27]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [28]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [29]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [2]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [30]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [30]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [31]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [31]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [32]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [32]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [33]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [33]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [3]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [4]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [5]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [6]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [7]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [8]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.selected_data [9]),
        .Q(\deskew_enable_gen.data_out_reg[33]_0 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[0]_i_1 
       (.I0(unalign_data[0]),
        .I1(\deskew_enable_gen.data_flip_sel [0]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[0] ),
        .O(\deskew_enable_gen.data_stage0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[10]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .I1(\deskew_enable_gen.data_flip_sel [10]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[10] ),
        .O(\deskew_enable_gen.data_stage0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[11]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [10]),
        .I1(\deskew_enable_gen.data_flip_sel [11]),
        .I2(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .O(\deskew_enable_gen.data_stage0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[12]_i_1 
       (.I0(unalign_data[12]),
        .I1(\deskew_enable_gen.data_flip_sel [12]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[12] ),
        .O(\deskew_enable_gen.data_stage0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[13]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .I1(\deskew_enable_gen.data_flip_sel [13]),
        .I2(unalign_data[12]),
        .O(\deskew_enable_gen.data_stage0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[14]_i_1 
       (.I0(unalign_data[14]),
        .I1(\deskew_enable_gen.data_flip_sel [14]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[14] ),
        .O(\deskew_enable_gen.data_stage0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[15]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .I1(\deskew_enable_gen.data_flip_sel [15]),
        .I2(unalign_data[14]),
        .O(\deskew_enable_gen.data_stage0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[16]_i_1 
       (.I0(unalign_data[16]),
        .I1(\deskew_enable_gen.data_flip_sel [16]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[16] ),
        .O(\deskew_enable_gen.data_stage0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[17]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .I1(\deskew_enable_gen.data_flip_sel [17]),
        .I2(unalign_data[16]),
        .O(\deskew_enable_gen.data_stage0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[18]_i_1 
       (.I0(unalign_data[18]),
        .I1(\deskew_enable_gen.data_flip_sel [18]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[18] ),
        .O(\deskew_enable_gen.data_stage0 [18]));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[19]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .I1(\deskew_enable_gen.data_flip_sel [19]),
        .I2(unalign_data[18]),
        .O(\deskew_enable_gen.data_stage0 [19]));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[1]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .I1(\deskew_enable_gen.data_flip_sel [1]),
        .I2(unalign_data[0]),
        .O(\deskew_enable_gen.data_stage0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[20]_i_1 
       (.I0(unalign_data[20]),
        .I1(\deskew_enable_gen.data_flip_sel [20]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[20] ),
        .O(\deskew_enable_gen.data_stage0 [20]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[21]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [20]),
        .I1(\deskew_enable_gen.data_flip_sel [21]),
        .I2(unalign_data[20]),
        .O(\deskew_enable_gen.data_stage0 [21]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[22]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [1]),
        .I1(\deskew_enable_gen.data_flip_sel [22]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[22] ),
        .O(\deskew_enable_gen.data_stage0 [22]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[23]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [22]),
        .I1(\deskew_enable_gen.data_flip_sel [23]),
        .I2(\ddr_data_gen.data_dly_reg[23]_0 [1]),
        .O(\deskew_enable_gen.data_stage0 [23]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[24]_i_1 
       (.I0(unalign_data[24]),
        .I1(\deskew_enable_gen.data_flip_sel [24]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[24] ),
        .O(\deskew_enable_gen.data_stage0 [24]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[25]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .I1(\deskew_enable_gen.data_flip_sel [25]),
        .I2(unalign_data[24]),
        .O(\deskew_enable_gen.data_stage0 [25]));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[26]_i_1 
       (.I0(unalign_data[26]),
        .I1(\deskew_enable_gen.data_flip_sel [26]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[26] ),
        .O(\deskew_enable_gen.data_stage0 [26]));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[27]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .I1(\deskew_enable_gen.data_flip_sel [27]),
        .I2(unalign_data[26]),
        .O(\deskew_enable_gen.data_stage0 [27]));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[28]_i_1 
       (.I0(unalign_data[28]),
        .I1(\deskew_enable_gen.data_flip_sel [28]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[28] ),
        .O(\deskew_enable_gen.data_stage0 [28]));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[29]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .I1(\deskew_enable_gen.data_flip_sel [29]),
        .I2(unalign_data[28]),
        .O(\deskew_enable_gen.data_stage0 [29]));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[2]_i_1 
       (.I0(unalign_data[2]),
        .I1(\deskew_enable_gen.data_flip_sel [2]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[2] ),
        .O(\deskew_enable_gen.data_stage0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[30]_i_1 
       (.I0(unalign_data[30]),
        .I1(\deskew_enable_gen.data_flip_sel [30]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[30] ),
        .O(\deskew_enable_gen.data_stage0 [30]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[31]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .I1(\deskew_enable_gen.data_flip_sel [31]),
        .I2(unalign_data[30]),
        .O(\deskew_enable_gen.data_stage0 [31]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[32]_i_1 
       (.I0(unalign_data[32]),
        .I1(\deskew_enable_gen.data_flip_sel [32]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[32] ),
        .O(\deskew_enable_gen.data_stage0 [32]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[33]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .I1(\deskew_enable_gen.data_flip_sel [33]),
        .I2(unalign_data[32]),
        .O(\deskew_enable_gen.data_stage0 [33]));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[3]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .I1(\deskew_enable_gen.data_flip_sel [3]),
        .I2(unalign_data[2]),
        .O(\deskew_enable_gen.data_stage0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[4]_i_1 
       (.I0(unalign_data[4]),
        .I1(\deskew_enable_gen.data_flip_sel [4]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[4] ),
        .O(\deskew_enable_gen.data_stage0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[5]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .I1(\deskew_enable_gen.data_flip_sel [5]),
        .I2(unalign_data[4]),
        .O(\deskew_enable_gen.data_stage0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[6]_i_1 
       (.I0(unalign_data[6]),
        .I1(\deskew_enable_gen.data_flip_sel [6]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[6] ),
        .O(\deskew_enable_gen.data_stage0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[7]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .I1(\deskew_enable_gen.data_flip_sel [7]),
        .I2(unalign_data[6]),
        .O(\deskew_enable_gen.data_stage0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[8]_i_1 
       (.I0(unalign_data[8]),
        .I1(\deskew_enable_gen.data_flip_sel [8]),
        .I2(\ddr_data_gen.data_dly_reg_n_0_[8] ),
        .O(\deskew_enable_gen.data_stage0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \deskew_enable_gen.data_stage1[9]_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [8]),
        .I1(\deskew_enable_gen.data_flip_sel [9]),
        .I2(unalign_data[8]),
        .O(\deskew_enable_gen.data_stage0 [9]));
  FDRE \deskew_enable_gen.data_stage1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [0]),
        .Q(\deskew_enable_gen.data_stage1 [0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [10]),
        .Q(\deskew_enable_gen.data_stage1 [10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [11]),
        .Q(\deskew_enable_gen.data_stage1 [11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [12]),
        .Q(\deskew_enable_gen.data_stage1 [12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [13]),
        .Q(\deskew_enable_gen.data_stage1 [13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [14]),
        .Q(\deskew_enable_gen.data_stage1 [14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [15]),
        .Q(\deskew_enable_gen.data_stage1 [15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [16]),
        .Q(\deskew_enable_gen.data_stage1 [16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [17]),
        .Q(\deskew_enable_gen.data_stage1 [17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [18]),
        .Q(\deskew_enable_gen.data_stage1 [18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [19]),
        .Q(\deskew_enable_gen.data_stage1 [19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [1]),
        .Q(\deskew_enable_gen.data_stage1 [1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [20]),
        .Q(\deskew_enable_gen.data_stage1 [20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [21]),
        .Q(\deskew_enable_gen.data_stage1 [21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [22]),
        .Q(\deskew_enable_gen.data_stage1 [22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [23]),
        .Q(\deskew_enable_gen.data_stage1 [23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [24]),
        .Q(\deskew_enable_gen.data_stage1 [24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [25]),
        .Q(\deskew_enable_gen.data_stage1 [25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [26]),
        .Q(\deskew_enable_gen.data_stage1 [26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [27]),
        .Q(\deskew_enable_gen.data_stage1 [27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [28]),
        .Q(\deskew_enable_gen.data_stage1 [28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [29]),
        .Q(\deskew_enable_gen.data_stage1 [29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [2]),
        .Q(\deskew_enable_gen.data_stage1 [2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [30]),
        .Q(\deskew_enable_gen.data_stage1 [30]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [31]),
        .Q(\deskew_enable_gen.data_stage1 [31]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [32]),
        .Q(\deskew_enable_gen.data_stage1 [32]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [33]),
        .Q(\deskew_enable_gen.data_stage1 [33]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [3]),
        .Q(\deskew_enable_gen.data_stage1 [3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [4]),
        .Q(\deskew_enable_gen.data_stage1 [4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [5]),
        .Q(\deskew_enable_gen.data_stage1 [5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [6]),
        .Q(\deskew_enable_gen.data_stage1 [6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [7]),
        .Q(\deskew_enable_gen.data_stage1 [7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [8]),
        .Q(\deskew_enable_gen.data_stage1 [8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage1_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage0 [9]),
        .Q(\deskew_enable_gen.data_stage1 [9]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [0]),
        .Q(\deskew_enable_gen.data_stage2 [0]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [10]),
        .Q(\deskew_enable_gen.data_stage2 [10]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [11]),
        .Q(\deskew_enable_gen.data_stage2 [11]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [12]),
        .Q(\deskew_enable_gen.data_stage2 [12]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [13]),
        .Q(\deskew_enable_gen.data_stage2 [13]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [14]),
        .Q(\deskew_enable_gen.data_stage2 [14]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [15]),
        .Q(\deskew_enable_gen.data_stage2 [15]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [16]),
        .Q(\deskew_enable_gen.data_stage2 [16]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [17]),
        .Q(\deskew_enable_gen.data_stage2 [17]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [18]),
        .Q(\deskew_enable_gen.data_stage2 [18]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [19]),
        .Q(\deskew_enable_gen.data_stage2 [19]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [1]),
        .Q(\deskew_enable_gen.data_stage2 [1]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [20]),
        .Q(\deskew_enable_gen.data_stage2 [20]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [21]),
        .Q(\deskew_enable_gen.data_stage2 [21]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [22]),
        .Q(\deskew_enable_gen.data_stage2 [22]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [23]),
        .Q(\deskew_enable_gen.data_stage2 [23]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [24]),
        .Q(\deskew_enable_gen.data_stage2 [24]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [25]),
        .Q(\deskew_enable_gen.data_stage2 [25]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [26]),
        .Q(\deskew_enable_gen.data_stage2 [26]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [27]),
        .Q(\deskew_enable_gen.data_stage2 [27]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [28]),
        .Q(\deskew_enable_gen.data_stage2 [28]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [29]),
        .Q(\deskew_enable_gen.data_stage2 [29]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [2]),
        .Q(\deskew_enable_gen.data_stage2 [2]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [30]),
        .Q(\deskew_enable_gen.data_stage2 [30]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [31]),
        .Q(\deskew_enable_gen.data_stage2 [31]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [32]),
        .Q(\deskew_enable_gen.data_stage2 [32]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [33]),
        .Q(\deskew_enable_gen.data_stage2 [33]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [3]),
        .Q(\deskew_enable_gen.data_stage2 [3]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [4]),
        .Q(\deskew_enable_gen.data_stage2 [4]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [5]),
        .Q(\deskew_enable_gen.data_stage2 [5]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [6]),
        .Q(\deskew_enable_gen.data_stage2 [6]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [7]),
        .Q(\deskew_enable_gen.data_stage2 [7]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [8]),
        .Q(\deskew_enable_gen.data_stage2 [8]),
        .R(1'b0));
  FDRE \deskew_enable_gen.data_stage2_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.data_stage1 [9]),
        .Q(\deskew_enable_gen.data_stage2 [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel0[0]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0 [0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel00 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel0[10]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [10]),
        .O(\deskew_enable_gen.data_stage_sel00 [10]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel0[11]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [11]),
        .O(\deskew_enable_gen.data_stage_sel00 [11]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[12]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [12]),
        .O(\deskew_enable_gen.data_stage_sel00 [12]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[13]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [13]),
        .O(\deskew_enable_gen.data_stage_sel00 [13]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[14]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [14]),
        .O(\deskew_enable_gen.data_stage_sel00 [14]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel0[15]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [15]),
        .O(\deskew_enable_gen.data_stage_sel00 [15]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[16]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [16]),
        .O(\deskew_enable_gen.data_stage_sel00 [16]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[17]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [17]),
        .O(\deskew_enable_gen.data_stage_sel00 [17]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[18]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [18]),
        .O(\deskew_enable_gen.data_stage_sel00 [18]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[19]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [19]),
        .O(\deskew_enable_gen.data_stage_sel00 [19]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel0[1]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0 [1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel00 [1]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[20]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [20]),
        .O(\deskew_enable_gen.data_stage_sel00 [20]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[21]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [21]),
        .O(\deskew_enable_gen.data_stage_sel00 [21]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[22]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [22]),
        .O(\deskew_enable_gen.data_stage_sel00 [22]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel0[23]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [23]),
        .O(\deskew_enable_gen.data_stage_sel00 [23]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel0[24]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [24]),
        .O(\deskew_enable_gen.data_stage_sel00 [24]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel0[25]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [25]),
        .O(\deskew_enable_gen.data_stage_sel00 [25]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel0[26]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [26]),
        .O(\deskew_enable_gen.data_stage_sel00 [26]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel0[27]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [27]),
        .O(\deskew_enable_gen.data_stage_sel00 [27]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel0[28]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [28]),
        .O(\deskew_enable_gen.data_stage_sel00 [28]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel0[29]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [29]),
        .O(\deskew_enable_gen.data_stage_sel00 [29]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel0[2]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0 [2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel00 [2]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel0[30]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [30]),
        .O(\deskew_enable_gen.data_stage_sel00 [30]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel0[31]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel0 [31]),
        .O(\deskew_enable_gen.data_stage_sel00 [31]));
  LUT6 #(
    .INIT(64'hABA8A8A8A8A8A8AC)) 
    \deskew_enable_gen.data_stage_sel0[32]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0 [32]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\deskew_enable_gen.data_stage_sel00 [32]));
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.data_stage_sel0[33]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0[33]_i_3_n_0 ),
        .I1(\deskew_enable_gen.grp_p1_val ),
        .I2(\deskew_enable_gen.grp_p3_val ),
        .O(\deskew_enable_gen.next_data_stage_sel0 ));
  LUT6 #(
    .INIT(64'hABA8A8A8A8A8A8AC)) 
    \deskew_enable_gen.data_stage_sel0[33]_i_2 
       (.I0(\deskew_enable_gen.data_stage_sel0 [33]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\deskew_enable_gen.data_stage_sel00 [33]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \deskew_enable_gen.data_stage_sel0[33]_i_3 
       (.I0(\deskew_enable_gen.state [11]),
        .I1(\deskew_enable_gen.state [9]),
        .I2(\deskew_enable_gen.state [1]),
        .I3(\deskew_enable_gen.state [0]),
        .I4(\deskew_enable_gen.data_stage_sel0[33]_i_4_n_0 ),
        .I5(\deskew_enable_gen.data_stage_sel0[33]_i_5_n_0 ),
        .O(\deskew_enable_gen.data_stage_sel0[33]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \deskew_enable_gen.data_stage_sel0[33]_i_4 
       (.I0(\deskew_enable_gen.state [8]),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state [6]),
        .I3(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.data_stage_sel0[33]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFFFF)) 
    \deskew_enable_gen.data_stage_sel0[33]_i_5 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.state [3]),
        .I2(\deskew_enable_gen.state [4]),
        .I3(\deskew_enable_gen.dout_p0_val ),
        .I4(\deskew_enable_gen.state [10]),
        .I5(\deskew_enable_gen.grp_p0_val ),
        .O(\deskew_enable_gen.data_stage_sel0[33]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel0[3]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel0 [3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel00 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[4]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [4]),
        .O(\deskew_enable_gen.data_stage_sel00 [4]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[5]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [5]),
        .O(\deskew_enable_gen.data_stage_sel00 [5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[6]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [6]),
        .O(\deskew_enable_gen.data_stage_sel00 [6]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel0[7]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel0 [7]),
        .O(\deskew_enable_gen.data_stage_sel00 [7]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel0[8]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [8]),
        .O(\deskew_enable_gen.data_stage_sel00 [8]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel0[9]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel0 [9]),
        .O(\deskew_enable_gen.data_stage_sel00 [9]));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [0]),
        .Q(\deskew_enable_gen.data_stage_sel0 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[10] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [10]),
        .Q(\deskew_enable_gen.data_stage_sel0 [10]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[11] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [11]),
        .Q(\deskew_enable_gen.data_stage_sel0 [11]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[12] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [12]),
        .Q(\deskew_enable_gen.data_stage_sel0 [12]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[13] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [13]),
        .Q(\deskew_enable_gen.data_stage_sel0 [13]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[14] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [14]),
        .Q(\deskew_enable_gen.data_stage_sel0 [14]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[15] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [15]),
        .Q(\deskew_enable_gen.data_stage_sel0 [15]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[16] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [16]),
        .Q(\deskew_enable_gen.data_stage_sel0 [16]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[17] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [17]),
        .Q(\deskew_enable_gen.data_stage_sel0 [17]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[18] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [18]),
        .Q(\deskew_enable_gen.data_stage_sel0 [18]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[19] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [19]),
        .Q(\deskew_enable_gen.data_stage_sel0 [19]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [1]),
        .Q(\deskew_enable_gen.data_stage_sel0 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[20] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [20]),
        .Q(\deskew_enable_gen.data_stage_sel0 [20]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[21] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [21]),
        .Q(\deskew_enable_gen.data_stage_sel0 [21]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[22] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [22]),
        .Q(\deskew_enable_gen.data_stage_sel0 [22]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[23] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [23]),
        .Q(\deskew_enable_gen.data_stage_sel0 [23]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[24] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [24]),
        .Q(\deskew_enable_gen.data_stage_sel0 [24]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[25] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [25]),
        .Q(\deskew_enable_gen.data_stage_sel0 [25]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[26] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [26]),
        .Q(\deskew_enable_gen.data_stage_sel0 [26]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[27] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [27]),
        .Q(\deskew_enable_gen.data_stage_sel0 [27]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[28] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [28]),
        .Q(\deskew_enable_gen.data_stage_sel0 [28]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[29] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [29]),
        .Q(\deskew_enable_gen.data_stage_sel0 [29]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [2]),
        .Q(\deskew_enable_gen.data_stage_sel0 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[30] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [30]),
        .Q(\deskew_enable_gen.data_stage_sel0 [30]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[31] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [31]),
        .Q(\deskew_enable_gen.data_stage_sel0 [31]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[32] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [32]),
        .Q(\deskew_enable_gen.data_stage_sel0 [32]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[33] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [33]),
        .Q(\deskew_enable_gen.data_stage_sel0 [33]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [3]),
        .Q(\deskew_enable_gen.data_stage_sel0 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [4]),
        .Q(\deskew_enable_gen.data_stage_sel0 [4]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[5] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [5]),
        .Q(\deskew_enable_gen.data_stage_sel0 [5]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[6] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [6]),
        .Q(\deskew_enable_gen.data_stage_sel0 [6]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[7] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [7]),
        .Q(\deskew_enable_gen.data_stage_sel0 [7]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[8] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [8]),
        .Q(\deskew_enable_gen.data_stage_sel0 [8]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel0_reg[9] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel0 ),
        .D(\deskew_enable_gen.data_stage_sel00 [9]),
        .Q(\deskew_enable_gen.data_stage_sel0 [9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel1[0]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel1 [0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel10 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel1[10]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [10]),
        .O(\deskew_enable_gen.data_stage_sel10 [10]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel1[11]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [11]),
        .O(\deskew_enable_gen.data_stage_sel10 [11]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[12]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [12]),
        .O(\deskew_enable_gen.data_stage_sel10 [12]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[13]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [13]),
        .O(\deskew_enable_gen.data_stage_sel10 [13]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[14]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [14]),
        .O(\deskew_enable_gen.data_stage_sel10 [14]));
  LUT6 #(
    .INIT(64'hFFFFFFF800000008)) 
    \deskew_enable_gen.data_stage_sel1[15]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [15]),
        .O(\deskew_enable_gen.data_stage_sel10 [15]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[16]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [16]),
        .O(\deskew_enable_gen.data_stage_sel10 [16]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[17]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [17]),
        .O(\deskew_enable_gen.data_stage_sel10 [17]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[18]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [18]),
        .O(\deskew_enable_gen.data_stage_sel10 [18]));
  LUT6 #(
    .INIT(64'hFEFEFEFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[19]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [19]),
        .O(\deskew_enable_gen.data_stage_sel10 [19]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel1[1]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel1 [1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel10 [1]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[20]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [20]),
        .O(\deskew_enable_gen.data_stage_sel10 [20]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[21]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [21]),
        .O(\deskew_enable_gen.data_stage_sel10 [21]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[22]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [22]),
        .O(\deskew_enable_gen.data_stage_sel10 [22]));
  LUT6 #(
    .INIT(64'hFFFCFEFC00000200)) 
    \deskew_enable_gen.data_stage_sel1[23]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [23]),
        .O(\deskew_enable_gen.data_stage_sel10 [23]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel1[24]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [24]),
        .O(\deskew_enable_gen.data_stage_sel10 [24]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel1[25]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [25]),
        .O(\deskew_enable_gen.data_stage_sel10 [25]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel1[26]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [26]),
        .O(\deskew_enable_gen.data_stage_sel10 [26]));
  LUT6 #(
    .INIT(64'hFFFFEEAA00000400)) 
    \deskew_enable_gen.data_stage_sel1[27]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [27]),
        .O(\deskew_enable_gen.data_stage_sel10 [27]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel1[28]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [28]),
        .O(\deskew_enable_gen.data_stage_sel10 [28]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel1[29]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [29]),
        .O(\deskew_enable_gen.data_stage_sel10 [29]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel1[2]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel1 [2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel10 [2]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel1[30]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [30]),
        .O(\deskew_enable_gen.data_stage_sel10 [30]));
  LUT6 #(
    .INIT(64'hFFFFFF8000000080)) 
    \deskew_enable_gen.data_stage_sel1[31]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.data_stage_sel1 [31]),
        .O(\deskew_enable_gen.data_stage_sel10 [31]));
  LUT6 #(
    .INIT(64'hABA8A8A8A8A8A8AC)) 
    \deskew_enable_gen.data_stage_sel1[32]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel1 [32]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\deskew_enable_gen.data_stage_sel10 [32]));
  LUT3 #(
    .INIT(8'h60)) 
    \deskew_enable_gen.data_stage_sel1[33]_i_1 
       (.I0(\deskew_enable_gen.grp_p1_val ),
        .I1(\deskew_enable_gen.grp_p3_val ),
        .I2(\deskew_enable_gen.data_stage_sel0[33]_i_3_n_0 ),
        .O(\deskew_enable_gen.next_data_stage_sel1 ));
  LUT6 #(
    .INIT(64'hABA8A8A8A8A8A8AC)) 
    \deskew_enable_gen.data_stage_sel1[33]_i_2 
       (.I0(\deskew_enable_gen.data_stage_sel1 [33]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\deskew_enable_gen.data_stage_sel10 [33]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \deskew_enable_gen.data_stage_sel1[3]_i_1 
       (.I0(\deskew_enable_gen.data_stage_sel1 [3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.data_stage_sel10 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[4]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [4]),
        .O(\deskew_enable_gen.data_stage_sel10 [4]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[5]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [5]),
        .O(\deskew_enable_gen.data_stage_sel10 [5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[6]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [6]),
        .O(\deskew_enable_gen.data_stage_sel10 [6]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.data_stage_sel1[7]_i_1 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.data_stage_sel1 [7]),
        .O(\deskew_enable_gen.data_stage_sel10 [7]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel1[8]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [8]),
        .O(\deskew_enable_gen.data_stage_sel10 [8]));
  LUT6 #(
    .INIT(64'hFFFFFFEE00000100)) 
    \deskew_enable_gen.data_stage_sel1[9]_i_1 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.data_stage_sel1 [9]),
        .O(\deskew_enable_gen.data_stage_sel10 [9]));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [0]),
        .Q(\deskew_enable_gen.data_stage_sel1 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[10] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [10]),
        .Q(\deskew_enable_gen.data_stage_sel1 [10]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[11] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [11]),
        .Q(\deskew_enable_gen.data_stage_sel1 [11]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[12] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [12]),
        .Q(\deskew_enable_gen.data_stage_sel1 [12]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[13] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [13]),
        .Q(\deskew_enable_gen.data_stage_sel1 [13]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[14] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [14]),
        .Q(\deskew_enable_gen.data_stage_sel1 [14]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[15] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [15]),
        .Q(\deskew_enable_gen.data_stage_sel1 [15]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[16] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [16]),
        .Q(\deskew_enable_gen.data_stage_sel1 [16]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[17] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [17]),
        .Q(\deskew_enable_gen.data_stage_sel1 [17]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[18] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [18]),
        .Q(\deskew_enable_gen.data_stage_sel1 [18]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[19] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [19]),
        .Q(\deskew_enable_gen.data_stage_sel1 [19]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [1]),
        .Q(\deskew_enable_gen.data_stage_sel1 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[20] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [20]),
        .Q(\deskew_enable_gen.data_stage_sel1 [20]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[21] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [21]),
        .Q(\deskew_enable_gen.data_stage_sel1 [21]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[22] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [22]),
        .Q(\deskew_enable_gen.data_stage_sel1 [22]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[23] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [23]),
        .Q(\deskew_enable_gen.data_stage_sel1 [23]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[24] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [24]),
        .Q(\deskew_enable_gen.data_stage_sel1 [24]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[25] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [25]),
        .Q(\deskew_enable_gen.data_stage_sel1 [25]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[26] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [26]),
        .Q(\deskew_enable_gen.data_stage_sel1 [26]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[27] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [27]),
        .Q(\deskew_enable_gen.data_stage_sel1 [27]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[28] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [28]),
        .Q(\deskew_enable_gen.data_stage_sel1 [28]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[29] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [29]),
        .Q(\deskew_enable_gen.data_stage_sel1 [29]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [2]),
        .Q(\deskew_enable_gen.data_stage_sel1 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[30] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [30]),
        .Q(\deskew_enable_gen.data_stage_sel1 [30]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[31] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [31]),
        .Q(\deskew_enable_gen.data_stage_sel1 [31]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[32] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [32]),
        .Q(\deskew_enable_gen.data_stage_sel1 [32]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[33] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [33]),
        .Q(\deskew_enable_gen.data_stage_sel1 [33]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [3]),
        .Q(\deskew_enable_gen.data_stage_sel1 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [4]),
        .Q(\deskew_enable_gen.data_stage_sel1 [4]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[5] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [5]),
        .Q(\deskew_enable_gen.data_stage_sel1 [5]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[6] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [6]),
        .Q(\deskew_enable_gen.data_stage_sel1 [6]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[7] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [7]),
        .Q(\deskew_enable_gen.data_stage_sel1 [7]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[8] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [8]),
        .Q(\deskew_enable_gen.data_stage_sel1 [8]),
        .R(SR));
  FDRE \deskew_enable_gen.data_stage_sel1_reg[9] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_data_stage_sel1 ),
        .D(\deskew_enable_gen.data_stage_sel10 [9]),
        .Q(\deskew_enable_gen.data_stage_sel1 [9]),
        .R(SR));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[0]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[0]));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[10]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[10]));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[14]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(\deskew_enable_gen.delay_load[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[18]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[18]));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[22]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[22]));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[26]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(\deskew_enable_gen.delay_load[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[30]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[30]));
  LUT5 #(
    .INIT(32'h00005540)) 
    \deskew_enable_gen.delay_load[32]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[32]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \deskew_enable_gen.delay_load[32]_i_2 
       (.I0(\deskew_enable_gen.state [8]),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state [0]),
        .I3(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.delay_load[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0001000103330300)) 
    \deskew_enable_gen.delay_load[32]_i_3 
       (.I0(\deskew_enable_gen.state[1]_i_2_n_0 ),
        .I1(\deskew_enable_gen.state [0]),
        .I2(\deskew_enable_gen.state [9]),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state[1]_i_4_n_0 ),
        .I5(\deskew_enable_gen.state [7]),
        .O(\deskew_enable_gen.delay_load[32]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000AA80)) 
    \deskew_enable_gen.delay_load[6]_i_1 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I1(\deskew_enable_gen.delay_load[32]_i_2_n_0 ),
        .I2(calib_start),
        .I3(\deskew_enable_gen.delay_load[32]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(delay_load0[6]));
  FDRE \deskew_enable_gen.delay_load_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[0]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[10]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.delay_load[14]_i_1_n_0 ),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[18]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [4]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[22]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [5]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.delay_load[26]_i_1_n_0 ),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [6]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[30]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [7]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[32]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [8]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_load_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(delay_load0[6]),
        .Q(\deskew_enable_gen.delay_load_reg[32]_0 [1]),
        .R(SR));
  LUT6 #(
    .INIT(64'hBABABABABABBBAAA)) 
    \deskew_enable_gen.delay_tap[0]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[0]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[0]_i_3_n_0 ),
        .I3(\deskew_enable_gen.step_count_reg[2]_0 ),
        .I4(\deskew_enable_gen.delay_tap[0]_i_4_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ),
        .O(\deskew_enable_gen.next_delay_tap [0]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.delay_tap[0]_i_2 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .O(\deskew_enable_gen.delay_tap[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h8778)) 
    \deskew_enable_gen.delay_tap[0]_i_3 
       (.I0(\deskew_enable_gen.max_value_0 [0]),
        .I1(\deskew_enable_gen.min_value_0 [0]),
        .I2(\deskew_enable_gen.max_value_0 [1]),
        .I3(\deskew_enable_gen.min_value_0 [1]),
        .O(\deskew_enable_gen.delay_tap[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'h9666)) 
    \deskew_enable_gen.delay_tap[0]_i_4 
       (.I0(\deskew_enable_gen.min_value_1 [1]),
        .I1(\deskew_enable_gen.max_value_1 [1]),
        .I2(\deskew_enable_gen.max_value_1 [0]),
        .I3(\deskew_enable_gen.min_value_1 [0]),
        .O(\deskew_enable_gen.delay_tap[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11101115)) 
    \deskew_enable_gen.delay_tap[1]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[1]_i_2_n_0 ),
        .I2(\deskew_enable_gen.step_count_reg[2]_0 ),
        .I3(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[1]_i_5_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[1]_i_6_n_0 ),
        .O(\deskew_enable_gen.next_delay_tap [1]));
  LUT6 #(
    .INIT(64'h1777E888E8881777)) 
    \deskew_enable_gen.delay_tap[1]_i_2 
       (.I0(\deskew_enable_gen.max_value_0 [1]),
        .I1(\deskew_enable_gen.min_value_0 [1]),
        .I2(\deskew_enable_gen.max_value_0 [0]),
        .I3(\deskew_enable_gen.min_value_0 [0]),
        .I4(\deskew_enable_gen.min_value_0 [2]),
        .I5(\deskew_enable_gen.max_value_0 [2]),
        .O(\deskew_enable_gen.delay_tap[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \deskew_enable_gen.delay_tap[1]_i_3 
       (.I0(\deskew_enable_gen.step_count [2]),
        .I1(\deskew_enable_gen.step_count [1]),
        .I2(\deskew_enable_gen.step_count [0]),
        .O(\deskew_enable_gen.step_count_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h002B2BFF)) 
    \deskew_enable_gen.delay_tap[1]_i_4 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_13_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_9_n_0 ),
        .O(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6669699969996999)) 
    \deskew_enable_gen.delay_tap[1]_i_5 
       (.I0(\deskew_enable_gen.min_value_1 [2]),
        .I1(\deskew_enable_gen.max_value_1 [2]),
        .I2(\deskew_enable_gen.min_value_1 [1]),
        .I3(\deskew_enable_gen.max_value_1 [1]),
        .I4(\deskew_enable_gen.max_value_1 [0]),
        .I5(\deskew_enable_gen.min_value_1 [0]),
        .O(\deskew_enable_gen.delay_tap[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \deskew_enable_gen.delay_tap[1]_i_6 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I2(\deskew_enable_gen.state [7]),
        .O(\deskew_enable_gen.delay_tap[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF45010145)) 
    \deskew_enable_gen.delay_tap[2]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[2]_i_2_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[2]_i_4_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[2]_i_5_n_0 ),
        .O(\deskew_enable_gen.next_delay_tap [2]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[2]_i_2 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ),
        .I1(\deskew_enable_gen.min_value_0 [3]),
        .I2(\deskew_enable_gen.max_value_0 [3]),
        .O(\deskew_enable_gen.delay_tap[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF880F8800000)) 
    \deskew_enable_gen.delay_tap[2]_i_3 
       (.I0(\deskew_enable_gen.min_value_1 [0]),
        .I1(\deskew_enable_gen.max_value_1 [0]),
        .I2(\deskew_enable_gen.max_value_1 [1]),
        .I3(\deskew_enable_gen.min_value_1 [1]),
        .I4(\deskew_enable_gen.max_value_1 [2]),
        .I5(\deskew_enable_gen.min_value_1 [2]),
        .O(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \deskew_enable_gen.delay_tap[2]_i_4 
       (.I0(\deskew_enable_gen.max_value_1 [3]),
        .I1(\deskew_enable_gen.min_value_1 [3]),
        .O(\deskew_enable_gen.delay_tap[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \deskew_enable_gen.delay_tap[2]_i_5 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I2(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I3(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .O(\deskew_enable_gen.delay_tap[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF45404045)) 
    \deskew_enable_gen.delay_tap[3]_i_1 
       (.I0(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[3]_i_3_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[3]_i_4_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[3]_i_5_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[3]_i_6_n_0 ),
        .O(\deskew_enable_gen.next_delay_tap [3]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \deskew_enable_gen.delay_tap[3]_i_2 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.state [8]),
        .O(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT5 #(
    .INIT(32'h99969666)) 
    \deskew_enable_gen.delay_tap[3]_i_3 
       (.I0(\deskew_enable_gen.min_value_1 [4]),
        .I1(\deskew_enable_gen.max_value_1 [4]),
        .I2(\deskew_enable_gen.min_value_1 [3]),
        .I3(\deskew_enable_gen.max_value_1 [3]),
        .I4(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ),
        .O(\deskew_enable_gen.delay_tap[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \deskew_enable_gen.delay_tap[3]_i_4 
       (.I0(\deskew_enable_gen.min_value_0 [4]),
        .I1(\deskew_enable_gen.max_value_0 [4]),
        .O(\deskew_enable_gen.delay_tap[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h17)) 
    \deskew_enable_gen.delay_tap[3]_i_5 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ),
        .I1(\deskew_enable_gen.min_value_0 [3]),
        .I2(\deskew_enable_gen.max_value_0 [3]),
        .O(\deskew_enable_gen.delay_tap[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \deskew_enable_gen.delay_tap[3]_i_6 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I2(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I3(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .I4(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .O(\deskew_enable_gen.delay_tap[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001120116)) 
    \deskew_enable_gen.delay_tap[4]_i_1 
       (.I0(\deskew_enable_gen.state [8]),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state [0]),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.state[1]_i_2_n_0 ),
        .I5(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'h66969699)) 
    \deskew_enable_gen.delay_tap[4]_i_10 
       (.I0(\deskew_enable_gen.max_value_0 [4]),
        .I1(\deskew_enable_gen.min_value_0 [4]),
        .I2(\deskew_enable_gen.max_value_0 [3]),
        .I3(\deskew_enable_gen.min_value_0 [3]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[4]_i_11 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_15_n_0 ),
        .I1(\deskew_enable_gen.min_value_1 [3]),
        .I2(\deskew_enable_gen.max_value_1 [3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \deskew_enable_gen.delay_tap[4]_i_12 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ),
        .I1(\deskew_enable_gen.min_value_0 [3]),
        .I2(\deskew_enable_gen.max_value_0 [3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hD400FFD4)) 
    \deskew_enable_gen.delay_tap[4]_i_13 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_17_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_18_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_19_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_20_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_21_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF880F8800000)) 
    \deskew_enable_gen.delay_tap[4]_i_14 
       (.I0(\deskew_enable_gen.min_value_0 [0]),
        .I1(\deskew_enable_gen.max_value_0 [0]),
        .I2(\deskew_enable_gen.min_value_0 [1]),
        .I3(\deskew_enable_gen.max_value_0 [1]),
        .I4(\deskew_enable_gen.min_value_0 [2]),
        .I5(\deskew_enable_gen.max_value_0 [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hDF0DFFFF0000DF0D)) 
    \deskew_enable_gen.delay_tap[4]_i_15 
       (.I0(\deskew_enable_gen.min_value_1 [0]),
        .I1(\deskew_enable_gen.max_value_1 [0]),
        .I2(\deskew_enable_gen.min_value_1 [1]),
        .I3(\deskew_enable_gen.max_value_1 [1]),
        .I4(\deskew_enable_gen.min_value_1 [2]),
        .I5(\deskew_enable_gen.max_value_1 [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h20F20000FFFF20F2)) 
    \deskew_enable_gen.delay_tap[4]_i_16 
       (.I0(\deskew_enable_gen.min_value_0 [0]),
        .I1(\deskew_enable_gen.max_value_0 [0]),
        .I2(\deskew_enable_gen.min_value_0 [1]),
        .I3(\deskew_enable_gen.max_value_0 [1]),
        .I4(\deskew_enable_gen.min_value_0 [2]),
        .I5(\deskew_enable_gen.max_value_0 [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'h4BB4)) 
    \deskew_enable_gen.delay_tap[4]_i_17 
       (.I0(\deskew_enable_gen.max_value_1 [0]),
        .I1(\deskew_enable_gen.min_value_1 [0]),
        .I2(\deskew_enable_gen.min_value_1 [1]),
        .I3(\deskew_enable_gen.max_value_1 [1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h4BB4)) 
    \deskew_enable_gen.delay_tap[4]_i_18 
       (.I0(\deskew_enable_gen.max_value_0 [0]),
        .I1(\deskew_enable_gen.min_value_0 [0]),
        .I2(\deskew_enable_gen.max_value_0 [1]),
        .I3(\deskew_enable_gen.min_value_0 [1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hF66F)) 
    \deskew_enable_gen.delay_tap[4]_i_19 
       (.I0(\deskew_enable_gen.max_value_0 [0]),
        .I1(\deskew_enable_gen.min_value_0 [0]),
        .I2(\deskew_enable_gen.max_value_1 [0]),
        .I3(\deskew_enable_gen.min_value_1 [0]),
        .O(\deskew_enable_gen.delay_tap[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEFAAAAAAEAAA)) 
    \deskew_enable_gen.delay_tap[4]_i_2 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_4_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_5_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state [7]),
        .I5(\deskew_enable_gen.delay_tap[4]_i_7_n_0 ),
        .O(\deskew_enable_gen.next_delay_tap [4]));
  LUT6 #(
    .INIT(64'hB2BB4D444D44B2BB)) 
    \deskew_enable_gen.delay_tap[4]_i_20 
       (.I0(\deskew_enable_gen.max_value_1 [1]),
        .I1(\deskew_enable_gen.min_value_1 [1]),
        .I2(\deskew_enable_gen.max_value_1 [0]),
        .I3(\deskew_enable_gen.min_value_1 [0]),
        .I4(\deskew_enable_gen.min_value_1 [2]),
        .I5(\deskew_enable_gen.max_value_1 [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hB2BB4D444D44B2BB)) 
    \deskew_enable_gen.delay_tap[4]_i_21 
       (.I0(\deskew_enable_gen.max_value_0 [1]),
        .I1(\deskew_enable_gen.min_value_0 [1]),
        .I2(\deskew_enable_gen.max_value_0 [0]),
        .I3(\deskew_enable_gen.min_value_0 [0]),
        .I4(\deskew_enable_gen.min_value_0 [2]),
        .I5(\deskew_enable_gen.max_value_0 [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \deskew_enable_gen.delay_tap[4]_i_3 
       (.I0(\deskew_enable_gen.state [11]),
        .I1(\deskew_enable_gen.state [10]),
        .I2(\deskew_enable_gen.state [5]),
        .I3(\deskew_enable_gen.state [6]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ),
        .I5(\deskew_enable_gen.state [1]),
        .O(\deskew_enable_gen.delay_tap[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \deskew_enable_gen.delay_tap[4]_i_4 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .I2(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I3(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I4(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .I5(\deskew_enable_gen.delay_tap_reg[4]_0 [4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \deskew_enable_gen.delay_tap[4]_i_5 
       (.I0(\deskew_enable_gen.max_value_1 [4]),
        .I1(\deskew_enable_gen.min_value_1 [4]),
        .I2(\deskew_enable_gen.delay_tap[2]_i_3_n_0 ),
        .I3(\deskew_enable_gen.max_value_1 [3]),
        .I4(\deskew_enable_gen.min_value_1 [3]),
        .O(\deskew_enable_gen.delay_tap[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E888EEE8)) 
    \deskew_enable_gen.delay_tap[4]_i_6 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_9_n_0 ),
        .I1(\deskew_enable_gen.delay_tap[4]_i_10_n_0 ),
        .I2(\deskew_enable_gen.delay_tap[4]_i_11_n_0 ),
        .I3(\deskew_enable_gen.delay_tap[4]_i_12_n_0 ),
        .I4(\deskew_enable_gen.delay_tap[4]_i_13_n_0 ),
        .I5(\deskew_enable_gen.step_count_reg[2]_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \deskew_enable_gen.delay_tap[4]_i_7 
       (.I0(\deskew_enable_gen.delay_tap[4]_i_14_n_0 ),
        .I1(\deskew_enable_gen.min_value_0 [3]),
        .I2(\deskew_enable_gen.max_value_0 [3]),
        .I3(\deskew_enable_gen.min_value_0 [4]),
        .I4(\deskew_enable_gen.max_value_0 [4]),
        .O(\deskew_enable_gen.delay_tap[4]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \deskew_enable_gen.delay_tap[4]_i_8 
       (.I0(\deskew_enable_gen.state [4]),
        .I1(\deskew_enable_gen.state [3]),
        .I2(\deskew_enable_gen.state [2]),
        .O(\deskew_enable_gen.delay_tap[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT5 #(
    .INIT(32'h69669969)) 
    \deskew_enable_gen.delay_tap[4]_i_9 
       (.I0(\deskew_enable_gen.min_value_1 [4]),
        .I1(\deskew_enable_gen.max_value_1 [4]),
        .I2(\deskew_enable_gen.max_value_1 [3]),
        .I3(\deskew_enable_gen.min_value_1 [3]),
        .I4(\deskew_enable_gen.delay_tap[4]_i_15_n_0 ),
        .O(\deskew_enable_gen.delay_tap[4]_i_9_n_0 ));
  FDRE \deskew_enable_gen.delay_tap_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_delay_tap [0]),
        .Q(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_tap_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_delay_tap [1]),
        .Q(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_tap_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_delay_tap [2]),
        .Q(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_tap_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_delay_tap [3]),
        .Q(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.delay_tap_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.delay_tap[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_delay_tap [4]),
        .Q(\deskew_enable_gen.delay_tap_reg[4]_0 [4]),
        .R(SR));
  CARRY4 \deskew_enable_gen.dout_p0_val0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.dout_p0_val0_carry_n_0 ,\deskew_enable_gen.dout_p0_val0_carry_n_1 ,\deskew_enable_gen.dout_p0_val0_carry_n_2 ,\deskew_enable_gen.dout_p0_val0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val0_carry_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.dout_p0_val0_carry_i_1_n_0 ,\deskew_enable_gen.dout_p0_val0_carry_i_2_n_0 ,\deskew_enable_gen.dout_p0_val0_carry_i_3_n_0 ,\deskew_enable_gen.dout_p0_val0_carry_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.dout_p0_val0_carry__0 
       (.CI(\deskew_enable_gen.dout_p0_val0_carry_n_0 ),
        .CO({\deskew_enable_gen.dout_p0_val0_carry__0_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__0_n_1 ,\deskew_enable_gen.dout_p0_val0_carry__0_n_2 ,\deskew_enable_gen.dout_p0_val0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val0_carry__0_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.dout_p0_val0_carry__0_i_1_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__0_i_2_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__0_i_3_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__0_i_4_n_0 }));
  LUT6 #(
    .INIT(64'h0007FFFF00070007)) 
    \deskew_enable_gen.dout_p0_val0_carry__0_i_1 
       (.I0(Q[1]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(\deskew_enable_gen.selected_data [21]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry__0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBABAFAFA303030F0)) 
    \deskew_enable_gen.dout_p0_val0_carry__0_i_2 
       (.I0(\deskew_enable_gen.selected_data [20]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry__0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDCDCDCFC50505050)) 
    \deskew_enable_gen.dout_p0_val0_carry__0_i_3 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.dout_p0_val0_carry__0_i_5_n_0 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry__0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \deskew_enable_gen.dout_p0_val0_carry__0_i_4 
       (.I0(\deskew_enable_gen.grp_count_mul [4]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.grp_p0_val0_carry__0_i_5_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry__0_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.dout_p0_val0_carry__0_i_5 
       (.I0(\deskew_enable_gen.selected_data [16]),
        .I1(\deskew_enable_gen.selected_data [17]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__0_i_5_n_0 ));
  CARRY4 \deskew_enable_gen.dout_p0_val0_carry__1 
       (.CI(\deskew_enable_gen.dout_p0_val0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.dout_p0_val0 ,\deskew_enable_gen.dout_p0_val0_carry__1_n_1 ,\deskew_enable_gen.dout_p0_val0_carry__1_n_2 ,\deskew_enable_gen.dout_p0_val0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.dout_p0_val0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.dout_p0_val0_carry__1_i_1_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__1_i_2_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__1_i_3_n_0 ,\deskew_enable_gen.dout_p0_val0_carry__1_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAFFFF)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hD0D0D0FF)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_2 
       (.I0(\deskew_enable_gen.dout_p0_val0_carry__1_i_5_n_0 ),
        .I1(\deskew_enable_gen.selected_data [32]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h22222F2F0000000F)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_3 
       (.I0(\deskew_enable_gen.selected_data [28]),
        .I1(\deskew_enable_gen.selected_data [29]),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.dout_p0_val0_carry__1_i_6_n_0 ),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h01FF010101010101)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_4 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.dout_p0_val0_carry__1_i_6_n_0 ),
        .I2(\deskew_enable_gen.grp_count_mul [6]),
        .I3(\deskew_enable_gen.data_out[24]_i_2_n_0 ),
        .I4(\deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ),
        .I5(\deskew_enable_gen.selected_data [26]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \deskew_enable_gen.dout_p0_val0_carry__1_i_6 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .O(\deskew_enable_gen.dout_p0_val0_carry__1_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h888F8F8F88888888)) 
    \deskew_enable_gen.dout_p0_val0_carry_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC0D0C0C0C0FFC0C0)) 
    \deskew_enable_gen.dout_p0_val0_carry_i_2 
       (.I0(Q[0]),
        .I1(\deskew_enable_gen.selected_data [8]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I5(Q[1]),
        .O(\deskew_enable_gen.dout_p0_val0_carry_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E000E0EEEE00E0)) 
    \deskew_enable_gen.dout_p0_val0_carry_i_3 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\deskew_enable_gen.selected_data [4]),
        .I3(\deskew_enable_gen.selected_data [5]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_2 ),
        .I5(Q[1]),
        .O(\deskew_enable_gen.dout_p0_val0_carry_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \deskew_enable_gen.dout_p0_val0_carry_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.grp_p0_val0_carry_i_5_n_0 ),
        .O(\deskew_enable_gen.dout_p0_val0_carry_i_4_n_0 ));
  FDRE \deskew_enable_gen.dout_p0_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.dout_p0_val0 ),
        .Q(\deskew_enable_gen.dout_p0_val ),
        .R(1'b0));
  FDRE \deskew_enable_gen.f0_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f0_val0),
        .Q(\deskew_enable_gen.f0_val_reg_n_0_[0] ),
        .R(1'b0));
  (* srl_bus_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.f0_val_reg " *) 
  (* srl_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.f0_val_reg[2]_srl2 " *) 
  SRL16E \deskew_enable_gen.f0_val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk_ph_out),
        .D(\deskew_enable_gen.f0_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ));
  FDRE \deskew_enable_gen.f0_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f0_val_reg[2]_srl2_n_0 ),
        .Q(p_3_in),
        .R(1'b0));
  FDRE \deskew_enable_gen.f1_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f1_val0),
        .Q(\deskew_enable_gen.f1_val_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.f1_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f1_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.f1_val_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.f1_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f1_val_reg_n_0_[1] ),
        .Q(p_2_in5_in),
        .R(1'b0));
  FDRE \deskew_enable_gen.f2_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f2_val0),
        .Q(\deskew_enable_gen.f2_val_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.f2_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f2_val_reg_n_0_[0] ),
        .Q(p_0_in4_in),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.f3_val_reg0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.f3_val_reg0_carry_n_0 ,\deskew_enable_gen.f3_val_reg0_carry_n_1 ,\deskew_enable_gen.f3_val_reg0_carry_n_2 ,\deskew_enable_gen.f3_val_reg0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg0_carry_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f3_val_reg0_carry_i_1_n_0 ,\deskew_enable_gen.f3_val_reg0_carry_i_2_n_0 ,\deskew_enable_gen.f3_val_reg0_carry_i_3_n_0 ,\deskew_enable_gen.f3_val_reg0_carry_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.f3_val_reg0_carry__0 
       (.CI(\deskew_enable_gen.f3_val_reg0_carry_n_0 ),
        .CO({\deskew_enable_gen.f3_val_reg0_carry__0_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__0_n_1 ,\deskew_enable_gen.f3_val_reg0_carry__0_n_2 ,\deskew_enable_gen.f3_val_reg0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg0_carry__0_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f3_val_reg0_carry__0_i_1_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__0_i_2_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__0_i_3_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__0_i_4_n_0 }));
  LUT4 #(
    .INIT(16'h20FF)) 
    \deskew_enable_gen.f3_val_reg0_carry__0_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [1]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [22]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [20]),
        .I3(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry__0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00D0DDDD)) 
    \deskew_enable_gen.f3_val_reg0_carry__0_i_2 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(unalign_data[20]),
        .I2(unalign_data[18]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .I4(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry__0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.f3_val_reg0_carry__0_i_3 
       (.I0(unalign_data[16]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry__0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hB333)) 
    \deskew_enable_gen.f3_val_reg0_carry__0_i_4 
       (.I0(unalign_data[12]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .I3(unalign_data[14]),
        .O(\deskew_enable_gen.f3_val_reg0_carry__0_i_4_n_0 ));
  CARRY4 \deskew_enable_gen.f3_val_reg0_carry__1 
       (.CI(\deskew_enable_gen.f3_val_reg0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.f3_val_reg0 ,\deskew_enable_gen.f3_val_reg0_carry__1_n_1 ,\deskew_enable_gen.f3_val_reg0_carry__1_n_2 ,\deskew_enable_gen.f3_val_reg0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.f3_val_reg0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.f3_val_reg0_carry__1_i_1_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__1_i_2_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__1_i_3_n_0 ,\deskew_enable_gen.f3_val_reg0_carry__1_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFF7F)) 
    \deskew_enable_gen.f3_val_reg0_carry__1_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .O(\deskew_enable_gen.f3_val_reg0_carry__1_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    \deskew_enable_gen.f3_val_reg0_carry__1_i_2 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I1(unalign_data[32]),
        .I2(unalign_data[30]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry__1_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.f3_val_reg0_carry__1_i_3 
       (.I0(unalign_data[28]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry__1_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hB333)) 
    \deskew_enable_gen.f3_val_reg0_carry__1_i_4 
       (.I0(unalign_data[24]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .I3(unalign_data[26]),
        .O(\deskew_enable_gen.f3_val_reg0_carry__1_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h20FF)) 
    \deskew_enable_gen.f3_val_reg0_carry_i_1 
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [10]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [8]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    \deskew_enable_gen.f3_val_reg0_carry_i_2 
       (.I0(unalign_data[8]),
        .I1(unalign_data[6]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_2 ),
        .I5(Q[0]),
        .O(\deskew_enable_gen.f3_val_reg0_carry_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.f3_val_reg0_carry_i_3 
       (.I0(unalign_data[4]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(\deskew_enable_gen.f3_val_reg0_carry_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hB333)) 
    \deskew_enable_gen.f3_val_reg0_carry_i_4 
       (.I0(unalign_data[0]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .I3(unalign_data[2]),
        .O(\deskew_enable_gen.f3_val_reg0_carry_i_4_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.f3_val_reg0 ),
        .Q(f3_val[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[0]),
        .Q(f3_val[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[1]),
        .Q(f3_val[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.f3_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(f3_val[2]),
        .Q(f3_val[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \deskew_enable_gen.flip_type_i_2 
       (.I0(\deskew_enable_gen.state [1]),
        .I1(\deskew_enable_gen.state [2]),
        .O(\deskew_enable_gen.state_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \deskew_enable_gen.flip_type_i_3 
       (.I0(\deskew_enable_gen.state [3]),
        .I1(\deskew_enable_gen.state [0]),
        .O(\deskew_enable_gen.state_reg[3]_0 ));
  FDRE \deskew_enable_gen.flip_type_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.flip_type_reg_0 ),
        .Q(flip_type),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \deskew_enable_gen.grp_count[0]_i_1 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(Q[0]),
        .O(\deskew_enable_gen.next_grp_count [0]));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \deskew_enable_gen.grp_count[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.state [10]),
        .O(\deskew_enable_gen.grp_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \deskew_enable_gen.grp_count[2]_i_1 
       (.I0(\deskew_enable_gen.state [10]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .O(\deskew_enable_gen.next_grp_count [2]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \deskew_enable_gen.grp_count[3]_i_1 
       (.I0(\deskew_enable_gen.state [10]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.next_grp_count [3]));
  LUT6 #(
    .INIT(64'h00000000222E0000)) 
    \deskew_enable_gen.grp_count[4]_i_1 
       (.I0(\deskew_enable_gen.grp_count[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state[9]_i_3_n_0 ),
        .I3(\deskew_enable_gen.state [10]),
        .I4(\deskew_enable_gen.grp_count[4]_i_4_n_0 ),
        .I5(\deskew_enable_gen.grp_count[4]_i_5_n_0 ),
        .O(\deskew_enable_gen.grp_count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \deskew_enable_gen.grp_count[4]_i_2 
       (.I0(\deskew_enable_gen.state [10]),
        .I1(\deskew_enable_gen.grp_count_mul [4]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\deskew_enable_gen.grp_count_mul [6]),
        .O(\deskew_enable_gen.next_grp_count [4]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h00080880)) 
    \deskew_enable_gen.grp_count[4]_i_3 
       (.I0(\deskew_enable_gen.dout_p0_val ),
        .I1(\deskew_enable_gen.state [10]),
        .I2(\deskew_enable_gen.grp_p0_val ),
        .I3(\deskew_enable_gen.grp_p1_val ),
        .I4(\deskew_enable_gen.grp_p3_val ),
        .O(\deskew_enable_gen.grp_count[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \deskew_enable_gen.grp_count[4]_i_4 
       (.I0(\deskew_enable_gen.state [1]),
        .I1(\deskew_enable_gen.state [2]),
        .I2(\deskew_enable_gen.state [0]),
        .I3(\deskew_enable_gen.state [3]),
        .O(\deskew_enable_gen.grp_count[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \deskew_enable_gen.grp_count[4]_i_5 
       (.I0(\deskew_enable_gen.state [11]),
        .I1(\deskew_enable_gen.state [9]),
        .I2(\deskew_enable_gen.state [4]),
        .I3(\deskew_enable_gen.state [5]),
        .I4(\deskew_enable_gen.state [6]),
        .I5(\deskew_enable_gen.state [8]),
        .O(\deskew_enable_gen.grp_count[4]_i_5_n_0 ));
  FDRE \deskew_enable_gen.grp_count_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.grp_count[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_grp_count [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \deskew_enable_gen.grp_count_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.grp_count[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.grp_count[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE \deskew_enable_gen.grp_count_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.grp_count[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_grp_count [2]),
        .Q(\deskew_enable_gen.grp_count_mul [4]),
        .R(SR));
  FDRE \deskew_enable_gen.grp_count_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.grp_count[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_grp_count [3]),
        .Q(\deskew_enable_gen.grp_count_mul [5]),
        .R(SR));
  FDRE \deskew_enable_gen.grp_count_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.grp_count[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_grp_count [4]),
        .Q(\deskew_enable_gen.grp_count_mul [6]),
        .R(SR));
  LUT5 #(
    .INIT(32'h0F0E0004)) 
    \deskew_enable_gen.grp_flip_i_1 
       (.I0(\deskew_enable_gen.delay_tap[1]_i_4_n_0 ),
        .I1(\deskew_enable_gen.min_flip_1 ),
        .I2(\deskew_enable_gen.grp_flip_i_2_n_0 ),
        .I3(\deskew_enable_gen.step_count_reg[2]_0 ),
        .I4(\deskew_enable_gen.min_flip_0 ),
        .O(\deskew_enable_gen.next_grp_flip ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \deskew_enable_gen.grp_flip_i_2 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.state [0]),
        .I2(\deskew_enable_gen.state [3]),
        .I3(\deskew_enable_gen.delay_tap[3]_i_2_n_0 ),
        .I4(\deskew_enable_gen.state[11]_i_8_n_0 ),
        .I5(\deskew_enable_gen.grp_flip_i_3_n_0 ),
        .O(\deskew_enable_gen.grp_flip_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \deskew_enable_gen.grp_flip_i_3 
       (.I0(\deskew_enable_gen.state [11]),
        .I1(\deskew_enable_gen.state [9]),
        .I2(\deskew_enable_gen.state [10]),
        .I3(\deskew_enable_gen.state [1]),
        .O(\deskew_enable_gen.grp_flip_i_3_n_0 ));
  FDRE \deskew_enable_gen.grp_flip_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.next_grp_flip ),
        .Q(\deskew_enable_gen.grp_flip ),
        .R(SR));
  CARRY4 \deskew_enable_gen.grp_p0_val0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p0_val0_carry_n_0 ,\deskew_enable_gen.grp_p0_val0_carry_n_1 ,\deskew_enable_gen.grp_p0_val0_carry_n_2 ,\deskew_enable_gen.grp_p0_val0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val0_carry_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p0_val0_carry_i_1_n_0 ,\deskew_enable_gen.grp_p0_val0_carry_i_2_n_0 ,\deskew_enable_gen.grp_p0_val0_carry_i_3_n_0 ,\deskew_enable_gen.grp_p0_val0_carry_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p0_val0_carry__0 
       (.CI(\deskew_enable_gen.grp_p0_val0_carry_n_0 ),
        .CO({\deskew_enable_gen.grp_p0_val0_carry__0_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__0_n_1 ,\deskew_enable_gen.grp_p0_val0_carry__0_n_2 ,\deskew_enable_gen.grp_p0_val0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val0_carry__0_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p0_val0_carry__0_i_1_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__0_i_2_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__0_i_3_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__0_i_4_n_0 }));
  LUT3 #(
    .INIT(8'h2F)) 
    \deskew_enable_gen.grp_p0_val0_carry__0_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ),
        .I1(\deskew_enable_gen.selected_data [21]),
        .I2(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hD0DD)) 
    \deskew_enable_gen.grp_p0_val0_carry__0_i_2 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(\deskew_enable_gen.selected_data [20]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    \deskew_enable_gen.grp_p0_val0_carry__0_i_3 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I1(\deskew_enable_gen.selected_data [16]),
        .I2(\deskew_enable_gen.selected_data [17]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ),
        .I4(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \deskew_enable_gen.grp_p0_val0_carry__0_i_4 
       (.I0(\deskew_enable_gen.grp_p0_val0_carry__0_i_5_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_count_mul [5]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [4]),
        .O(\deskew_enable_gen.grp_p0_val0_carry__0_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.grp_p0_val0_carry__0_i_5 
       (.I0(\deskew_enable_gen.selected_data [14]),
        .I1(\deskew_enable_gen.grp_p3_val0_carry__0_i_8_n_0 ),
        .I2(\deskew_enable_gen.data_out[12]_i_2_n_0 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__0_i_5_n_0 ));
  CARRY4 \deskew_enable_gen.grp_p0_val0_carry__1 
       (.CI(\deskew_enable_gen.grp_p0_val0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.grp_p0_val0 ,\deskew_enable_gen.grp_p0_val0_carry__1_n_1 ,\deskew_enable_gen.grp_p0_val0_carry__1_n_2 ,\deskew_enable_gen.grp_p0_val0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p0_val0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p0_val0_carry__1_i_1_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__1_i_2_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__1_i_3_n_0 ,\deskew_enable_gen.grp_p0_val0_carry__1_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFBFFF)) 
    \deskew_enable_gen.grp_p0_val0_carry__1_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_p0_val0_carry__1_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE0EE)) 
    \deskew_enable_gen.grp_p0_val0_carry__1_i_2 
       (.I0(\deskew_enable_gen.selected_data [32]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__1_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    \deskew_enable_gen.grp_p0_val0_carry__1_i_3 
       (.I0(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I1(\deskew_enable_gen.selected_data [28]),
        .I2(\deskew_enable_gen.selected_data [29]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ),
        .I4(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__1_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h40FF)) 
    \deskew_enable_gen.grp_p0_val0_carry__1_i_4 
       (.I0(\deskew_enable_gen.data_out[24]_i_2_n_0 ),
        .I1(\deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ),
        .I2(\deskew_enable_gen.selected_data [26]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry__1_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h8F)) 
    \deskew_enable_gen.grp_p0_val0_carry_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ),
        .I2(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFCFFFFFFAFFF)) 
    \deskew_enable_gen.grp_p0_val0_carry_i_2 
       (.I0(\deskew_enable_gen.selected_data [8]),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(Q[0]),
        .O(\deskew_enable_gen.grp_p0_val0_carry_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    \deskew_enable_gen.grp_p0_val0_carry_i_3 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I1(\deskew_enable_gen.selected_data [4]),
        .I2(\deskew_enable_gen.selected_data [5]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ),
        .I4(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \deskew_enable_gen.grp_p0_val0_carry_i_4 
       (.I0(\deskew_enable_gen.grp_p0_val0_carry_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_p0_val0_carry_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.grp_p0_val0_carry_i_5 
       (.I0(\deskew_enable_gen.selected_data [2]),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_10_n_0 ),
        .I2(\deskew_enable_gen.data_out[0]_i_2_n_0 ),
        .O(\deskew_enable_gen.grp_p0_val0_carry_i_5_n_0 ));
  FDRE \deskew_enable_gen.grp_p0_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.grp_p0_val0 ),
        .Q(\deskew_enable_gen.grp_p0_val ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.grp_p1_val0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p1_val0_carry_n_0 ,\deskew_enable_gen.grp_p1_val0_carry_n_1 ,\deskew_enable_gen.grp_p1_val0_carry_n_2 ,\deskew_enable_gen.grp_p1_val0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val0_carry_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p1_val0_carry_i_1_n_0 ,\deskew_enable_gen.grp_p1_val0_carry_i_2_n_0 ,\deskew_enable_gen.grp_p1_val0_carry_i_3_n_0 ,\deskew_enable_gen.grp_p1_val0_carry_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p1_val0_carry__0 
       (.CI(\deskew_enable_gen.grp_p1_val0_carry_n_0 ),
        .CO({\deskew_enable_gen.grp_p1_val0_carry__0_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__0_n_1 ,\deskew_enable_gen.grp_p1_val0_carry__0_n_2 ,\deskew_enable_gen.grp_p1_val0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val0_carry__0_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p1_val0_carry__0_i_1_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__0_i_2_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__0_i_3_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__0_i_4_n_0 }));
  LUT3 #(
    .INIT(8'h8F)) 
    \deskew_enable_gen.grp_p1_val0_carry__0_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ),
        .I1(\deskew_enable_gen.selected_data [21]),
        .I2(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry__0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7077)) 
    \deskew_enable_gen.grp_p1_val0_carry__0_i_2 
       (.I0(\deskew_enable_gen.selected_data [20]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry__0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00BBB0BB)) 
    \deskew_enable_gen.grp_p1_val0_carry__0_i_3 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.selected_data [17]),
        .I3(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I4(\deskew_enable_gen.selected_data [16]),
        .O(\deskew_enable_gen.grp_p1_val0_carry__0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h08FF)) 
    \deskew_enable_gen.grp_p1_val0_carry__0_i_4 
       (.I0(\deskew_enable_gen.data_out[12]_i_2_n_0 ),
        .I1(\deskew_enable_gen.selected_data [14]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__0_i_8_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry__0_i_4_n_0 ));
  CARRY4 \deskew_enable_gen.grp_p1_val0_carry__1 
       (.CI(\deskew_enable_gen.grp_p1_val0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.grp_p1_val0 ,\deskew_enable_gen.grp_p1_val0_carry__1_n_1 ,\deskew_enable_gen.grp_p1_val0_carry__1_n_2 ,\deskew_enable_gen.grp_p1_val0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p1_val0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p1_val0_carry__1_i_1_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__1_i_2_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__1_i_3_n_0 ,\deskew_enable_gen.grp_p1_val0_carry__1_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFF7FFF)) 
    \deskew_enable_gen.grp_p1_val0_carry__1_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_p1_val0_carry__1_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hD0DD)) 
    \deskew_enable_gen.grp_p1_val0_carry__1_i_2 
       (.I0(\deskew_enable_gen.selected_data [32]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry__1_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h73730073)) 
    \deskew_enable_gen.grp_p1_val0_carry__1_i_3 
       (.I0(\deskew_enable_gen.selected_data [28]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.selected_data [29]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I4(\deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry__1_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h3B33)) 
    \deskew_enable_gen.grp_p1_val0_carry__1_i_4 
       (.I0(\deskew_enable_gen.data_out[24]_i_2_n_0 ),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ),
        .I3(\deskew_enable_gen.selected_data [26]),
        .O(\deskew_enable_gen.grp_p1_val0_carry__1_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \deskew_enable_gen.grp_p1_val0_carry_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ),
        .I2(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFCFFFFFF5FFF)) 
    \deskew_enable_gen.grp_p1_val0_carry_i_2 
       (.I0(\deskew_enable_gen.selected_data [8]),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(Q[0]),
        .O(\deskew_enable_gen.grp_p1_val0_carry_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h73730073)) 
    \deskew_enable_gen.grp_p1_val0_carry_i_3 
       (.I0(\deskew_enable_gen.selected_data [4]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.selected_data [5]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I4(\deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h08FF)) 
    \deskew_enable_gen.grp_p1_val0_carry_i_4 
       (.I0(\deskew_enable_gen.data_out[0]_i_2_n_0 ),
        .I1(\deskew_enable_gen.selected_data [2]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry_i_10_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(\deskew_enable_gen.grp_p1_val0_carry_i_4_n_0 ));
  FDRE \deskew_enable_gen.grp_p1_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.grp_p1_val0 ),
        .Q(\deskew_enable_gen.grp_p1_val ),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.grp_p3_val0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.grp_p3_val0_carry_n_0 ,\deskew_enable_gen.grp_p3_val0_carry_n_1 ,\deskew_enable_gen.grp_p3_val0_carry_n_2 ,\deskew_enable_gen.grp_p3_val0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val0_carry_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p3_val0_carry_i_1_n_0 ,\deskew_enable_gen.grp_p3_val0_carry_i_2_n_0 ,\deskew_enable_gen.grp_p3_val0_carry_i_3_n_0 ,\deskew_enable_gen.grp_p3_val0_carry_i_4_n_0 }));
  CARRY4 \deskew_enable_gen.grp_p3_val0_carry__0 
       (.CI(\deskew_enable_gen.grp_p3_val0_carry_n_0 ),
        .CO({\deskew_enable_gen.grp_p3_val0_carry__0_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__0_n_1 ,\deskew_enable_gen.grp_p3_val0_carry__0_n_2 ,\deskew_enable_gen.grp_p3_val0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val0_carry__0_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p3_val0_carry__0_i_1_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__0_i_2_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__0_i_3_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__0_i_4_n_0 }));
  LUT3 #(
    .INIT(8'h8F)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ),
        .I1(\deskew_enable_gen.selected_data [21]),
        .I2(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_10 
       (.I0(\deskew_enable_gen.data_stage1 [18]),
        .I1(\deskew_enable_gen.data_stage2 [18]),
        .I2(\deskew_enable_gen.data_stage_sel0 [18]),
        .I3(\deskew_enable_gen.data_stage_sel1 [18]),
        .I4(\deskew_enable_gen.data_stage0 [18]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hD0DD)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_2 
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(\deskew_enable_gen.selected_data [20]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB0BB00BB)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_3 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\deskew_enable_gen.selected_data [17]),
        .I3(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I4(\deskew_enable_gen.selected_data [16]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_4 
       (.I0(\deskew_enable_gen.data_out[12]_i_2_n_0 ),
        .I1(\deskew_enable_gen.selected_data [14]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__0_i_8_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000034F437F7)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_5 
       (.I0(\deskew_enable_gen.data_stage0 [23]),
        .I1(\deskew_enable_gen.data_stage_sel1 [23]),
        .I2(\deskew_enable_gen.data_stage_sel0 [23]),
        .I3(\deskew_enable_gen.data_stage2 [23]),
        .I4(\deskew_enable_gen.data_stage1 [23]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__0_i_9_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000034F437F7)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_6 
       (.I0(\deskew_enable_gen.data_stage0 [19]),
        .I1(\deskew_enable_gen.data_stage_sel1 [19]),
        .I2(\deskew_enable_gen.data_stage_sel0 [19]),
        .I3(\deskew_enable_gen.data_stage2 [19]),
        .I4(\deskew_enable_gen.data_stage1 [19]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__0_i_10_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_7 
       (.I0(\deskew_enable_gen.data_stage1 [15]),
        .I1(\deskew_enable_gen.data_stage2 [15]),
        .I2(\deskew_enable_gen.data_stage_sel0 [15]),
        .I3(\deskew_enable_gen.data_stage_sel1 [15]),
        .I4(\deskew_enable_gen.data_stage0 [15]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_8 
       (.I0(\deskew_enable_gen.data_stage1 [13]),
        .I1(\deskew_enable_gen.data_stage2 [13]),
        .I2(\deskew_enable_gen.data_stage_sel0 [13]),
        .I3(\deskew_enable_gen.data_stage_sel1 [13]),
        .I4(\deskew_enable_gen.data_stage0 [13]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__0_i_9 
       (.I0(\deskew_enable_gen.data_stage1 [22]),
        .I1(\deskew_enable_gen.data_stage2 [22]),
        .I2(\deskew_enable_gen.data_stage_sel0 [22]),
        .I3(\deskew_enable_gen.data_stage_sel1 [22]),
        .I4(\deskew_enable_gen.data_stage0 [22]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__0_i_9_n_0 ));
  CARRY4 \deskew_enable_gen.grp_p3_val0_carry__1 
       (.CI(\deskew_enable_gen.grp_p3_val0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.grp_p3_val0 ,\deskew_enable_gen.grp_p3_val0_carry__1_n_1 ,\deskew_enable_gen.grp_p3_val0_carry__1_n_2 ,\deskew_enable_gen.grp_p3_val0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.grp_p3_val0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.grp_p3_val0_carry__1_i_1_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__1_i_2_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__1_i_3_n_0 ,\deskew_enable_gen.grp_p3_val0_carry__1_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFF7FFF)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE0EE)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_2 
       (.I0(\deskew_enable_gen.selected_data [32]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3B300B3)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_3 
       (.I0(\deskew_enable_gen.selected_data [28]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\deskew_enable_gen.selected_data [29]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I4(\deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h3733)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_4 
       (.I0(\deskew_enable_gen.data_out[24]_i_2_n_0 ),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ),
        .I3(\deskew_enable_gen.selected_data [26]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_5 
       (.I0(\deskew_enable_gen.data_stage1 [33]),
        .I1(\deskew_enable_gen.data_stage2 [33]),
        .I2(\deskew_enable_gen.data_stage_sel0 [33]),
        .I3(\deskew_enable_gen.data_stage_sel1 [33]),
        .I4(\deskew_enable_gen.data_stage0 [33]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000034F437F7)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_6 
       (.I0(\deskew_enable_gen.data_stage0 [31]),
        .I1(\deskew_enable_gen.data_stage_sel1 [31]),
        .I2(\deskew_enable_gen.data_stage_sel0 [31]),
        .I3(\deskew_enable_gen.data_stage2 [31]),
        .I4(\deskew_enable_gen.data_stage1 [31]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry__1_i_9_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_7 
       (.I0(\deskew_enable_gen.data_stage1 [27]),
        .I1(\deskew_enable_gen.data_stage2 [27]),
        .I2(\deskew_enable_gen.data_stage_sel0 [27]),
        .I3(\deskew_enable_gen.data_stage_sel1 [27]),
        .I4(\deskew_enable_gen.data_stage0 [27]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_8 
       (.I0(\deskew_enable_gen.data_stage1 [25]),
        .I1(\deskew_enable_gen.data_stage2 [25]),
        .I2(\deskew_enable_gen.data_stage_sel0 [25]),
        .I3(\deskew_enable_gen.data_stage_sel1 [25]),
        .I4(\deskew_enable_gen.data_stage0 [25]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry__1_i_9 
       (.I0(\deskew_enable_gen.data_stage1 [30]),
        .I1(\deskew_enable_gen.data_stage2 [30]),
        .I2(\deskew_enable_gen.data_stage_sel0 [30]),
        .I3(\deskew_enable_gen.data_stage_sel1 [30]),
        .I4(\deskew_enable_gen.data_stage0 [30]),
        .O(\deskew_enable_gen.grp_p3_val0_carry__1_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ),
        .I2(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_10 
       (.I0(\deskew_enable_gen.data_stage1 [1]),
        .I1(\deskew_enable_gen.data_stage2 [1]),
        .I2(\deskew_enable_gen.data_stage_sel0 [1]),
        .I3(\deskew_enable_gen.data_stage_sel1 [1]),
        .I4(\deskew_enable_gen.data_stage0 [1]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_11 
       (.I0(\deskew_enable_gen.data_stage1 [10]),
        .I1(\deskew_enable_gen.data_stage2 [10]),
        .I2(\deskew_enable_gen.data_stage_sel0 [10]),
        .I3(\deskew_enable_gen.data_stage_sel1 [10]),
        .I4(\deskew_enable_gen.data_stage0 [10]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_12 
       (.I0(\deskew_enable_gen.data_stage1 [6]),
        .I1(\deskew_enable_gen.data_stage2 [6]),
        .I2(\deskew_enable_gen.data_stage_sel0 [6]),
        .I3(\deskew_enable_gen.data_stage_sel1 [6]),
        .I4(\deskew_enable_gen.data_stage0 [6]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFCFFFFFFAFFF)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_2 
       (.I0(\deskew_enable_gen.selected_data [8]),
        .I1(\deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ),
        .I2(Q[1]),
        .I3(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(Q[0]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB3B300B3)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_3 
       (.I0(\deskew_enable_gen.selected_data [4]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\deskew_enable_gen.selected_data [5]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I4(\deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_4 
       (.I0(\deskew_enable_gen.data_out[0]_i_2_n_0 ),
        .I1(\deskew_enable_gen.selected_data [2]),
        .I2(\deskew_enable_gen.grp_p3_val0_carry_i_10_n_0 ),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_5 
       (.I0(\deskew_enable_gen.data_stage1 [9]),
        .I1(\deskew_enable_gen.data_stage2 [9]),
        .I2(\deskew_enable_gen.data_stage_sel0 [9]),
        .I3(\deskew_enable_gen.data_stage_sel1 [9]),
        .I4(\deskew_enable_gen.data_stage0 [9]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000034F437F7)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_6 
       (.I0(\deskew_enable_gen.data_stage0 [11]),
        .I1(\deskew_enable_gen.data_stage_sel1 [11]),
        .I2(\deskew_enable_gen.data_stage_sel0 [11]),
        .I3(\deskew_enable_gen.data_stage2 [11]),
        .I4(\deskew_enable_gen.data_stage1 [11]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry_i_11_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000034F437F7)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_7 
       (.I0(\deskew_enable_gen.data_stage0 [7]),
        .I1(\deskew_enable_gen.data_stage_sel1 [7]),
        .I2(\deskew_enable_gen.data_stage_sel0 [7]),
        .I3(\deskew_enable_gen.data_stage2 [7]),
        .I4(\deskew_enable_gen.data_stage1 [7]),
        .I5(\deskew_enable_gen.grp_p3_val0_carry_i_12_n_0 ),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_8 
       (.I0(\deskew_enable_gen.grp_count_mul [6]),
        .I1(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h30F53FF5)) 
    \deskew_enable_gen.grp_p3_val0_carry_i_9 
       (.I0(\deskew_enable_gen.data_stage1 [3]),
        .I1(\deskew_enable_gen.data_stage2 [3]),
        .I2(\deskew_enable_gen.data_stage_sel0 [3]),
        .I3(\deskew_enable_gen.data_stage_sel1 [3]),
        .I4(\deskew_enable_gen.data_stage0 [3]),
        .O(\deskew_enable_gen.grp_p3_val0_carry_i_9_n_0 ));
  FDRE \deskew_enable_gen.grp_p3_val_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.grp_p3_val0 ),
        .Q(\deskew_enable_gen.grp_p3_val ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0A000A80)) 
    \deskew_enable_gen.max_value_0[4]_i_1 
       (.I0(\deskew_enable_gen.max_value_1[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.min_flip_0_reg_0 ),
        .I2(\deskew_enable_gen.state [5]),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.step_count [2]),
        .O(\deskew_enable_gen.next_max_value_0 ));
  FDRE \deskew_enable_gen.max_value_0_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [0]),
        .Q(\deskew_enable_gen.max_value_0 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_0_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [1]),
        .Q(\deskew_enable_gen.max_value_0 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_0_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [2]),
        .Q(\deskew_enable_gen.max_value_0 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_0_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [3]),
        .Q(\deskew_enable_gen.max_value_0 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_0_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [4]),
        .Q(\deskew_enable_gen.max_value_0 [4]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.max_value_1[0]_i_1 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.next_min_value_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.max_value_1[1]_i_1 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.next_min_value_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.max_value_1[2]_i_1 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.next_min_value_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.max_value_1[3]_i_1 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.next_min_value_0 [3]));
  LUT5 #(
    .INIT(32'h0008AA08)) 
    \deskew_enable_gen.max_value_1[4]_i_1 
       (.I0(\deskew_enable_gen.max_value_1[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.step_count[1]_i_2_n_0 ),
        .I2(\deskew_enable_gen.step_count [2]),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.next_max_value_1 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.max_value_1[4]_i_2 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [4]),
        .I1(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.next_min_value_0 [4]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \deskew_enable_gen.max_value_1[4]_i_3 
       (.I0(\deskew_enable_gen.max_value_1[4]_i_4_n_0 ),
        .I1(\deskew_enable_gen.state [6]),
        .I2(\deskew_enable_gen.state [4]),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state [7]),
        .I5(\deskew_enable_gen.grp_count[4]_i_4_n_0 ),
        .O(\deskew_enable_gen.max_value_1[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.max_value_1[4]_i_4 
       (.I0(\deskew_enable_gen.state [11]),
        .I1(\deskew_enable_gen.state [10]),
        .O(\deskew_enable_gen.max_value_1[4]_i_4_n_0 ));
  FDRE \deskew_enable_gen.max_value_1_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [0]),
        .Q(\deskew_enable_gen.max_value_1 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_1_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [1]),
        .Q(\deskew_enable_gen.max_value_1 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_1_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [2]),
        .Q(\deskew_enable_gen.max_value_1 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_1_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [3]),
        .Q(\deskew_enable_gen.max_value_1 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.max_value_1_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_max_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [4]),
        .Q(\deskew_enable_gen.max_value_1 [4]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \deskew_enable_gen.min_flip_0_i_2 
       (.I0(\deskew_enable_gen.state [0]),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state [5]),
        .I3(\deskew_enable_gen.state [6]),
        .I4(\deskew_enable_gen.state [8]),
        .I5(\deskew_enable_gen.min_flip_0_i_3_n_0 ),
        .O(\deskew_enable_gen.state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \deskew_enable_gen.min_flip_0_i_3 
       (.I0(\deskew_enable_gen.count[2]_i_5_n_0 ),
        .I1(\deskew_enable_gen.state [4]),
        .I2(\deskew_enable_gen.state [1]),
        .I3(\deskew_enable_gen.state [10]),
        .I4(\deskew_enable_gen.state [9]),
        .I5(\deskew_enable_gen.state [11]),
        .O(\deskew_enable_gen.min_flip_0_i_3_n_0 ));
  FDRE \deskew_enable_gen.min_flip_0_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.min_flip_0_reg_1 ),
        .Q(\deskew_enable_gen.min_flip_0 ),
        .R(SR));
  FDRE \deskew_enable_gen.min_flip_1_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.min_flip_1_reg_0 ),
        .Q(\deskew_enable_gen.min_flip_1 ),
        .R(SR));
  LUT6 #(
    .INIT(64'h0001FF0000000000)) 
    \deskew_enable_gen.min_value_0[4]_i_1 
       (.I0(\deskew_enable_gen.step_count [0]),
        .I1(\deskew_enable_gen.step_count [1]),
        .I2(\deskew_enable_gen.step_count [2]),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.state [5]),
        .I5(\deskew_enable_gen.max_value_1[4]_i_3_n_0 ),
        .O(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ));
  FDRE \deskew_enable_gen.min_value_0_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [0]),
        .Q(\deskew_enable_gen.min_value_0 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_0_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [1]),
        .Q(\deskew_enable_gen.min_value_0 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_0_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [2]),
        .Q(\deskew_enable_gen.min_value_0 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_0_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [3]),
        .Q(\deskew_enable_gen.min_value_0 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_0_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.min_value_0[4]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_min_value_0 [4]),
        .Q(\deskew_enable_gen.min_value_0 [4]),
        .R(SR));
  LUT5 #(
    .INIT(32'h0020AA00)) 
    \deskew_enable_gen.min_value_1[4]_i_1 
       (.I0(\deskew_enable_gen.max_value_1[4]_i_3_n_0 ),
        .I1(\deskew_enable_gen.min_flip_0_reg_0 ),
        .I2(\deskew_enable_gen.step_count_reg[2]_0 ),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.next_min_value_1 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'h009F)) 
    \deskew_enable_gen.min_value_1[4]_i_2 
       (.I0(\deskew_enable_gen.min_flip_0 ),
        .I1(flip_type),
        .I2(\deskew_enable_gen.step_count [0]),
        .I3(\deskew_enable_gen.step_count [1]),
        .O(\deskew_enable_gen.min_flip_0_reg_0 ));
  FDRE \deskew_enable_gen.min_value_1_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_min_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [0]),
        .Q(\deskew_enable_gen.min_value_1 [0]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_1_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_min_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [1]),
        .Q(\deskew_enable_gen.min_value_1 [1]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_1_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_min_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [2]),
        .Q(\deskew_enable_gen.min_value_1 [2]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_1_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_min_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [3]),
        .Q(\deskew_enable_gen.min_value_1 [3]),
        .R(SR));
  FDRE \deskew_enable_gen.min_value_1_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.next_min_value_1 ),
        .D(\deskew_enable_gen.next_min_value_0 [4]),
        .Q(\deskew_enable_gen.min_value_1 [4]),
        .R(SR));
  FDRE \deskew_enable_gen.p0_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p0_val0),
        .Q(\deskew_enable_gen.p0_val_reg_n_0_[0] ),
        .R(1'b0));
  (* srl_bus_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.p0_val_reg " *) 
  (* srl_name = "inst/\slave_fpga_gen.axi_chip2chip_slave_phy_inst/slave_sio_phy.axi_chip2chip_phy_calib_inst/deskew_enable_gen.p0_val_reg[2]_srl2 " *) 
  SRL16E \deskew_enable_gen.p0_val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk_ph_out),
        .D(\deskew_enable_gen.p0_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ));
  FDRE \deskew_enable_gen.p0_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p0_val_reg[2]_srl2_n_0 ),
        .Q(p_3_in9_in),
        .R(1'b0));
  FDRE \deskew_enable_gen.p1_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p1_val0),
        .Q(\deskew_enable_gen.p1_val_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.p1_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p1_val_reg_n_0_[0] ),
        .Q(\deskew_enable_gen.p1_val_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.p1_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p1_val_reg_n_0_[1] ),
        .Q(p_2_in8_in),
        .R(1'b0));
  FDRE \deskew_enable_gen.p2_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p2_val0),
        .Q(\deskew_enable_gen.p2_val_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \deskew_enable_gen.p2_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p2_val_reg_n_0_[0] ),
        .Q(p_0_in7_in),
        .R(1'b0));
  CARRY4 \deskew_enable_gen.p3_val_reg0_carry 
       (.CI(1'b0),
        .CO({\deskew_enable_gen.p3_val_reg0_carry_n_0 ,\deskew_enable_gen.p3_val_reg0_carry_n_1 ,\deskew_enable_gen.p3_val_reg0_carry_n_2 ,\deskew_enable_gen.p3_val_reg0_carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg0_carry_O_UNCONNECTED [3:0]),
        .S(\deskew_enable_gen.p3_val_reg0_carry__0_0 ));
  CARRY4 \deskew_enable_gen.p3_val_reg0_carry__0 
       (.CI(\deskew_enable_gen.p3_val_reg0_carry_n_0 ),
        .CO({\deskew_enable_gen.p3_val_reg0_carry__0_n_0 ,\deskew_enable_gen.p3_val_reg0_carry__0_n_1 ,\deskew_enable_gen.p3_val_reg0_carry__0_n_2 ,\deskew_enable_gen.p3_val_reg0_carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg0_carry__0_O_UNCONNECTED [3:0]),
        .S(\deskew_enable_gen.p3_val_reg[0]_1 ));
  CARRY4 \deskew_enable_gen.p3_val_reg0_carry__1 
       (.CI(\deskew_enable_gen.p3_val_reg0_carry__0_n_0 ),
        .CO({\deskew_enable_gen.p3_val_reg0 ,\deskew_enable_gen.p3_val_reg0_carry__1_n_1 ,\deskew_enable_gen.p3_val_reg0_carry__1_n_2 ,\deskew_enable_gen.p3_val_reg0_carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_deskew_enable_gen.p3_val_reg0_carry__1_O_UNCONNECTED [3:0]),
        .S({\deskew_enable_gen.p3_val_reg0_carry__1_i_1_n_0 ,\deskew_enable_gen.p3_val_reg[0]_2 }));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFF7F)) 
    \deskew_enable_gen.p3_val_reg0_carry__1_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [33]),
        .O(\deskew_enable_gen.p3_val_reg0_carry__1_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.p3_val_reg0 ),
        .Q(p3_val[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[0]),
        .Q(p3_val[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[1]),
        .Q(p3_val[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \deskew_enable_gen.p3_val_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p3_val[2]),
        .Q(p3_val[3]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h38)) 
    \deskew_enable_gen.pat_count[0]_i_1 
       (.I0(\deskew_enable_gen.state[5]_i_2_n_0 ),
        .I1(\deskew_enable_gen.pat_count[2]_i_2_n_0 ),
        .I2(pat_count[0]),
        .O(\deskew_enable_gen.pat_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'h2F80)) 
    \deskew_enable_gen.pat_count[1]_i_1 
       (.I0(\deskew_enable_gen.state[5]_i_2_n_0 ),
        .I1(pat_count[0]),
        .I2(\deskew_enable_gen.pat_count[2]_i_2_n_0 ),
        .I3(pat_count[1]),
        .O(\deskew_enable_gen.pat_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT5 #(
    .INIT(32'h2AFF8000)) 
    \deskew_enable_gen.pat_count[2]_i_1 
       (.I0(\deskew_enable_gen.state[5]_i_2_n_0 ),
        .I1(pat_count[0]),
        .I2(pat_count[1]),
        .I3(\deskew_enable_gen.pat_count[2]_i_2_n_0 ),
        .I4(pat_count[2]),
        .O(\deskew_enable_gen.pat_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \deskew_enable_gen.pat_count[2]_i_2 
       (.I0(\deskew_enable_gen.pat_count[2]_i_3_n_0 ),
        .I1(\deskew_enable_gen.state [0]),
        .I2(\deskew_enable_gen.state [3]),
        .I3(\deskew_enable_gen.count[2]_i_6_n_0 ),
        .I4(\deskew_enable_gen.pat_count[2]_i_4_n_0 ),
        .O(\deskew_enable_gen.pat_count[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000002800)) 
    \deskew_enable_gen.pat_count[2]_i_3 
       (.I0(\deskew_enable_gen.count[2]_i_6_n_0 ),
        .I1(\deskew_enable_gen.state [1]),
        .I2(\deskew_enable_gen.state [0]),
        .I3(\deskew_enable_gen.count[2]_i_5_n_0 ),
        .I4(\deskew_enable_gen.state [9]),
        .I5(\deskew_enable_gen.state [4]),
        .O(\deskew_enable_gen.pat_count[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'h0112)) 
    \deskew_enable_gen.pat_count[2]_i_4 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.state [1]),
        .I2(\deskew_enable_gen.state [4]),
        .I3(\deskew_enable_gen.state [9]),
        .O(\deskew_enable_gen.pat_count[2]_i_4_n_0 ));
  FDRE \deskew_enable_gen.pat_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[0]_i_1_n_0 ),
        .Q(pat_count[0]),
        .R(SR));
  FDRE \deskew_enable_gen.pat_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[1]_i_1_n_0 ),
        .Q(pat_count[1]),
        .R(SR));
  FDRE \deskew_enable_gen.pat_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.pat_count[2]_i_1_n_0 ),
        .Q(pat_count[2]),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \deskew_enable_gen.state[0]_i_1 
       (.I0(\deskew_enable_gen.state [0]),
        .I1(calib_start),
        .O(\deskew_enable_gen.next_state [0]));
  LUT6 #(
    .INIT(64'h70FF707070707070)) 
    \deskew_enable_gen.state[10]_i_1 
       (.I0(\deskew_enable_gen.dout_p0_val ),
        .I1(\deskew_enable_gen.state[10]_i_2_n_0 ),
        .I2(\deskew_enable_gen.state [10]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I4(\deskew_enable_gen.state[10]_i_4_n_0 ),
        .I5(\deskew_enable_gen.state [7]),
        .O(\deskew_enable_gen.next_state [10]));
  LUT3 #(
    .INIT(8'h17)) 
    \deskew_enable_gen.state[10]_i_2 
       (.I0(\deskew_enable_gen.grp_p1_val ),
        .I1(\deskew_enable_gen.grp_p0_val ),
        .I2(\deskew_enable_gen.grp_p3_val ),
        .O(\deskew_enable_gen.state[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \deskew_enable_gen.state[10]_i_3 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\deskew_enable_gen.grp_count_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \deskew_enable_gen.state[10]_i_4 
       (.I0(\deskew_enable_gen.step_count [1]),
        .I1(\deskew_enable_gen.step_count [2]),
        .I2(\deskew_enable_gen.step_count [0]),
        .O(\deskew_enable_gen.state[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0116000055575555)) 
    \deskew_enable_gen.state[11]_i_1 
       (.I0(\deskew_enable_gen.state [0]),
        .I1(\deskew_enable_gen.state [1]),
        .I2(\deskew_enable_gen.state [2]),
        .I3(\deskew_enable_gen.state [3]),
        .I4(\deskew_enable_gen.state_reg[10]_0 ),
        .I5(\deskew_enable_gen.state[11]_i_4_n_0 ),
        .O(\deskew_enable_gen.state[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FEE900000000)) 
    \deskew_enable_gen.state[11]_i_10 
       (.I0(\deskew_enable_gen.state [9]),
        .I1(\deskew_enable_gen.state [8]),
        .I2(\deskew_enable_gen.state [10]),
        .I3(\deskew_enable_gen.state [11]),
        .I4(\deskew_enable_gen.state [7]),
        .I5(\deskew_enable_gen.state[11]_i_8_n_0 ),
        .O(\deskew_enable_gen.state[11]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \deskew_enable_gen.state[11]_i_11 
       (.I0(\deskew_enable_gen.state [9]),
        .I1(\deskew_enable_gen.state [8]),
        .I2(\deskew_enable_gen.state [10]),
        .O(\deskew_enable_gen.state[11]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF8F8F8)) 
    \deskew_enable_gen.state[11]_i_2 
       (.I0(\deskew_enable_gen.state [9]),
        .I1(\deskew_enable_gen.state[11]_i_5_n_0 ),
        .I2(\deskew_enable_gen.state [11]),
        .I3(\deskew_enable_gen.state [7]),
        .I4(\deskew_enable_gen.state[11]_i_6_n_0 ),
        .I5(\deskew_enable_gen.state[11]_i_7_n_0 ),
        .O(\deskew_enable_gen.next_state [11]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.state[11]_i_3 
       (.I0(\deskew_enable_gen.state[11]_i_8_n_0 ),
        .I1(\deskew_enable_gen.state [10]),
        .I2(\deskew_enable_gen.state [8]),
        .I3(\deskew_enable_gen.state [9]),
        .I4(\deskew_enable_gen.state [11]),
        .I5(\deskew_enable_gen.state [7]),
        .O(\deskew_enable_gen.state_reg[10]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \deskew_enable_gen.state[11]_i_4 
       (.I0(\deskew_enable_gen.state[11]_i_9_n_0 ),
        .I1(\deskew_enable_gen.state[11]_i_10_n_0 ),
        .I2(\deskew_enable_gen.state [3]),
        .I3(\deskew_enable_gen.state [2]),
        .I4(\deskew_enable_gen.state [1]),
        .O(\deskew_enable_gen.state[11]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \deskew_enable_gen.state[11]_i_5 
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\deskew_enable_gen.state[11]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \deskew_enable_gen.state[11]_i_6 
       (.I0(\deskew_enable_gen.step_count [0]),
        .I1(\deskew_enable_gen.step_count [1]),
        .I2(\deskew_enable_gen.step_count [2]),
        .O(\deskew_enable_gen.state[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \deskew_enable_gen.state[11]_i_7 
       (.I0(\deskew_enable_gen.grp_p3_val ),
        .I1(\deskew_enable_gen.grp_p1_val ),
        .I2(\deskew_enable_gen.grp_p0_val ),
        .I3(\deskew_enable_gen.state [10]),
        .I4(\deskew_enable_gen.dout_p0_val ),
        .O(\deskew_enable_gen.state[11]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \deskew_enable_gen.state[11]_i_8 
       (.I0(\deskew_enable_gen.state [6]),
        .I1(\deskew_enable_gen.state [4]),
        .I2(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.state[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFEFEF8A)) 
    \deskew_enable_gen.state[11]_i_9 
       (.I0(\deskew_enable_gen.state [7]),
        .I1(\deskew_enable_gen.state [11]),
        .I2(\deskew_enable_gen.state[11]_i_11_n_0 ),
        .I3(\deskew_enable_gen.state [6]),
        .I4(\deskew_enable_gen.state [5]),
        .I5(\deskew_enable_gen.state [4]),
        .O(\deskew_enable_gen.state[11]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF4)) 
    \deskew_enable_gen.state[1]_i_1 
       (.I0(\deskew_enable_gen.state[1]_i_2_n_0 ),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.state[1]_i_3_n_0 ),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state[1]_i_4_n_0 ),
        .O(\deskew_enable_gen.next_state [1]));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \deskew_enable_gen.state[1]_i_2 
       (.I0(\deskew_enable_gen.state[9]_i_5_n_0 ),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .I2(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I3(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I4(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .I5(\deskew_enable_gen.delay_tap_reg[4]_0 [4]),
        .O(\deskew_enable_gen.state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7F007F007F00)) 
    \deskew_enable_gen.state[1]_i_3 
       (.I0(count[1]),
        .I1(count[0]),
        .I2(count[2]),
        .I3(\deskew_enable_gen.state [1]),
        .I4(\deskew_enable_gen.state [0]),
        .I5(calib_start),
        .O(\deskew_enable_gen.state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
    \deskew_enable_gen.state[1]_i_4 
       (.I0(\deskew_enable_gen.state [9]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\deskew_enable_gen.grp_count_mul [4]),
        .I4(\deskew_enable_gen.grp_count_mul [6]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.state[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \deskew_enable_gen.state[2]_i_1 
       (.I0(\deskew_enable_gen.state [1]),
        .I1(count[1]),
        .I2(count[0]),
        .I3(count[2]),
        .I4(\deskew_enable_gen.state[2]_i_2_n_0 ),
        .O(\deskew_enable_gen.next_state [2]));
  LUT6 #(
    .INIT(64'h0222222222222222)) 
    \deskew_enable_gen.state[2]_i_2 
       (.I0(\deskew_enable_gen.state [2]),
        .I1(\deskew_enable_gen.f3_val_reg[0]_0 ),
        .I2(p3_val[0]),
        .I3(p_0_in7_in),
        .I4(p_3_in9_in),
        .I5(p_2_in8_in),
        .O(\deskew_enable_gen.state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \deskew_enable_gen.state[3]_i_1 
       (.I0(\deskew_enable_gen.state[3]_i_2_n_0 ),
        .I1(\deskew_enable_gen.state [3]),
        .I2(\deskew_enable_gen.state[3]_i_3_n_0 ),
        .I3(\deskew_enable_gen.state [2]),
        .I4(\deskew_enable_gen.state[3]_i_4_n_0 ),
        .O(\deskew_enable_gen.next_state [3]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h2AAA)) 
    \deskew_enable_gen.state[3]_i_2 
       (.I0(\deskew_enable_gen.state[5]_i_2_n_0 ),
        .I1(pat_count[2]),
        .I2(pat_count[0]),
        .I3(pat_count[1]),
        .O(\deskew_enable_gen.state[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \deskew_enable_gen.state[3]_i_3 
       (.I0(count[2]),
        .I1(count[1]),
        .I2(count[0]),
        .O(\deskew_enable_gen.state[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00007FFF)) 
    \deskew_enable_gen.state[3]_i_4 
       (.I0(p_2_in8_in),
        .I1(p_3_in9_in),
        .I2(p_0_in7_in),
        .I3(p3_val[0]),
        .I4(\deskew_enable_gen.f3_val_reg[0]_0 ),
        .O(\deskew_enable_gen.state[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \deskew_enable_gen.state[4]_i_1 
       (.I0(\deskew_enable_gen.state [3]),
        .I1(count[0]),
        .I2(count[1]),
        .I3(count[2]),
        .O(\deskew_enable_gen.next_state [4]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \deskew_enable_gen.state[5]_i_1 
       (.I0(pat_count[2]),
        .I1(pat_count[0]),
        .I2(pat_count[1]),
        .I3(\deskew_enable_gen.state[5]_i_2_n_0 ),
        .O(\deskew_enable_gen.next_state [5]));
  LUT4 #(
    .INIT(16'hE200)) 
    \deskew_enable_gen.state[5]_i_2 
       (.I0(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I1(flip_type),
        .I2(\deskew_enable_gen.f3_val_reg[0]_0 ),
        .I3(\deskew_enable_gen.state [4]),
        .O(\deskew_enable_gen.state[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h008844FC008844CC)) 
    \deskew_enable_gen.state[6]_i_1 
       (.I0(flip_type),
        .I1(\deskew_enable_gen.state [4]),
        .I2(\deskew_enable_gen.state [2]),
        .I3(\deskew_enable_gen.f3_val_reg[0]_0 ),
        .I4(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I5(\deskew_enable_gen.state[6]_i_4_n_0 ),
        .O(\deskew_enable_gen.next_state [6]));
  LUT4 #(
    .INIT(16'h8000)) 
    \deskew_enable_gen.state[6]_i_2 
       (.I0(f3_val[0]),
        .I1(p_0_in4_in),
        .I2(p_3_in),
        .I3(p_2_in5_in),
        .O(\deskew_enable_gen.f3_val_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \deskew_enable_gen.state[6]_i_3 
       (.I0(p3_val[0]),
        .I1(p_0_in7_in),
        .I2(p_3_in9_in),
        .I3(p_2_in8_in),
        .O(\deskew_enable_gen.p3_val_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \deskew_enable_gen.state[6]_i_4 
       (.I0(count[1]),
        .I1(count[0]),
        .I2(count[2]),
        .O(\deskew_enable_gen.state[6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \deskew_enable_gen.state[7]_i_1 
       (.I0(\deskew_enable_gen.state [5]),
        .I1(\deskew_enable_gen.state [6]),
        .O(\deskew_enable_gen.next_state [7]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \deskew_enable_gen.state[8]_i_1 
       (.I0(\deskew_enable_gen.state[8]_i_2_n_0 ),
        .I1(\deskew_enable_gen.state [7]),
        .I2(\deskew_enable_gen.step_count [2]),
        .I3(\deskew_enable_gen.step_count [1]),
        .O(\deskew_enable_gen.next_state [8]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \deskew_enable_gen.state[8]_i_2 
       (.I0(\deskew_enable_gen.delay_tap_reg[4]_0 [4]),
        .I1(\deskew_enable_gen.delay_tap_reg[4]_0 [3]),
        .I2(\deskew_enable_gen.delay_tap_reg[4]_0 [0]),
        .I3(\deskew_enable_gen.delay_tap_reg[4]_0 [1]),
        .I4(\deskew_enable_gen.delay_tap_reg[4]_0 [2]),
        .O(\deskew_enable_gen.state[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0016FFFF00160016)) 
    \deskew_enable_gen.state[9]_i_1 
       (.I0(\deskew_enable_gen.grp_p3_val ),
        .I1(\deskew_enable_gen.grp_p1_val ),
        .I2(\deskew_enable_gen.grp_p0_val ),
        .I3(\deskew_enable_gen.state[9]_i_2_n_0 ),
        .I4(\deskew_enable_gen.state[9]_i_3_n_0 ),
        .I5(\deskew_enable_gen.state [7]),
        .O(\deskew_enable_gen.next_state [9]));
  LUT2 #(
    .INIT(4'h7)) 
    \deskew_enable_gen.state[9]_i_2 
       (.I0(\deskew_enable_gen.dout_p0_val ),
        .I1(\deskew_enable_gen.state [10]),
        .O(\deskew_enable_gen.state[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \deskew_enable_gen.state[9]_i_3 
       (.I0(\deskew_enable_gen.step_count [0]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.state[9]_i_4_n_0 ),
        .I3(\deskew_enable_gen.state[9]_i_5_n_0 ),
        .I4(\deskew_enable_gen.grp_count_mul [4]),
        .I5(\deskew_enable_gen.grp_count_mul [5]),
        .O(\deskew_enable_gen.state[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \deskew_enable_gen.state[9]_i_4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\deskew_enable_gen.state[9]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \deskew_enable_gen.state[9]_i_5 
       (.I0(\deskew_enable_gen.step_count [2]),
        .I1(\deskew_enable_gen.step_count [1]),
        .O(\deskew_enable_gen.state[9]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDSE \deskew_enable_gen.state_reg[0] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [0]),
        .Q(\deskew_enable_gen.state [0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[10] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [10]),
        .Q(\deskew_enable_gen.state [10]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[11] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [11]),
        .Q(\deskew_enable_gen.state [11]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[1] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [1]),
        .Q(\deskew_enable_gen.state [1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[2] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [2]),
        .Q(\deskew_enable_gen.state [2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[3] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [3]),
        .Q(\deskew_enable_gen.state [3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[4] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [4]),
        .Q(\deskew_enable_gen.state [4]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[5] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [5]),
        .Q(\deskew_enable_gen.state [5]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[6] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [6]),
        .Q(\deskew_enable_gen.state [6]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[7] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [7]),
        .Q(\deskew_enable_gen.state [7]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[8] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [8]),
        .Q(\deskew_enable_gen.state [8]),
        .R(SR));
  (* FSM_ENCODED_STATES = "COMP_MID:000100000000,DATA_WAIT:000000001000,NEXT_STEP:000010000000,DET_START:000000000100,DONE:100000000000,WAIT:000000000010,FAIL_STEP:000001000000,NEXT_GRP:001000000000,DATA_CHECK:000000010000,WAIT_P0:010000000000,IDLE:000000000001,PASS_STEP:000000100000" *) 
  FDRE \deskew_enable_gen.state_reg[9] 
       (.C(clk_ph_out),
        .CE(\deskew_enable_gen.state[11]_i_1_n_0 ),
        .D(\deskew_enable_gen.next_state [9]),
        .Q(\deskew_enable_gen.state [9]),
        .R(SR));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \deskew_enable_gen.step_count[0]_i_1 
       (.I0(\deskew_enable_gen.step_count[2]_i_3_n_0 ),
        .I1(\deskew_enable_gen.step_count[0]_i_2_n_0 ),
        .I2(\deskew_enable_gen.step_count[2]_i_4_n_0 ),
        .I3(\deskew_enable_gen.step_count [0]),
        .O(\deskew_enable_gen.step_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000002E222222)) 
    \deskew_enable_gen.step_count[0]_i_2 
       (.I0(\deskew_enable_gen.state [10]),
        .I1(\deskew_enable_gen.state [6]),
        .I2(\deskew_enable_gen.step_count [0]),
        .I3(\deskew_enable_gen.step_count [2]),
        .I4(\deskew_enable_gen.step_count [1]),
        .I5(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.step_count[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBAFFBA00)) 
    \deskew_enable_gen.step_count[1]_i_1 
       (.I0(\deskew_enable_gen.step_count[1]_i_2_n_0 ),
        .I1(\deskew_enable_gen.state [5]),
        .I2(\deskew_enable_gen.step_count[1]_i_3_n_0 ),
        .I3(\deskew_enable_gen.step_count[2]_i_4_n_0 ),
        .I4(\deskew_enable_gen.step_count [1]),
        .O(\deskew_enable_gen.step_count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80C04CC08CC040C0)) 
    \deskew_enable_gen.step_count[1]_i_2 
       (.I0(\deskew_enable_gen.min_flip_1 ),
        .I1(\deskew_enable_gen.state [5]),
        .I2(\deskew_enable_gen.step_count [1]),
        .I3(\deskew_enable_gen.step_count [0]),
        .I4(flip_type),
        .I5(\deskew_enable_gen.min_flip_0 ),
        .O(\deskew_enable_gen.step_count[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00FFFF0075757575)) 
    \deskew_enable_gen.step_count[1]_i_3 
       (.I0(\deskew_enable_gen.state [9]),
        .I1(\deskew_enable_gen.dout_p0_val0_carry__1_i_5_n_0 ),
        .I2(\deskew_enable_gen.grp_count_mul [5]),
        .I3(\deskew_enable_gen.step_count [0]),
        .I4(\deskew_enable_gen.step_count [1]),
        .I5(\deskew_enable_gen.state [6]),
        .O(\deskew_enable_gen.step_count[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \deskew_enable_gen.step_count[2]_i_1 
       (.I0(\deskew_enable_gen.step_count[2]_i_2_n_0 ),
        .I1(\deskew_enable_gen.step_count[2]_i_3_n_0 ),
        .I2(\deskew_enable_gen.step_count[2]_i_4_n_0 ),
        .I3(\deskew_enable_gen.step_count [2]),
        .O(\deskew_enable_gen.step_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF78FF78FF00FFFF)) 
    \deskew_enable_gen.step_count[2]_i_2 
       (.I0(\deskew_enable_gen.step_count [0]),
        .I1(\deskew_enable_gen.step_count [1]),
        .I2(\deskew_enable_gen.step_count [2]),
        .I3(\deskew_enable_gen.state [5]),
        .I4(\deskew_enable_gen.state[1]_i_4_n_0 ),
        .I5(\deskew_enable_gen.state [6]),
        .O(\deskew_enable_gen.step_count[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h82AAAAAA)) 
    \deskew_enable_gen.step_count[2]_i_3 
       (.I0(\deskew_enable_gen.state [5]),
        .I1(flip_type),
        .I2(\deskew_enable_gen.min_flip_1 ),
        .I3(\deskew_enable_gen.step_count [0]),
        .I4(\deskew_enable_gen.step_count [1]),
        .O(\deskew_enable_gen.step_count[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \deskew_enable_gen.step_count[2]_i_4 
       (.I0(\deskew_enable_gen.step_count[2]_i_5_n_0 ),
        .I1(\deskew_enable_gen.step_count[2]_i_6_n_0 ),
        .I2(\deskew_enable_gen.state [7]),
        .I3(\deskew_enable_gen.state [0]),
        .I4(\deskew_enable_gen.state [11]),
        .I5(\deskew_enable_gen.step_count[2]_i_7_n_0 ),
        .O(\deskew_enable_gen.step_count[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0003032E)) 
    \deskew_enable_gen.step_count[2]_i_5 
       (.I0(\deskew_enable_gen.state[11]_i_7_n_0 ),
        .I1(\deskew_enable_gen.state [6]),
        .I2(\deskew_enable_gen.state [10]),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state [9]),
        .I5(\deskew_enable_gen.state [5]),
        .O(\deskew_enable_gen.step_count[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \deskew_enable_gen.step_count[2]_i_6 
       (.I0(\deskew_enable_gen.state [1]),
        .I1(\deskew_enable_gen.state [2]),
        .I2(\deskew_enable_gen.state [3]),
        .I3(\deskew_enable_gen.state [4]),
        .O(\deskew_enable_gen.step_count[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \deskew_enable_gen.step_count[2]_i_7 
       (.I0(\deskew_enable_gen.state [5]),
        .I1(\deskew_enable_gen.step_count [2]),
        .I2(\deskew_enable_gen.state [9]),
        .I3(\deskew_enable_gen.state [8]),
        .I4(\deskew_enable_gen.state [6]),
        .I5(\deskew_enable_gen.state [10]),
        .O(\deskew_enable_gen.step_count[2]_i_7_n_0 ));
  FDRE \deskew_enable_gen.step_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[0]_i_1_n_0 ),
        .Q(\deskew_enable_gen.step_count [0]),
        .R(SR));
  FDRE \deskew_enable_gen.step_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[1]_i_1_n_0 ),
        .Q(\deskew_enable_gen.step_count [1]),
        .R(SR));
  FDRE \deskew_enable_gen.step_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\deskew_enable_gen.step_count[2]_i_1_n_0 ),
        .Q(\deskew_enable_gen.step_count [2]),
        .R(SR));
  CARRY4 f0_val0_carry
       (.CI(1'b0),
        .CO({f0_val0_carry_n_0,f0_val0_carry_n_1,f0_val0_carry_n_2,f0_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f0_val0_carry_O_UNCONNECTED[3:0]),
        .S({f0_val0_carry__0_0,f0_val0_carry_i_2_n_0,f0_val0_carry_i_3_n_0,f0_val0_carry_i_4_n_0}));
  CARRY4 f0_val0_carry__0
       (.CI(f0_val0_carry_n_0),
        .CO({f0_val0_carry__0_n_0,f0_val0_carry__0_n_1,f0_val0_carry__0_n_2,f0_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f0_val0_carry__0_O_UNCONNECTED[3:0]),
        .S({\deskew_enable_gen.f0_val_reg[0]_0 ,f0_val0_carry__0_i_2_n_0,f0_val0_carry__0_i_3_n_0,f0_val0_carry__0_i_4_n_0}));
  LUT5 #(
    .INIT(32'h00D0DDDD)) 
    f0_val0_carry__0_i_2
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(unalign_data[20]),
        .I2(unalign_data[18]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .I4(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(f0_val0_carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'h005D5D5D)) 
    f0_val0_carry__0_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I1(unalign_data[16]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I4(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .O(f0_val0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h40FF)) 
    f0_val0_carry__0_i_4
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .I1(unalign_data[12]),
        .I2(unalign_data[14]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(f0_val0_carry__0_i_4_n_0));
  CARRY4 f0_val0_carry__1
       (.CI(f0_val0_carry__0_n_0),
        .CO({f0_val0,f0_val0_carry__1_n_1,f0_val0_carry__1_n_2,f0_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f0_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({f0_val0_carry__1_i_1_n_0,f0_val0_carry__1_i_2_n_0,f0_val0_carry__1_i_3_n_0,f0_val0_carry__1_i_4_n_0}));
  LUT6 #(
    .INIT(64'hFFFEFF7FFFFFFFFF)) 
    f0_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .O(f0_val0_carry__1_i_1_n_0));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    f0_val0_carry__1_i_2
       (.I0(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I1(unalign_data[32]),
        .I2(unalign_data[30]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(f0_val0_carry__1_i_2_n_0));
  LUT5 #(
    .INIT(32'h005D5D5D)) 
    f0_val0_carry__1_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I1(unalign_data[28]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I4(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .O(f0_val0_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h20FF)) 
    f0_val0_carry__1_i_4
       (.I0(unalign_data[24]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .I2(unalign_data[26]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(f0_val0_carry__1_i_4_n_0));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    f0_val0_carry_i_2
       (.I0(unalign_data[8]),
        .I1(unalign_data[6]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_2 ),
        .I5(Q[0]),
        .O(f0_val0_carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h005D5D5D)) 
    f0_val0_carry_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I1(unalign_data[4]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I4(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .O(f0_val0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h40FF)) 
    f0_val0_carry_i_4
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .I1(unalign_data[0]),
        .I2(unalign_data[2]),
        .I3(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(f0_val0_carry_i_4_n_0));
  CARRY4 f1_val0_carry
       (.CI(1'b0),
        .CO({f1_val0_carry_n_0,f1_val0_carry_n_1,f1_val0_carry_n_2,f1_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f1_val0_carry_O_UNCONNECTED[3:0]),
        .S({f1_val0_carry_i_1_n_0,f1_val0_carry_i_2_n_0,f1_val0_carry_i_3_n_0,f1_val0_carry_i_4_n_0}));
  CARRY4 f1_val0_carry__0
       (.CI(f1_val0_carry_n_0),
        .CO({f1_val0_carry__0_n_0,f1_val0_carry__0_n_1,f1_val0_carry__0_n_2,f1_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f1_val0_carry__0_O_UNCONNECTED[3:0]),
        .S({f1_val0_carry__0_i_1_n_0,f1_val0_carry__0_i_2_n_0,f1_val0_carry__0_i_3_n_0,f1_val0_carry__0_i_4_n_0}));
  LUT4 #(
    .INIT(16'h20FF)) 
    f1_val0_carry__0_i_1
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [1]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [22]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [20]),
        .I3(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .O(f1_val0_carry__0_i_1_n_0));
  LUT5 #(
    .INIT(32'h00707777)) 
    f1_val0_carry__0_i_2
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(unalign_data[20]),
        .I2(unalign_data[18]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .I4(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(f1_val0_carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'h00737373)) 
    f1_val0_carry__0_i_3
       (.I0(unalign_data[16]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(f1_val0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h7333)) 
    f1_val0_carry__0_i_4
       (.I0(unalign_data[12]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .I3(unalign_data[14]),
        .O(f1_val0_carry__0_i_4_n_0));
  CARRY4 f1_val0_carry__1
       (.CI(f1_val0_carry__0_n_0),
        .CO({f1_val0,f1_val0_carry__1_n_1,f1_val0_carry__1_n_2,f1_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f1_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({f1_val0_carry__1_i_1_n_0,f1_val0_carry__1_i_2_n_0,f1_val0_carry__1_i_3_n_0,f1_val0_carry__1_i_4_n_0}));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFF7F)) 
    f1_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .O(f1_val0_carry__1_i_1_n_0));
  LUT5 #(
    .INIT(32'h00D0DDDD)) 
    f1_val0_carry__1_i_2
       (.I0(unalign_data[32]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I2(unalign_data[30]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(f1_val0_carry__1_i_2_n_0));
  LUT5 #(
    .INIT(32'h00737373)) 
    f1_val0_carry__1_i_3
       (.I0(unalign_data[28]),
        .I1(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(f1_val0_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h7333)) 
    f1_val0_carry__1_i_4
       (.I0(unalign_data[24]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .I3(unalign_data[26]),
        .O(f1_val0_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h20FF)) 
    f1_val0_carry_i_1
       (.I0(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [10]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [8]),
        .I3(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .O(f1_val0_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'hFF0CFFFF55FFFFFF)) 
    f1_val0_carry_i_2
       (.I0(unalign_data[8]),
        .I1(unalign_data[6]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_2 ),
        .I5(Q[0]),
        .O(f1_val0_carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h00737373)) 
    f1_val0_carry_i_3
       (.I0(unalign_data[4]),
        .I1(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(f1_val0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h7333)) 
    f1_val0_carry_i_4
       (.I0(unalign_data[0]),
        .I1(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .I3(unalign_data[2]),
        .O(f1_val0_carry_i_4_n_0));
  CARRY4 f2_val0_carry
       (.CI(1'b0),
        .CO({f2_val0_carry_n_0,f2_val0_carry_n_1,f2_val0_carry_n_2,f2_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f2_val0_carry_O_UNCONNECTED[3:0]),
        .S({f2_val0_carry_i_1_n_0,f2_val0_carry_i_2_n_0,f2_val0_carry_i_3_n_0,f2_val0_carry_i_4_n_0}));
  CARRY4 f2_val0_carry__0
       (.CI(f2_val0_carry_n_0),
        .CO({f2_val0_carry__0_n_0,f2_val0_carry__0_n_1,f2_val0_carry__0_n_2,f2_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f2_val0_carry__0_O_UNCONNECTED[3:0]),
        .S({S,f2_val0_carry__0_i_2_n_0,f2_val0_carry__0_i_3_n_0,f2_val0_carry__0_i_4_n_0}));
  LUT5 #(
    .INIT(32'h00D0DDDD)) 
    f2_val0_carry__0_i_2
       (.I0(\deskew_enable_gen.grp_count_reg[1]_2 ),
        .I1(unalign_data[20]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [18]),
        .I3(unalign_data[18]),
        .I4(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .O(f2_val0_carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    f2_val0_carry__0_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[1]_1 ),
        .I1(unalign_data[16]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [16]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [14]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .O(f2_val0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h0F4F)) 
    f2_val0_carry__0_i_4
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [12]),
        .I1(unalign_data[12]),
        .I2(\deskew_enable_gen.grp_count_reg[2]_0 ),
        .I3(unalign_data[14]),
        .O(f2_val0_carry__0_i_4_n_0));
  CARRY4 f2_val0_carry__1
       (.CI(f2_val0_carry__0_n_0),
        .CO({f2_val0,f2_val0_carry__1_n_1,f2_val0_carry__1_n_2,f2_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_f2_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({f2_val0_carry__1_i_1_n_0,f2_val0_carry__1_i_2_n_0,f2_val0_carry__1_i_3_n_0,f2_val0_carry__1_i_4_n_0}));
  LUT6 #(
    .INIT(64'hFFFEFF7FFFFFFFFF)) 
    f2_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [32]),
        .O(f2_val0_carry__1_i_1_n_0));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    f2_val0_carry__1_i_2
       (.I0(\deskew_enable_gen.grp_count_reg[1]_3 ),
        .I1(unalign_data[32]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [30]),
        .I3(unalign_data[30]),
        .I4(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .O(f2_val0_carry__1_i_2_n_0));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    f2_val0_carry__1_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[2]_1 ),
        .I1(unalign_data[28]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [28]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [26]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .O(f2_val0_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h0F2F)) 
    f2_val0_carry__1_i_4
       (.I0(unalign_data[24]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [24]),
        .I2(\deskew_enable_gen.grp_count_reg[3]_1 ),
        .I3(unalign_data[26]),
        .O(f2_val0_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h5575)) 
    f2_val0_carry_i_1
       (.I0(\deskew_enable_gen.grp_count_reg[2]_2 ),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [8]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [10]),
        .I3(\ddr_data_gen.data_dly_reg[23]_0 [0]),
        .O(f2_val0_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    f2_val0_carry_i_2
       (.I0(unalign_data[8]),
        .I1(\ddr_data_gen.data_dly_reg[33]_0 [6]),
        .I2(unalign_data[6]),
        .I3(Q[1]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_2 ),
        .I5(Q[0]),
        .O(f2_val0_carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    f2_val0_carry_i_3
       (.I0(\deskew_enable_gen.grp_count_reg[1]_0 ),
        .I1(unalign_data[4]),
        .I2(\ddr_data_gen.data_dly_reg[33]_0 [4]),
        .I3(\ddr_data_gen.data_dly_reg[33]_0 [2]),
        .I4(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .O(f2_val0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h0F4F)) 
    f2_val0_carry_i_4
       (.I0(\ddr_data_gen.data_dly_reg[33]_0 [0]),
        .I1(unalign_data[0]),
        .I2(\deskew_enable_gen.grp_count_reg[3]_0 ),
        .I3(unalign_data[2]),
        .O(f2_val0_carry_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'h01)) 
    f2_val0_carry_i_5
       (.I0(\deskew_enable_gen.grp_count_mul [5]),
        .I1(\deskew_enable_gen.grp_count_mul [6]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .O(\deskew_enable_gen.grp_count_reg[3]_2 ));
  CARRY4 p0_val0_carry
       (.CI(1'b0),
        .CO({p0_val0_carry_n_0,p0_val0_carry_n_1,p0_val0_carry_n_2,p0_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p0_val0_carry_O_UNCONNECTED[3:0]),
        .S(p0_val0_carry__0_0));
  CARRY4 p0_val0_carry__0
       (.CI(p0_val0_carry_n_0),
        .CO({p0_val0_carry__0_n_0,p0_val0_carry__0_n_1,p0_val0_carry__0_n_2,p0_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p0_val0_carry__0_O_UNCONNECTED[3:0]),
        .S(\deskew_enable_gen.p0_val_reg[0]_0 ));
  CARRY4 p0_val0_carry__1
       (.CI(p0_val0_carry__0_n_0),
        .CO({p0_val0,p0_val0_carry__1_n_1,p0_val0_carry__1_n_2,p0_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p0_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({p0_val0_carry__1_i_1_n_0,\deskew_enable_gen.p0_val_reg[0]_1 }));
  LUT6 #(
    .INIT(64'hFFFEFF7FFFFFFFFF)) 
    p0_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [33]),
        .O(p0_val0_carry__1_i_1_n_0));
  CARRY4 p1_val0_carry
       (.CI(1'b0),
        .CO({p1_val0_carry_n_0,p1_val0_carry_n_1,p1_val0_carry_n_2,p1_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p1_val0_carry_O_UNCONNECTED[3:0]),
        .S(p1_val0_carry__0_0));
  CARRY4 p1_val0_carry__0
       (.CI(p1_val0_carry_n_0),
        .CO({p1_val0_carry__0_n_0,p1_val0_carry__0_n_1,p1_val0_carry__0_n_2,p1_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p1_val0_carry__0_O_UNCONNECTED[3:0]),
        .S(\deskew_enable_gen.p1_val_reg[0]_0 ));
  CARRY4 p1_val0_carry__1
       (.CI(p1_val0_carry__0_n_0),
        .CO({p1_val0,p1_val0_carry__1_n_1,p1_val0_carry__1_n_2,p1_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p1_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({p1_val0_carry__1_i_1_n_0,\deskew_enable_gen.p1_val_reg[0]_1 }));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFF7F)) 
    p1_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [33]),
        .O(p1_val0_carry__1_i_1_n_0));
  CARRY4 p2_val0_carry
       (.CI(1'b0),
        .CO({p2_val0_carry_n_0,p2_val0_carry_n_1,p2_val0_carry_n_2,p2_val0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p2_val0_carry_O_UNCONNECTED[3:0]),
        .S(p2_val0_carry__0_0));
  CARRY4 p2_val0_carry__0
       (.CI(p2_val0_carry_n_0),
        .CO({p2_val0_carry__0_n_0,p2_val0_carry__0_n_1,p2_val0_carry__0_n_2,p2_val0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p2_val0_carry__0_O_UNCONNECTED[3:0]),
        .S(\deskew_enable_gen.p2_val_reg[0]_0 ));
  CARRY4 p2_val0_carry__1
       (.CI(p2_val0_carry__0_n_0),
        .CO({p2_val0,p2_val0_carry__1_n_1,p2_val0_carry__1_n_2,p2_val0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_p2_val0_carry__1_O_UNCONNECTED[3:0]),
        .S({p2_val0_carry__1_i_1_n_0,\deskew_enable_gen.p2_val_reg[0]_1 }));
  LUT6 #(
    .INIT(64'hFFFEFF7FFFFFFFFF)) 
    p2_val0_carry__1_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\deskew_enable_gen.grp_count_mul [4]),
        .I3(\deskew_enable_gen.grp_count_mul [6]),
        .I4(\deskew_enable_gen.grp_count_mul [5]),
        .I5(\ddr_data_gen.data_dly_reg[33]_0 [33]),
        .O(p2_val0_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_1 
       (.I0(\sio_slav_calib_fsm.master_ack_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_ack_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_ack_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_ack_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_ack_i_6_n_0 ),
        .I5(\sio_slav_calib_fsm.master_ack_i_7_n_0 ),
        .O(\deskew_enable_gen.data_out_reg[24]_1 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_2 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [24]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [25]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [22]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [23]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [27]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [26]),
        .O(\sio_slav_calib_fsm.master_ack_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_3 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [30]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [31]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [28]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [29]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [33]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [32]),
        .O(\sio_slav_calib_fsm.master_ack_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_4 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [18]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [19]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [16]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [17]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [21]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [20]),
        .O(\sio_slav_calib_fsm.master_ack_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_5 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [12]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [13]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [10]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [11]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [15]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [14]),
        .O(\sio_slav_calib_fsm.master_ack_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \sio_slav_calib_fsm.master_ack_i_6 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [1]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [0]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [3]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [2]),
        .O(\sio_slav_calib_fsm.master_ack_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_ack_i_7 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [6]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [7]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [4]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [5]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [9]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [8]),
        .O(\sio_slav_calib_fsm.master_ack_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_init_i_1 
       (.I0(\sio_slav_calib_fsm.master_init_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_init_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_init_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_init_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_init_i_6_n_0 ),
        .I5(\sio_slav_calib_fsm.master_init_i_7_n_0 ),
        .O(\deskew_enable_gen.data_out_reg[24]_2 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_2 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [24]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [25]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [22]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [23]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [27]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [26]),
        .O(\sio_slav_calib_fsm.master_init_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_3 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [30]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [31]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [28]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [29]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [33]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [32]),
        .O(\sio_slav_calib_fsm.master_init_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_4 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [18]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [19]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [16]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [17]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [21]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [20]),
        .O(\sio_slav_calib_fsm.master_init_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_5 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [12]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [13]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [10]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [11]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [15]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [14]),
        .O(\sio_slav_calib_fsm.master_init_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \sio_slav_calib_fsm.master_init_i_6 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [1]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [0]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [3]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [2]),
        .O(\sio_slav_calib_fsm.master_init_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sio_slav_calib_fsm.master_init_i_7 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [6]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [7]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [4]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [5]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [9]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [8]),
        .O(\sio_slav_calib_fsm.master_init_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sio_slav_calib_fsm.master_nack_i_1 
       (.I0(\sio_slav_calib_fsm.master_nack_i_2_n_0 ),
        .I1(\sio_slav_calib_fsm.master_nack_i_3_n_0 ),
        .I2(\sio_slav_calib_fsm.master_nack_i_4_n_0 ),
        .I3(\sio_slav_calib_fsm.master_nack_i_5_n_0 ),
        .I4(\sio_slav_calib_fsm.master_nack_i_6_n_0 ),
        .I5(\sio_slav_calib_fsm.master_nack_i_7_n_0 ),
        .O(\deskew_enable_gen.data_out_reg[24]_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \sio_slav_calib_fsm.master_nack_i_2 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [24]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [25]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [22]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [23]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [27]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [26]),
        .O(\sio_slav_calib_fsm.master_nack_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_3 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [30]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [31]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [28]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [29]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [33]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [32]),
        .O(\sio_slav_calib_fsm.master_nack_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_4 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [18]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [19]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [16]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [17]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [21]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [20]),
        .O(\sio_slav_calib_fsm.master_nack_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \sio_slav_calib_fsm.master_nack_i_5 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [12]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [13]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [10]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [11]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [15]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [14]),
        .O(\sio_slav_calib_fsm.master_nack_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \sio_slav_calib_fsm.master_nack_i_6 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [1]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [0]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [3]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [2]),
        .O(\sio_slav_calib_fsm.master_nack_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \sio_slav_calib_fsm.master_nack_i_7 
       (.I0(\deskew_enable_gen.data_out_reg[33]_0 [6]),
        .I1(\deskew_enable_gen.data_out_reg[33]_0 [7]),
        .I2(\deskew_enable_gen.data_out_reg[33]_0 [4]),
        .I3(\deskew_enable_gen.data_out_reg[33]_0 [5]),
        .I4(\deskew_enable_gen.data_out_reg[33]_0 [9]),
        .I5(\deskew_enable_gen.data_out_reg[33]_0 [8]),
        .O(\sio_slav_calib_fsm.master_nack_i_7_n_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_if
   (clk_ph_out,
    axi_c2c_selio_tx_diff_clk_out_p,
    axi_c2c_selio_tx_diff_clk_out_n,
    axi_c2c_selio_tx_data_out,
    D,
    rx_user_reset,
    tx_phy_ready,
    rx_phy_ready,
    E,
    \tx_phy_ctrl_reg[2] ,
    \tx_phy_ctrl_reg[0] ,
    SR,
    \tx_phy_ctrl_reg[1] ,
    \tx_phy_ctrl_reg[0]_0 ,
    sync_reset_out_reg,
    rx_phy_ready_reg,
    \sync_flop_2_reg[1] ,
    \calib_intr_gen.tx_ch0_valid_reg ,
    Q,
    \axi_c2c_selio_tx_data_out[16] ,
    idelay_ref_clk,
    axi_c2c_selio_rx_data_in,
    tx_ch0_valid,
    \calib_intr_gen.sync_intr_sent_reg[0] ,
    \calib_intr_gen.send_ch0_reg ,
    m_aresetn,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    reset,
    m_aclk);
  output clk_ph_out;
  output axi_c2c_selio_tx_diff_clk_out_p;
  output axi_c2c_selio_tx_diff_clk_out_n;
  output [16:0]axi_c2c_selio_tx_data_out;
  output [1:0]D;
  output rx_user_reset;
  output tx_phy_ready;
  output rx_phy_ready;
  output [0:0]E;
  output [1:0]\tx_phy_ctrl_reg[2] ;
  output \tx_phy_ctrl_reg[0] ;
  output [0:0]SR;
  output \tx_phy_ctrl_reg[1] ;
  output \tx_phy_ctrl_reg[0]_0 ;
  output [0:0]sync_reset_out_reg;
  output rx_phy_ready_reg;
  output \sync_flop_2_reg[1] ;
  output \calib_intr_gen.tx_ch0_valid_reg ;
  output [33:0]Q;
  input [33:0]\axi_c2c_selio_tx_data_out[16] ;
  input idelay_ref_clk;
  input [16:0]axi_c2c_selio_rx_data_in;
  input tx_ch0_valid;
  input \calib_intr_gen.sync_intr_sent_reg[0] ;
  input \calib_intr_gen.send_ch0_reg ;
  input m_aresetn;
  input axi_c2c_selio_rx_diff_clk_in_p;
  input axi_c2c_selio_rx_diff_clk_in_n;
  input reset;
  input m_aclk;

  wire [1:0]D;
  wire [0:0]E;
  wire [33:0]Q;
  wire [0:0]SR;
  wire [16:0]axi_c2c_selio_rx_data_in;
  wire axi_c2c_selio_rx_diff_clk_in_n;
  wire axi_c2c_selio_rx_diff_clk_in_p;
  wire [16:0]axi_c2c_selio_tx_data_out;
  wire [33:0]\axi_c2c_selio_tx_data_out[16] ;
  wire axi_c2c_selio_tx_diff_clk_out_n;
  wire axi_c2c_selio_tx_diff_clk_out_p;
  wire [33:0]calib_data;
  wire calib_done;
  wire calib_error;
  wire \calib_intr_gen.send_ch0_reg ;
  wire \calib_intr_gen.sync_intr_sent_reg[0] ;
  wire \calib_intr_gen.tx_ch0_valid_reg ;
  wire calib_start;
  wire channel_up;
  wire clk_ph_out;
  wire [32:0]delay_load;
  wire [4:0]delay_tap;
  wire \deskew_enable_gen.calib_done_i_1_n_0 ;
  wire \deskew_enable_gen.calib_error_i_1_n_0 ;
  wire \deskew_enable_gen.flip_type_i_1_n_0 ;
  wire [3:2]\deskew_enable_gen.grp_count_mul ;
  wire \deskew_enable_gen.min_flip_0 ;
  wire \deskew_enable_gen.min_flip_0_i_1_n_0 ;
  wire \deskew_enable_gen.min_flip_1 ;
  wire \deskew_enable_gen.min_flip_1_i_1_n_0 ;
  wire [2:0]\deskew_enable_gen.step_count ;
  wire flip_type;
  wire idelay_ref_clk;
  wire m_aclk;
  wire m_aresetn;
  wire next_calib_done;
  wire [1:1]p_0_in;
  wire reset;
  wire rx_phy_ready;
  wire rx_phy_ready_reg;
  wire rx_user_reset;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_5 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_6 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_79 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_80 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_81 ;
  wire \slave_sio_phy.axi_chip2chip_phy_calib_inst_n_9 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_4 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_46 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_47 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_48 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_49 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_5 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_50 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_51 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_52 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_53 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_54 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_55 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_56 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_57 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_58 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_59 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_6 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_60 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_61 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_62 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_63 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_64 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_65 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_66 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_67 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_68 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_69 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_70 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_71 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_72 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_73 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_74 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_75 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_76 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_77 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_78 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_79 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_80 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_81 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_82 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_83 ;
  wire \slave_sio_phy.axi_chip2chip_sio_input_inst_n_84 ;
  wire \sync_flop_2_reg[1] ;
  wire [0:0]sync_reset_out_reg;
  wire tx_ch0_valid;
  wire \tx_phy_ctrl_reg[0] ;
  wire \tx_phy_ctrl_reg[0]_0 ;
  wire \tx_phy_ctrl_reg[1] ;
  wire [1:0]\tx_phy_ctrl_reg[2] ;
  wire tx_phy_ready;
  wire [22:10]unalign_data;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_init axi_chip2chip_phy_init_inst
       (.D(D),
        .E(E),
        .SR(rx_user_reset),
        .calib_done(calib_done),
        .calib_error(calib_error),
        .\calib_intr_gen.send_ch0_reg (\calib_intr_gen.send_ch0_reg ),
        .\calib_intr_gen.sync_intr_sent_reg[0] (\calib_intr_gen.sync_intr_sent_reg[0] ),
        .\calib_intr_gen.tx_ch0_valid_reg (\calib_intr_gen.tx_ch0_valid_reg ),
        .calib_start(calib_start),
        .channel_up(channel_up),
        .clk_ph_out(clk_ph_out),
        .m_aclk(m_aclk),
        .p_0_in(p_0_in),
        .rx_phy_ready(rx_phy_ready),
        .rx_phy_ready_reg_0(rx_phy_ready_reg),
        .\sio_slav_calib_fsm.master_ack_reg_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_80 ),
        .\sio_slav_calib_fsm.master_init_reg_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_81 ),
        .\sio_slav_calib_fsm.master_nack_reg_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_79 ),
        .\sync_flop_2_reg[1] (\sync_flop_2_reg[1] ),
        .sync_reset_out_reg(SR),
        .tx_ch0_valid(tx_ch0_valid),
        .\tx_phy_ctrl_reg[0]_0 (\tx_phy_ctrl_reg[0] ),
        .\tx_phy_ctrl_reg[0]_1 (\tx_phy_ctrl_reg[0]_0 ),
        .\tx_phy_ctrl_reg[1]_0 (\tx_phy_ctrl_reg[2] [0]),
        .\tx_phy_ctrl_reg[1]_1 (\tx_phy_ctrl_reg[1] ),
        .\tx_phy_ctrl_reg[2]_0 (\tx_phy_ctrl_reg[2] [1]),
        .tx_phy_ready(tx_phy_ready),
        .tx_phy_ready_reg_0(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ));
  LUT5 #(
    .INIT(32'h08FF0800)) 
    \deskew_enable_gen.calib_done_i_1 
       (.I0(\deskew_enable_gen.step_count [1]),
        .I1(\deskew_enable_gen.step_count [2]),
        .I2(\deskew_enable_gen.step_count [0]),
        .I3(next_calib_done),
        .I4(calib_done),
        .O(\deskew_enable_gen.calib_done_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \deskew_enable_gen.calib_error_i_1 
       (.I0(\deskew_enable_gen.step_count [0]),
        .I1(\deskew_enable_gen.step_count [1]),
        .I2(\deskew_enable_gen.step_count [2]),
        .I3(next_calib_done),
        .I4(calib_error),
        .O(\deskew_enable_gen.calib_error_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF2F00000020)) 
    \deskew_enable_gen.flip_type_i_1 
       (.I0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_6 ),
        .I1(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_5 ),
        .I2(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 ),
        .I3(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ),
        .I4(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ),
        .I5(flip_type),
        .O(\deskew_enable_gen.flip_type_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000002)) 
    \deskew_enable_gen.min_flip_0_i_1 
       (.I0(flip_type),
        .I1(\deskew_enable_gen.step_count [0]),
        .I2(\deskew_enable_gen.step_count [1]),
        .I3(\deskew_enable_gen.step_count [2]),
        .I4(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ),
        .I5(\deskew_enable_gen.min_flip_0 ),
        .O(\deskew_enable_gen.min_flip_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \deskew_enable_gen.min_flip_1_i_1 
       (.I0(flip_type),
        .I1(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ),
        .I2(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ),
        .I3(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ),
        .I4(\deskew_enable_gen.min_flip_1 ),
        .O(\deskew_enable_gen.min_flip_1_i_1_n_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_calib \slave_sio_phy.axi_chip2chip_phy_calib_inst 
       (.Q(\deskew_enable_gen.grp_count_mul ),
        .S(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_84 ),
        .SR(rx_user_reset),
        .calib_done(calib_done),
        .calib_error(calib_error),
        .calib_start(calib_start),
        .clk_ph_out(clk_ph_out),
        .\ddr_data_gen.data_dly_reg[23]_0 ({unalign_data[22],unalign_data[10]}),
        .\ddr_data_gen.data_dly_reg[33]_0 (calib_data),
        .\deskew_enable_gen.calib_done_reg_0 (\deskew_enable_gen.calib_done_i_1_n_0 ),
        .\deskew_enable_gen.calib_error_reg_0 (\deskew_enable_gen.calib_error_i_1_n_0 ),
        .\deskew_enable_gen.data_out_reg[24]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_79 ),
        .\deskew_enable_gen.data_out_reg[24]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_80 ),
        .\deskew_enable_gen.data_out_reg[24]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_81 ),
        .\deskew_enable_gen.data_out_reg[33]_0 (Q),
        .\deskew_enable_gen.delay_load_reg[32]_0 ({delay_load[32],delay_load[30],delay_load[26],delay_load[22],delay_load[18],delay_load[14],delay_load[10],delay_load[6],delay_load[0]}),
        .\deskew_enable_gen.delay_tap_reg[4]_0 (delay_tap),
        .\deskew_enable_gen.f0_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_83 ),
        .\deskew_enable_gen.f3_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_6 ),
        .\deskew_enable_gen.flip_type_reg_0 (\deskew_enable_gen.flip_type_i_1_n_0 ),
        .\deskew_enable_gen.grp_count_reg[1]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ),
        .\deskew_enable_gen.grp_count_reg[1]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ),
        .\deskew_enable_gen.grp_count_reg[1]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ),
        .\deskew_enable_gen.grp_count_reg[1]_3 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ),
        .\deskew_enable_gen.grp_count_reg[2]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ),
        .\deskew_enable_gen.grp_count_reg[2]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ),
        .\deskew_enable_gen.grp_count_reg[2]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ),
        .\deskew_enable_gen.grp_count_reg[3]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_9 ),
        .\deskew_enable_gen.grp_count_reg[3]_1 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ),
        .\deskew_enable_gen.grp_count_reg[3]_2 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ),
        .\deskew_enable_gen.min_flip_0 (\deskew_enable_gen.min_flip_0 ),
        .\deskew_enable_gen.min_flip_0_reg_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_30 ),
        .\deskew_enable_gen.min_flip_0_reg_1 (\deskew_enable_gen.min_flip_0_i_1_n_0 ),
        .\deskew_enable_gen.min_flip_1 (\deskew_enable_gen.min_flip_1 ),
        .\deskew_enable_gen.min_flip_1_reg_0 (\deskew_enable_gen.min_flip_1_i_1_n_0 ),
        .\deskew_enable_gen.p0_val_reg[0]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_66 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_67 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_68 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_69 }),
        .\deskew_enable_gen.p0_val_reg[0]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_63 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_64 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_65 }),
        .\deskew_enable_gen.p1_val_reg[0]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_74 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_75 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_76 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_77 }),
        .\deskew_enable_gen.p1_val_reg[0]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_60 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_61 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_62 }),
        .\deskew_enable_gen.p2_val_reg[0]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_78 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_79 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_80 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_81 }),
        .\deskew_enable_gen.p2_val_reg[0]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_53 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_54 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_55 }),
        .\deskew_enable_gen.p3_val_reg0_carry__0_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 }),
        .\deskew_enable_gen.p3_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_5 ),
        .\deskew_enable_gen.p3_val_reg[0]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_70 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_71 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_72 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_73 }),
        .\deskew_enable_gen.p3_val_reg[0]_2 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_50 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_51 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_52 }),
        .\deskew_enable_gen.state_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_34 ),
        .\deskew_enable_gen.state_reg[10]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_33 ),
        .\deskew_enable_gen.state_reg[1]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_35 ),
        .\deskew_enable_gen.state_reg[3]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_32 ),
        .\deskew_enable_gen.step_count (\deskew_enable_gen.step_count ),
        .\deskew_enable_gen.step_count_reg[2]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_15 ),
        .f0_val0_carry__0_0(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_82 ),
        .flip_type(flip_type),
        .next_calib_done(next_calib_done),
        .p0_val0_carry__0_0({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_46 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_47 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_48 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_49 }),
        .p1_val0_carry__0_0({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_56 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_57 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_58 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_59 }),
        .p2_val0_carry__0_0({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_4 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_5 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_6 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sio_input \slave_sio_phy.axi_chip2chip_sio_input_inst 
       (.Q(calib_data),
        .S(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_84 ),
        .axi_c2c_selio_rx_data_in(axi_c2c_selio_rx_data_in),
        .axi_c2c_selio_rx_diff_clk_in_n(axi_c2c_selio_rx_diff_clk_in_n),
        .axi_c2c_selio_rx_diff_clk_in_p(axi_c2c_selio_rx_diff_clk_in_p),
        .channel_up(channel_up),
        .clk_ph_out(clk_ph_out),
        .\data_out_reg[10]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_3 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_4 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_5 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_6 }),
        .\data_out_reg[11]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_46 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_47 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_48 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_49 }),
        .\data_out_reg[20]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_83 ),
        .\data_out_reg[21]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_66 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_67 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_68 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_69 }),
        .\data_out_reg[21]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_78 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_79 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_80 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_81 }),
        .\data_out_reg[22]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_70 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_71 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_72 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_73 }),
        .\data_out_reg[22]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_74 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_75 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_76 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_77 }),
        .\data_out_reg[32]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_50 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_51 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_52 }),
        .\data_out_reg[32]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_53 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_54 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_55 }),
        .\data_out_reg[32]_2 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_60 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_61 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_62 }),
        .\data_out_reg[32]_3 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_63 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_64 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_65 }),
        .\data_out_reg[32]_4 ({delay_load[32],delay_load[30],delay_load[26],delay_load[22],delay_load[18],delay_load[14],delay_load[10],delay_load[6],delay_load[0]}),
        .\data_out_reg[32]_5 (delay_tap),
        .\data_out_reg[8]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_82 ),
        .\data_out_reg[9]_0 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_41 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_42 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_43 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_44 }),
        .\data_out_reg[9]_1 ({\slave_sio_phy.axi_chip2chip_sio_input_inst_n_56 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_57 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_58 ,\slave_sio_phy.axi_chip2chip_sio_input_inst_n_59 }),
        .\deskew_enable_gen.p1_val_reg[0] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_10 ),
        .\deskew_enable_gen.p3_val_reg[0] (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_29 ),
        .\deskew_enable_gen.p3_val_reg[0]_0 (\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_12 ),
        .f2_val0_carry__0({unalign_data[22],unalign_data[10]}),
        .idelay_ref_clk(idelay_ref_clk),
        .m_aresetn(m_aresetn),
        .m_aresetn_0(\slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ),
        .p0_val0_carry(\deskew_enable_gen.grp_count_mul ),
        .p0_val0_carry_0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_27 ),
        .p0_val0_carry__0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_24 ),
        .p0_val0_carry__0_0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_28 ),
        .p1_val0_carry(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_9 ),
        .p1_val0_carry_0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_14 ),
        .p1_val0_carry_1(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_13 ),
        .p2_val0_carry__0(\slave_sio_phy.axi_chip2chip_phy_calib_inst_n_11 ),
        .p_0_in(p_0_in),
        .reset(reset),
        .\sio_slav_calib_fsm.master_ack_reg (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_2 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sio_output \slave_sio_phy.axi_chip2chip_sio_output_inst 
       (.SR(rx_user_reset),
        .axi_c2c_selio_tx_data_out(axi_c2c_selio_tx_data_out),
        .\axi_c2c_selio_tx_data_out[16] (\axi_c2c_selio_tx_data_out[16] ),
        .axi_c2c_selio_tx_diff_clk_out_n(axi_c2c_selio_tx_diff_clk_out_n),
        .axi_c2c_selio_tx_diff_clk_out_p(axi_c2c_selio_tx_diff_clk_out_p),
        .clk_ph_out(clk_ph_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_reset_sync_0 \slave_sio_phy.rx_reset_sync_inst 
       (.SR(rx_user_reset),
        .clk_ph_out(clk_ph_out),
        .\sync_reset_flop_reg[7]_0 (\slave_sio_phy.axi_chip2chip_sio_input_inst_n_45 ),
        .sync_reset_out_reg_0(sync_reset_out_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_phy_init
   (D,
    p_0_in,
    calib_start,
    tx_phy_ready,
    rx_phy_ready,
    E,
    \tx_phy_ctrl_reg[1]_0 ,
    \tx_phy_ctrl_reg[2]_0 ,
    \tx_phy_ctrl_reg[0]_0 ,
    sync_reset_out_reg,
    \tx_phy_ctrl_reg[1]_1 ,
    \tx_phy_ctrl_reg[0]_1 ,
    rx_phy_ready_reg_0,
    \sync_flop_2_reg[1] ,
    \calib_intr_gen.tx_ch0_valid_reg ,
    \sio_slav_calib_fsm.master_ack_reg_0 ,
    clk_ph_out,
    \sio_slav_calib_fsm.master_nack_reg_0 ,
    \sio_slav_calib_fsm.master_init_reg_0 ,
    SR,
    tx_ch0_valid,
    \calib_intr_gen.sync_intr_sent_reg[0] ,
    \calib_intr_gen.send_ch0_reg ,
    channel_up,
    calib_done,
    calib_error,
    tx_phy_ready_reg_0,
    m_aclk);
  output [1:0]D;
  output [0:0]p_0_in;
  output calib_start;
  output tx_phy_ready;
  output rx_phy_ready;
  output [0:0]E;
  output \tx_phy_ctrl_reg[1]_0 ;
  output \tx_phy_ctrl_reg[2]_0 ;
  output \tx_phy_ctrl_reg[0]_0 ;
  output [0:0]sync_reset_out_reg;
  output \tx_phy_ctrl_reg[1]_1 ;
  output \tx_phy_ctrl_reg[0]_1 ;
  output rx_phy_ready_reg_0;
  output \sync_flop_2_reg[1] ;
  output \calib_intr_gen.tx_ch0_valid_reg ;
  input \sio_slav_calib_fsm.master_ack_reg_0 ;
  input clk_ph_out;
  input \sio_slav_calib_fsm.master_nack_reg_0 ;
  input \sio_slav_calib_fsm.master_init_reg_0 ;
  input [0:0]SR;
  input tx_ch0_valid;
  input \calib_intr_gen.sync_intr_sent_reg[0] ;
  input \calib_intr_gen.send_ch0_reg ;
  input channel_up;
  input calib_done;
  input calib_error;
  input tx_phy_ready_reg_0;
  input m_aclk;

  wire [1:0]D;
  wire [0:0]E;
  wire [0:0]SR;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_cdc_to;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_r1;
  (* DONT_TOUCH *) (* async_reg = "true" *) wire aurora_rst_out_r2;
  wire calib_done;
  wire calib_done_flop;
  wire calib_done_flop_i_1_n_0;
  wire calib_error;
  wire calib_error_flop;
  wire calib_error_flop_i_1_n_0;
  wire \calib_intr_gen.send_ch0_reg ;
  wire \calib_intr_gen.sync_intr_sent_reg[0] ;
  wire \calib_intr_gen.tx_ch0_valid_reg ;
  wire calib_start;
  wire calib_start_i_1_n_0;
  wire channel_up;
  wire clk_ph_out;
  wire m_aclk;
  wire next_calib_error_out;
  wire next_pat_count;
  wire next_rx_phy_ready;
  wire next_state;
  wire [7:0]next_state__0;
  wire [0:0]p_0_in;
  wire [3:0]p_0_in__0;
  wire \pat_count[2]_i_1_n_0 ;
  wire [3:0]pat_count_reg;
  wire rx_phy_ready;
  wire rx_phy_ready_i_1_n_0;
  wire rx_phy_ready_reg_0;
  wire \sio_slav_calib_fsm.master_ack_reg_0 ;
  wire \sio_slav_calib_fsm.master_init ;
  wire \sio_slav_calib_fsm.master_init_reg_0 ;
  wire \sio_slav_calib_fsm.master_nack ;
  wire \sio_slav_calib_fsm.master_nack_reg_0 ;
  wire [6:0]state;
  wire \state[2]_i_2_n_0 ;
  wire \state[7]_i_3_n_0 ;
  wire \state[7]_i_4_n_0 ;
  wire \state[7]_i_5_n_0 ;
  wire \sync_flop_2_reg[1] ;
  wire [0:0]sync_reset_out_reg;
  wire tx_ch0_valid;
  wire [0:0]tx_phy_ctrl;
  wire \tx_phy_ctrl[0]_i_1_n_0 ;
  wire \tx_phy_ctrl[0]_i_2_n_0 ;
  wire \tx_phy_ctrl[1]_i_1_n_0 ;
  wire \tx_phy_ctrl[2]_i_1_n_0 ;
  wire \tx_phy_ctrl_reg[0]_0 ;
  wire \tx_phy_ctrl_reg[0]_1 ;
  wire \tx_phy_ctrl_reg[1]_0 ;
  wire \tx_phy_ctrl_reg[1]_1 ;
  wire \tx_phy_ctrl_reg[2]_0 ;
  wire tx_phy_ready;
  wire tx_phy_ready_i_1_n_0;
  wire tx_phy_ready_i_3_n_0;
  wire tx_phy_ready_reg_0;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized1 axi_chip2chip_sync_cell_inst
       (.D(D),
        .in0({calib_done_flop,calib_error_flop}),
        .m_aclk(m_aclk),
        .\sync_flop_2_reg[1]_0 (\sync_flop_2_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000002)) 
    calib_done_flop_i_1
       (.I0(next_rx_phy_ready),
        .I1(next_calib_error_out),
        .I2(state[0]),
        .I3(state[6]),
        .I4(\tx_phy_ctrl[0]_i_2_n_0 ),
        .I5(calib_done_flop),
        .O(calib_done_flop_i_1_n_0));
  FDCE calib_done_flop_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(SR),
        .D(calib_done_flop_i_1_n_0),
        .Q(calib_done_flop));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000004)) 
    calib_error_flop_i_1
       (.I0(next_rx_phy_ready),
        .I1(next_calib_error_out),
        .I2(state[0]),
        .I3(state[6]),
        .I4(\tx_phy_ctrl[0]_i_2_n_0 ),
        .I5(calib_error_flop),
        .O(calib_error_flop_i_1_n_0));
  FDRE calib_error_flop_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(calib_error_flop_i_1_n_0),
        .Q(calib_error_flop),
        .R(SR));
  LUT4 #(
    .INIT(16'hAAAB)) 
    \calib_intr_gen.cal_nibble[3]_i_1 
       (.I0(SR),
        .I1(\tx_phy_ctrl_reg[1]_0 ),
        .I2(\tx_phy_ctrl_reg[2]_0 ),
        .I3(tx_phy_ctrl),
        .O(sync_reset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \calib_intr_gen.send_calib_i_1 
       (.I0(tx_phy_ctrl),
        .I1(\tx_phy_ctrl_reg[2]_0 ),
        .I2(\tx_phy_ctrl_reg[1]_0 ),
        .O(\tx_phy_ctrl_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \calib_intr_gen.send_ch0_i_1 
       (.I0(\tx_phy_ctrl_reg[1]_0 ),
        .I1(\tx_phy_ctrl_reg[2]_0 ),
        .I2(tx_phy_ctrl),
        .I3(\calib_intr_gen.send_ch0_reg ),
        .O(\tx_phy_ctrl_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \calib_intr_gen.send_intr_i_1 
       (.I0(tx_ch0_valid),
        .I1(\calib_intr_gen.sync_intr_sent_reg[0] ),
        .I2(tx_phy_ctrl),
        .I3(\tx_phy_ctrl_reg[2]_0 ),
        .I4(\tx_phy_ctrl_reg[1]_0 ),
        .I5(SR),
        .O(\calib_intr_gen.tx_ch0_valid_reg ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \calib_intr_gen.sync_intr_sent[3]_i_1 
       (.I0(tx_ch0_valid),
        .I1(\calib_intr_gen.sync_intr_sent_reg[0] ),
        .I2(\tx_phy_ctrl_reg[1]_0 ),
        .I3(\tx_phy_ctrl_reg[2]_0 ),
        .I4(tx_phy_ctrl),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    \calib_intr_gen.tx_ch0_data[26]_i_1 
       (.I0(tx_phy_ctrl),
        .I1(\tx_phy_ctrl_reg[2]_0 ),
        .I2(\tx_phy_ctrl_reg[1]_0 ),
        .I3(\calib_intr_gen.send_ch0_reg ),
        .I4(SR),
        .O(\tx_phy_ctrl_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    calib_start_i_1
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\state[7]_i_4_n_0 ),
        .O(calib_start_i_1_n_0));
  FDRE calib_start_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(calib_start_i_1_n_0),
        .Q(calib_start),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(aurora_rst_out_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(aurora_rst_out_r1));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(aurora_rst_out_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \pat_count[0]_i_1 
       (.I0(pat_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pat_count[1]_i_1 
       (.I0(pat_count_reg[0]),
        .I1(pat_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \pat_count[2]_i_1 
       (.I0(pat_count_reg[1]),
        .I1(pat_count_reg[0]),
        .I2(pat_count_reg[2]),
        .O(\pat_count[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \pat_count[3]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(\state[7]_i_4_n_0 ),
        .O(next_pat_count));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \pat_count[3]_i_2 
       (.I0(pat_count_reg[0]),
        .I1(pat_count_reg[1]),
        .I2(pat_count_reg[2]),
        .I3(pat_count_reg[3]),
        .O(p_0_in__0[3]));
  FDRE \pat_count_reg[0] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in__0[0]),
        .Q(pat_count_reg[0]),
        .R(SR));
  FDRE \pat_count_reg[1] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in__0[1]),
        .Q(pat_count_reg[1]),
        .R(SR));
  FDRE \pat_count_reg[2] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(\pat_count[2]_i_1_n_0 ),
        .Q(pat_count_reg[2]),
        .R(SR));
  FDRE \pat_count_reg[3] 
       (.C(clk_ph_out),
        .CE(next_pat_count),
        .D(p_0_in__0[3]),
        .Q(pat_count_reg[3]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_i_1 
       (.I0(rx_phy_ready),
        .O(rx_phy_ready_reg_0));
  LUT6 #(
    .INIT(64'hFFFEFFEF00000100)) 
    rx_phy_ready_i_1
       (.I0(\tx_phy_ctrl[0]_i_2_n_0 ),
        .I1(state[6]),
        .I2(next_calib_error_out),
        .I3(next_rx_phy_ready),
        .I4(state[0]),
        .I5(rx_phy_ready),
        .O(rx_phy_ready_i_1_n_0));
  FDCE rx_phy_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(SR),
        .D(rx_phy_ready_i_1_n_0),
        .Q(rx_phy_ready));
  FDRE \sio_slav_calib_fsm.master_ack_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\sio_slav_calib_fsm.master_ack_reg_0 ),
        .Q(p_0_in),
        .R(1'b0));
  FDRE \sio_slav_calib_fsm.master_init_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\sio_slav_calib_fsm.master_init_reg_0 ),
        .Q(\sio_slav_calib_fsm.master_init ),
        .R(1'b0));
  FDRE \sio_slav_calib_fsm.master_nack_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\sio_slav_calib_fsm.master_nack_reg_0 ),
        .Q(\sio_slav_calib_fsm.master_nack ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h2A)) 
    \state[0]_i_1__1 
       (.I0(state[0]),
        .I1(p_0_in),
        .I2(channel_up),
        .O(next_state__0[0]));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \state[1]_i_1__1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(state[1]),
        .I2(channel_up),
        .I3(p_0_in),
        .I4(state[0]),
        .O(next_state__0[1]));
  LUT5 #(
    .INIT(32'hF22F2222)) 
    \state[2]_i_1__0 
       (.I0(state[1]),
        .I1(\state[2]_i_2_n_0 ),
        .I2(calib_error),
        .I3(calib_done),
        .I4(state[2]),
        .O(next_state__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \state[2]_i_2 
       (.I0(pat_count_reg[1]),
        .I1(pat_count_reg[0]),
        .I2(pat_count_reg[2]),
        .I3(pat_count_reg[3]),
        .O(\state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \state[3]_i_1 
       (.I0(calib_error),
        .I1(calib_done),
        .I2(state[2]),
        .I3(\sio_slav_calib_fsm.master_nack ),
        .I4(state[3]),
        .O(next_state__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'hF8888F88)) 
    \state[4]_i_1 
       (.I0(state[3]),
        .I1(\sio_slav_calib_fsm.master_nack ),
        .I2(\sio_slav_calib_fsm.master_init ),
        .I3(state[4]),
        .I4(p_0_in),
        .O(next_state__0[4]));
  LUT2 #(
    .INIT(4'hE)) 
    \state[5]_i_1 
       (.I0(next_rx_phy_ready),
        .I1(state[6]),
        .O(next_state__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[6]_i_1 
       (.I0(p_0_in),
        .I1(state[4]),
        .I2(\sio_slav_calib_fsm.master_init ),
        .O(next_state__0[6]));
  LUT6 #(
    .INIT(64'h0100010001001716)) 
    \state[7]_i_1 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(\state[7]_i_3_n_0 ),
        .I4(state[3]),
        .I5(\state[7]_i_4_n_0 ),
        .O(next_state));
  LUT6 #(
    .INIT(64'hFFFFBAAABAAABAAA)) 
    \state[7]_i_2 
       (.I0(next_calib_error_out),
        .I1(calib_done),
        .I2(state[2]),
        .I3(calib_error),
        .I4(\sio_slav_calib_fsm.master_init ),
        .I5(\state[7]_i_5_n_0 ),
        .O(next_state__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \state[7]_i_3 
       (.I0(next_rx_phy_ready),
        .I1(state[6]),
        .I2(next_calib_error_out),
        .I3(state[4]),
        .I4(state[3]),
        .O(\state[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[7]_i_4 
       (.I0(next_rx_phy_ready),
        .I1(state[6]),
        .I2(next_calib_error_out),
        .I3(state[4]),
        .O(\state[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[7]_i_5 
       (.I0(state[4]),
        .I1(p_0_in),
        .O(\state[7]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDSE \state_reg[0] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[0]),
        .Q(state[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[1] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[1]),
        .Q(state[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[2] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[2]),
        .Q(state[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[3] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[3]),
        .Q(state[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[4] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[4]),
        .Q(state[4]),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[5] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[5]),
        .Q(next_rx_phy_ready),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[6] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[6]),
        .Q(state[6]),
        .R(SR));
  (* FSM_ENCODED_STATES = "SLAVE_DONE:00100000,IDLE:00000001,WAIT_DLY:00000010,SLAVE_CALIB:00000100,SLAVE_ACK:00001000,WAIT_MASTER:00010000,SLAVE_ERROR:10000000,SLAVE_READY:01000000" *) 
  FDRE \state_reg[7] 
       (.C(clk_ph_out),
        .CE(next_state),
        .D(next_state__0[7]),
        .Q(next_calib_error_out),
        .R(SR));
  LUT4 #(
    .INIT(16'hBFB0)) 
    \tx_phy_ctrl[0]_i_1 
       (.I0(\tx_phy_ctrl[0]_i_2_n_0 ),
        .I1(next_rx_phy_ready),
        .I2(next_state),
        .I3(tx_phy_ctrl),
        .O(\tx_phy_ctrl[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_phy_ctrl[0]_i_2 
       (.I0(state[3]),
        .I1(state[4]),
        .I2(state[1]),
        .I3(state[2]),
        .O(\tx_phy_ctrl[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \tx_phy_ctrl[1]_i_1 
       (.I0(state[3]),
        .I1(next_calib_error_out),
        .I2(state[6]),
        .I3(next_state),
        .I4(\tx_phy_ctrl_reg[1]_0 ),
        .O(\tx_phy_ctrl[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \tx_phy_ctrl[2]_i_1 
       (.I0(state[4]),
        .I1(next_calib_error_out),
        .I2(next_state),
        .I3(\tx_phy_ctrl_reg[2]_0 ),
        .O(\tx_phy_ctrl[2]_i_1_n_0 ));
  FDPE \tx_phy_ctrl_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tx_phy_ctrl[0]_i_1_n_0 ),
        .PRE(SR),
        .Q(tx_phy_ctrl));
  FDCE \tx_phy_ctrl_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(SR),
        .D(\tx_phy_ctrl[1]_i_1_n_0 ),
        .Q(\tx_phy_ctrl_reg[1]_0 ));
  FDCE \tx_phy_ctrl_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(SR),
        .D(\tx_phy_ctrl[2]_i_1_n_0 ),
        .Q(\tx_phy_ctrl_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    tx_phy_ready_i_1
       (.I0(tx_phy_ready_reg_0),
        .I1(tx_phy_ready_i_3_n_0),
        .I2(state[0]),
        .I3(state[3]),
        .I4(\state[7]_i_4_n_0 ),
        .I5(tx_phy_ready),
        .O(tx_phy_ready_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'hE)) 
    tx_phy_ready_i_3
       (.I0(state[2]),
        .I1(state[1]),
        .O(tx_phy_ready_i_3_n_0));
  FDCE tx_phy_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .CLR(SR),
        .D(tx_phy_ready_i_1_n_0),
        .Q(tx_phy_ready));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_reset_sync
   (SR,
    s_axi_lite_aclk,
    sync_reset_out_reg_0);
  output [0:0]SR;
  input s_axi_lite_aclk;
  input sync_reset_out_reg_0;

  wire [0:0]SR;
  wire s_axi_lite_aclk;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [7:0]sync_reset_flop;
  wire sync_reset_out_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[1] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[0]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[2] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[1]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[3] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[2]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[4] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[3]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[5] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[4]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[6] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[5]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[7] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[6]),
        .PRE(sync_reset_out_reg_0),
        .Q(sync_reset_flop[7]));
  FDPE sync_reset_out_reg
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_reset_flop[7]),
        .PRE(sync_reset_out_reg_0),
        .Q(SR));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_reset_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_reset_sync_0
   (SR,
    sync_reset_out_reg_0,
    clk_ph_out,
    \sync_reset_flop_reg[7]_0 );
  output [0:0]SR;
  output [0:0]sync_reset_out_reg_0;
  input clk_ph_out;
  input \sync_reset_flop_reg[7]_0 ;

  wire [0:0]SR;
  wire clk_ph_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [7:0]sync_reset_flop;
  wire \sync_reset_flop_reg[7]_0 ;
  wire [0:0]sync_reset_out_reg_0;

  LUT1 #(
    .INIT(2'h1)) 
    \calib_intr_gen.tx_ch0_data[26]_i_2 
       (.I0(SR),
        .O(sync_reset_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[0]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[1]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[2]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[3]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[4]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[5]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE \sync_reset_flop_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[6]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(sync_reset_flop[7]));
  FDPE sync_reset_out_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_reset_flop[7]),
        .PRE(\sync_reset_flop_reg[7]_0 ),
        .Q(SR));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sio_input
   (channel_up,
    clk_ph_out,
    \sio_slav_calib_fsm.master_ack_reg ,
    \data_out_reg[10]_0 ,
    Q,
    \data_out_reg[9]_0 ,
    m_aresetn_0,
    \data_out_reg[11]_0 ,
    \data_out_reg[32]_0 ,
    \data_out_reg[32]_1 ,
    \data_out_reg[9]_1 ,
    \data_out_reg[32]_2 ,
    \data_out_reg[32]_3 ,
    \data_out_reg[21]_0 ,
    \data_out_reg[22]_0 ,
    \data_out_reg[22]_1 ,
    \data_out_reg[21]_1 ,
    \data_out_reg[8]_0 ,
    \data_out_reg[20]_0 ,
    S,
    idelay_ref_clk,
    axi_c2c_selio_rx_data_in,
    \data_out_reg[32]_4 ,
    \data_out_reg[32]_5 ,
    p_0_in,
    p0_val0_carry,
    p0_val0_carry_0,
    m_aresetn,
    \deskew_enable_gen.p3_val_reg[0] ,
    \deskew_enable_gen.p3_val_reg[0]_0 ,
    p1_val0_carry,
    p1_val0_carry_0,
    \deskew_enable_gen.p1_val_reg[0] ,
    p2_val0_carry__0,
    p0_val0_carry__0,
    p1_val0_carry_1,
    f2_val0_carry__0,
    p0_val0_carry__0_0,
    axi_c2c_selio_rx_diff_clk_in_p,
    axi_c2c_selio_rx_diff_clk_in_n,
    reset);
  output channel_up;
  output clk_ph_out;
  output \sio_slav_calib_fsm.master_ack_reg ;
  output [3:0]\data_out_reg[10]_0 ;
  output [33:0]Q;
  output [3:0]\data_out_reg[9]_0 ;
  output m_aresetn_0;
  output [3:0]\data_out_reg[11]_0 ;
  output [2:0]\data_out_reg[32]_0 ;
  output [2:0]\data_out_reg[32]_1 ;
  output [3:0]\data_out_reg[9]_1 ;
  output [2:0]\data_out_reg[32]_2 ;
  output [2:0]\data_out_reg[32]_3 ;
  output [3:0]\data_out_reg[21]_0 ;
  output [3:0]\data_out_reg[22]_0 ;
  output [3:0]\data_out_reg[22]_1 ;
  output [3:0]\data_out_reg[21]_1 ;
  output [0:0]\data_out_reg[8]_0 ;
  output [0:0]\data_out_reg[20]_0 ;
  output [0:0]S;
  input idelay_ref_clk;
  input [16:0]axi_c2c_selio_rx_data_in;
  input [8:0]\data_out_reg[32]_4 ;
  input [4:0]\data_out_reg[32]_5 ;
  input [0:0]p_0_in;
  input [1:0]p0_val0_carry;
  input p0_val0_carry_0;
  input m_aresetn;
  input \deskew_enable_gen.p3_val_reg[0] ;
  input \deskew_enable_gen.p3_val_reg[0]_0 ;
  input p1_val0_carry;
  input p1_val0_carry_0;
  input \deskew_enable_gen.p1_val_reg[0] ;
  input p2_val0_carry__0;
  input p0_val0_carry__0;
  input p1_val0_carry_1;
  input [1:0]f2_val0_carry__0;
  input p0_val0_carry__0_0;
  input axi_c2c_selio_rx_diff_clk_in_p;
  input axi_c2c_selio_rx_diff_clk_in_n;
  input reset;

  wire [33:0]Q;
  wire [0:0]S;
  wire [16:0]axi_c2c_selio_rx_data_in;
  wire axi_c2c_selio_rx_diff_clk_in_n;
  wire axi_c2c_selio_rx_diff_clk_in_p;
  wire axi_chip2chip_clk_gen_inst_n_0;
  wire axi_chip2chip_clk_gen_inst_n_1;
  wire axi_chip2chip_clk_gen_inst_n_2;
  wire axi_chip2chip_clk_gen_inst_n_3;
  wire channel_up;
  wire clk_ph_out;
  wire \count_4_reg_n_0_[0] ;
  wire \count_4_reg_n_0_[1] ;
  wire \count_4_reg_n_0_[2] ;
  wire [2:0]current_state;
  wire [33:0]data_in_iddr;
  wire [3:0]\data_out_reg[10]_0 ;
  wire [3:0]\data_out_reg[11]_0 ;
  wire [0:0]\data_out_reg[20]_0 ;
  wire [3:0]\data_out_reg[21]_0 ;
  wire [3:0]\data_out_reg[21]_1 ;
  wire [3:0]\data_out_reg[22]_0 ;
  wire [3:0]\data_out_reg[22]_1 ;
  wire [2:0]\data_out_reg[32]_0 ;
  wire [2:0]\data_out_reg[32]_1 ;
  wire [2:0]\data_out_reg[32]_2 ;
  wire [2:0]\data_out_reg[32]_3 ;
  wire [8:0]\data_out_reg[32]_4 ;
  wire [4:0]\data_out_reg[32]_5 ;
  wire [0:0]\data_out_reg[8]_0 ;
  wire [3:0]\data_out_reg[9]_0 ;
  wire [3:0]\data_out_reg[9]_1 ;
  wire \deskew_enable_gen.p1_val_reg[0] ;
  wire \deskew_enable_gen.p3_val_reg[0] ;
  wire \deskew_enable_gen.p3_val_reg[0]_0 ;
  wire [1:0]f2_val0_carry__0;
  wire idelay_ref_clk;
  wire m_aresetn;
  wire m_aresetn_0;
  wire [2:0]next_state;
  wire [1:0]p0_val0_carry;
  wire p0_val0_carry_0;
  wire p0_val0_carry__0;
  wire p0_val0_carry__0_0;
  wire p1_val0_carry;
  wire p1_val0_carry_0;
  wire p1_val0_carry_1;
  wire p2_val0_carry__0;
  wire [0:0]p_0_in;
  wire p_0_out;
  wire p_10_out;
  wire p_11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_15_out;
  wire p_16_out;
  wire p_17_out;
  wire p_18_out;
  wire p_19_out;
  wire p_1_out;
  wire p_20_out;
  wire p_21_out;
  wire p_22_out;
  wire p_23_out;
  wire p_24_out;
  wire p_25_out;
  wire p_26_out;
  wire p_27_out;
  wire p_28_out;
  wire p_29_out;
  wire p_2_out;
  wire p_30_out;
  wire p_31_out;
  wire p_32_out;
  wire p_33_out;
  wire p_3_out;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out;
  wire p_7_out;
  wire p_8_out;
  wire p_9_out;
  wire reset;
  wire reset_iddr;
  wire reset_iddr_int;
  wire reset_idelay;
  wire reset_idelay_Ctrl;
  (* async_reg = "true" *) wire reset_idelay_Ctrl_cdc_to;
  (* async_reg = "true" *) wire reset_idelay_Ctrl_cdc_to1;
  wire reset_idelay_i_1_n_0;
  wire \sio_slav_calib_fsm.master_ack_reg ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[15].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[16].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [4:0]\NLW_ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h000000006AAA7FFF)) 
    \FSM_sequential_current_state[0]_i_1 
       (.I0(current_state[0]),
        .I1(\count_4_reg_n_0_[1] ),
        .I2(\count_4_reg_n_0_[0] ),
        .I3(\count_4_reg_n_0_[2] ),
        .I4(current_state[1]),
        .I5(current_state[2]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \FSM_sequential_current_state[1]_i_1 
       (.I0(current_state[0]),
        .I1(\count_4_reg_n_0_[0] ),
        .I2(\count_4_reg_n_0_[1] ),
        .I3(\count_4_reg_n_0_[2] ),
        .I4(current_state[1]),
        .I5(current_state[2]),
        .O(next_state[1]));
  LUT6 #(
    .INIT(64'h4000000022222222)) 
    \FSM_sequential_current_state[2]_i_2 
       (.I0(current_state[2]),
        .I1(current_state[0]),
        .I2(\count_4_reg_n_0_[0] ),
        .I3(\count_4_reg_n_0_[1] ),
        .I4(\count_4_reg_n_0_[2] ),
        .I5(current_state[1]),
        .O(next_state[2]));
  (* FSM_ENCODED_STATES = "IDLE:000,MMCM_WAIT:001,IDELAY_RST:010,IDDR_RST:011,IDLEAYCTRL_RST:100" *) 
  FDRE \FSM_sequential_current_state_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_state[0]),
        .Q(current_state[0]),
        .R(axi_chip2chip_clk_gen_inst_n_0));
  (* FSM_ENCODED_STATES = "IDLE:000,MMCM_WAIT:001,IDELAY_RST:010,IDDR_RST:011,IDLEAYCTRL_RST:100" *) 
  FDRE \FSM_sequential_current_state_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_state[1]),
        .Q(current_state[1]),
        .R(axi_chip2chip_clk_gen_inst_n_0));
  (* FSM_ENCODED_STATES = "IDLE:000,MMCM_WAIT:001,IDELAY_RST:010,IDDR_RST:011,IDLEAYCTRL_RST:100" *) 
  FDRE \FSM_sequential_current_state_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_state[2]),
        .Q(current_state[2]),
        .R(axi_chip2chip_clk_gen_inst_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_clk_gen axi_chip2chip_clk_gen_inst
       (.D({axi_chip2chip_clk_gen_inst_n_1,axi_chip2chip_clk_gen_inst_n_2,axi_chip2chip_clk_gen_inst_n_3}),
        .Q(current_state[2]),
        .SR(axi_chip2chip_clk_gen_inst_n_0),
        .axi_c2c_selio_rx_diff_clk_in_n(axi_c2c_selio_rx_diff_clk_in_n),
        .axi_c2c_selio_rx_diff_clk_in_p(axi_c2c_selio_rx_diff_clk_in_p),
        .clk_ph_out(clk_ph_out),
        .\count_4_reg[2] ({\count_4_reg_n_0_[2] ,\count_4_reg_n_0_[1] ,\count_4_reg_n_0_[0] }),
        .in0(reset_idelay_Ctrl),
        .m_aresetn(m_aresetn),
        .m_aresetn_0(m_aresetn_0),
        .reset(reset));
  FDRE \count_4_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_chip2chip_clk_gen_inst_n_3),
        .Q(\count_4_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_4_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_chip2chip_clk_gen_inst_n_2),
        .Q(\count_4_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_4_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_chip2chip_clk_gen_inst_n_1),
        .Q(\count_4_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \data_out_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \data_out_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \data_out_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \data_out_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_in_iddr[9]),
        .Q(Q[9]),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[0].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_33_out),
        .Q1(data_in_iddr[0]),
        .Q2(data_in_iddr[1]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[10].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_23_out),
        .Q1(data_in_iddr[20]),
        .Q2(data_in_iddr[21]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[11].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_22_out),
        .Q1(data_in_iddr[22]),
        .Q2(data_in_iddr[23]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[12].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_21_out),
        .Q1(data_in_iddr[24]),
        .Q2(data_in_iddr[25]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[13].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_20_out),
        .Q1(data_in_iddr[26]),
        .Q2(data_in_iddr[27]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[14].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_19_out),
        .Q1(data_in_iddr[28]),
        .Q2(data_in_iddr[29]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[15].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_18_out),
        .Q1(data_in_iddr[30]),
        .Q2(data_in_iddr[31]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[16].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_17_out),
        .Q1(data_in_iddr[32]),
        .Q2(data_in_iddr[33]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[1].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_32_out),
        .Q1(data_in_iddr[2]),
        .Q2(data_in_iddr[3]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[2].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_31_out),
        .Q1(data_in_iddr[4]),
        .Q2(data_in_iddr[5]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[3].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_30_out),
        .Q1(data_in_iddr[6]),
        .Q2(data_in_iddr[7]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[4].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_29_out),
        .Q1(data_in_iddr[8]),
        .Q2(data_in_iddr[9]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[5].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_28_out),
        .Q1(data_in_iddr[10]),
        .Q2(data_in_iddr[11]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[6].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_27_out),
        .Q1(data_in_iddr[12]),
        .Q2(data_in_iddr[13]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[7].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_26_out),
        .Q1(data_in_iddr[14]),
        .Q2(data_in_iddr[15]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[8].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_25_out),
        .Q1(data_in_iddr[16]),
        .Q2(data_in_iddr[17]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* __SRVAL = "FALSE" *) 
  IDDR #(
    .DDR_CLK_EDGE("SAME_EDGE_PIPELINED"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_iddr_gen.input_ddr_inst[9].gen_iddr.iddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(p_24_out),
        .Q1(data_in_iddr[18]),
        .Q2(data_in_iddr[19]),
        .R(reset_iddr),
        .S(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[0].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_33_out),
        .IDATAIN(p_16_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [0]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[10].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_23_out),
        .IDATAIN(p_6_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [5]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[11].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_22_out),
        .IDATAIN(p_5_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [5]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[12].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_21_out),
        .IDATAIN(p_4_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [6]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[13].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_20_out),
        .IDATAIN(p_3_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [6]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[14].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_19_out),
        .IDATAIN(p_2_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [7]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[15].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[15].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_18_out),
        .IDATAIN(p_1_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [7]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[16].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[16].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_17_out),
        .IDATAIN(p_0_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [8]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[1].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_32_out),
        .IDATAIN(p_15_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [0]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[2].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_31_out),
        .IDATAIN(p_14_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [1]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[3].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_30_out),
        .IDATAIN(p_13_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [1]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[4].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_29_out),
        .IDATAIN(p_12_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [2]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[5].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_28_out),
        .IDATAIN(p_11_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [2]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[6].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_27_out),
        .IDATAIN(p_10_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [3]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[7].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_26_out),
        .IDATAIN(p_9_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [3]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[8].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_25_out),
        .IDATAIN(p_8_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [4]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst 
       (.C(clk_ph_out),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(\data_out_reg[32]_5 ),
        .CNTVALUEOUT(\NLW_ddr_idelay_gen.ddr_idelay_inst[9].gen_idelaye2.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b1),
        .DATAOUT(p_24_out),
        .IDATAIN(p_7_out),
        .INC(1'b0),
        .LD(\data_out_reg[32]_4 [4]),
        .LDPIPEEN(1'b0),
        .REGRST(reset_idelay));
  LUT4 #(
    .INIT(16'h20FF)) 
    \deskew_enable_gen.p3_val_reg0_carry__0_i_1 
       (.I0(Q[22]),
        .I1(Q[23]),
        .I2(Q[21]),
        .I3(p0_val0_carry__0_0),
        .O(\data_out_reg[22]_0 [3]));
  LUT5 #(
    .INIT(32'h00B0BBBB)) 
    \deskew_enable_gen.p3_val_reg0_carry__0_i_2 
       (.I0(Q[20]),
        .I1(p0_val0_carry__0_0),
        .I2(Q[18]),
        .I3(Q[19]),
        .I4(p0_val0_carry__0),
        .O(\data_out_reg[22]_0 [2]));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.p3_val_reg0_carry__0_i_3 
       (.I0(Q[16]),
        .I1(p0_val0_carry__0),
        .I2(Q[17]),
        .I3(Q[15]),
        .I4(p2_val0_carry__0),
        .O(\data_out_reg[22]_0 [1]));
  LUT4 #(
    .INIT(16'h80FF)) 
    \deskew_enable_gen.p3_val_reg0_carry__0_i_4 
       (.I0(Q[12]),
        .I1(Q[14]),
        .I2(Q[13]),
        .I3(p2_val0_carry__0),
        .O(\data_out_reg[22]_0 [0]));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    \deskew_enable_gen.p3_val_reg0_carry__1_i_2 
       (.I0(Q[32]),
        .I1(\deskew_enable_gen.p3_val_reg[0] ),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\data_out_reg[32]_0 [2]));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.p3_val_reg0_carry__1_i_3 
       (.I0(Q[28]),
        .I1(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I2(Q[29]),
        .I3(Q[27]),
        .I4(\deskew_enable_gen.p1_val_reg[0] ),
        .O(\data_out_reg[32]_0 [1]));
  LUT4 #(
    .INIT(16'hB333)) 
    \deskew_enable_gen.p3_val_reg0_carry__1_i_4 
       (.I0(Q[24]),
        .I1(\deskew_enable_gen.p1_val_reg[0] ),
        .I2(Q[25]),
        .I3(Q[26]),
        .O(\data_out_reg[32]_0 [0]));
  LUT4 #(
    .INIT(16'h5D55)) 
    \deskew_enable_gen.p3_val_reg0_carry_i_1 
       (.I0(p1_val0_carry_1),
        .I1(Q[9]),
        .I2(Q[11]),
        .I3(Q[10]),
        .O(\data_out_reg[9]_0 [3]));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    \deskew_enable_gen.p3_val_reg0_carry_i_2 
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(p0_val0_carry[1]),
        .I4(p0_val0_carry_0),
        .I5(p0_val0_carry[0]),
        .O(\data_out_reg[9]_0 [2]));
  LUT5 #(
    .INIT(32'h00B3B3B3)) 
    \deskew_enable_gen.p3_val_reg0_carry_i_3 
       (.I0(Q[4]),
        .I1(p1_val0_carry_0),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(p1_val0_carry),
        .O(\data_out_reg[9]_0 [1]));
  LUT4 #(
    .INIT(16'h80FF)) 
    \deskew_enable_gen.p3_val_reg0_carry_i_4 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(p1_val0_carry),
        .O(\data_out_reg[9]_0 [0]));
  LUT4 #(
    .INIT(16'h04FF)) 
    f0_val0_carry__0_i_1
       (.I0(Q[20]),
        .I1(f2_val0_carry__0[1]),
        .I2(Q[22]),
        .I3(p0_val0_carry__0_0),
        .O(\data_out_reg[20]_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    f0_val0_carry_i_1
       (.I0(Q[8]),
        .I1(f2_val0_carry__0[0]),
        .I2(Q[10]),
        .I3(p1_val0_carry_1),
        .O(\data_out_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    f2_val0_carry__0_i_1
       (.I0(Q[20]),
        .I1(Q[22]),
        .I2(f2_val0_carry__0[1]),
        .I3(p0_val0_carry__0_0),
        .O(S));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "C2C_PHY_group" *) 
  IDELAYCTRL #(
    .SIM_DEVICE("7SERIES")) 
    \idelayctrl_gen_us.IDELAYCTRL_inst 
       (.RDY(channel_up),
        .REFCLK(idelay_ref_clk),
        .RST(reset_idelay_Ctrl_cdc_to1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \idelayctrl_gen_us.reset_idelay_Ctrl_cdc_to1_reg 
       (.C(idelay_ref_clk),
        .CE(1'b1),
        .D(reset_idelay_Ctrl_cdc_to),
        .Q(reset_idelay_Ctrl_cdc_to1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \idelayctrl_gen_us.reset_idelay_Ctrl_cdc_to_reg 
       (.C(idelay_ref_clk),
        .CE(1'b1),
        .D(reset_idelay_Ctrl),
        .Q(reset_idelay_Ctrl_cdc_to),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h04FF)) 
    p0_val0_carry__0_i_1
       (.I0(Q[21]),
        .I1(Q[22]),
        .I2(Q[23]),
        .I3(p0_val0_carry__0_0),
        .O(\data_out_reg[21]_0 [3]));
  LUT5 #(
    .INIT(32'h00B0BBBB)) 
    p0_val0_carry__0_i_2
       (.I0(Q[20]),
        .I1(p0_val0_carry__0_0),
        .I2(Q[18]),
        .I3(Q[19]),
        .I4(p0_val0_carry__0),
        .O(\data_out_reg[21]_0 [2]));
  LUT5 #(
    .INIT(32'h07770077)) 
    p0_val0_carry__0_i_3
       (.I0(p2_val0_carry__0),
        .I1(Q[15]),
        .I2(Q[17]),
        .I3(p0_val0_carry__0),
        .I4(Q[16]),
        .O(\data_out_reg[21]_0 [1]));
  LUT4 #(
    .INIT(16'h40FF)) 
    p0_val0_carry__0_i_4
       (.I0(Q[13]),
        .I1(Q[12]),
        .I2(Q[14]),
        .I3(p2_val0_carry__0),
        .O(\data_out_reg[21]_0 [0]));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    p0_val0_carry__1_i_2
       (.I0(Q[32]),
        .I1(\deskew_enable_gen.p3_val_reg[0] ),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\data_out_reg[32]_3 [2]));
  LUT5 #(
    .INIT(32'h07770077)) 
    p0_val0_carry__1_i_3
       (.I0(\deskew_enable_gen.p1_val_reg[0] ),
        .I1(Q[27]),
        .I2(Q[29]),
        .I3(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I4(Q[28]),
        .O(\data_out_reg[32]_3 [1]));
  LUT4 #(
    .INIT(16'h08FF)) 
    p0_val0_carry__1_i_4
       (.I0(Q[26]),
        .I1(Q[24]),
        .I2(Q[25]),
        .I3(\deskew_enable_gen.p1_val_reg[0] ),
        .O(\data_out_reg[32]_3 [0]));
  LUT4 #(
    .INIT(16'h5575)) 
    p0_val0_carry_i_1
       (.I0(p1_val0_carry_1),
        .I1(Q[11]),
        .I2(Q[10]),
        .I3(Q[9]),
        .O(\data_out_reg[11]_0 [3]));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    p0_val0_carry_i_2
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(p0_val0_carry[1]),
        .I4(p0_val0_carry_0),
        .I5(p0_val0_carry[0]),
        .O(\data_out_reg[11]_0 [2]));
  LUT5 #(
    .INIT(32'h07770077)) 
    p0_val0_carry_i_3
       (.I0(p1_val0_carry),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(p1_val0_carry_0),
        .I4(Q[4]),
        .O(\data_out_reg[11]_0 [1]));
  LUT4 #(
    .INIT(16'h40FF)) 
    p0_val0_carry_i_4
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(p1_val0_carry),
        .O(\data_out_reg[11]_0 [0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    p1_val0_carry__0_i_1
       (.I0(Q[22]),
        .I1(Q[23]),
        .I2(Q[21]),
        .I3(p0_val0_carry__0_0),
        .O(\data_out_reg[22]_1 [3]));
  LUT5 #(
    .INIT(32'h00707777)) 
    p1_val0_carry__0_i_2
       (.I0(p0_val0_carry__0_0),
        .I1(Q[20]),
        .I2(Q[18]),
        .I3(Q[19]),
        .I4(p0_val0_carry__0),
        .O(\data_out_reg[22]_1 [2]));
  LUT5 #(
    .INIT(32'h00737373)) 
    p1_val0_carry__0_i_3
       (.I0(Q[16]),
        .I1(p0_val0_carry__0),
        .I2(Q[17]),
        .I3(Q[15]),
        .I4(p2_val0_carry__0),
        .O(\data_out_reg[22]_1 [1]));
  LUT4 #(
    .INIT(16'h40FF)) 
    p1_val0_carry__0_i_4
       (.I0(Q[12]),
        .I1(Q[14]),
        .I2(Q[13]),
        .I3(p2_val0_carry__0),
        .O(\data_out_reg[22]_1 [0]));
  LUT5 #(
    .INIT(32'h00B0BBBB)) 
    p1_val0_carry__1_i_2
       (.I0(\deskew_enable_gen.p3_val_reg[0] ),
        .I1(Q[32]),
        .I2(Q[30]),
        .I3(Q[31]),
        .I4(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\data_out_reg[32]_2 [2]));
  LUT5 #(
    .INIT(32'h00737373)) 
    p1_val0_carry__1_i_3
       (.I0(Q[28]),
        .I1(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I2(Q[29]),
        .I3(Q[27]),
        .I4(\deskew_enable_gen.p1_val_reg[0] ),
        .O(\data_out_reg[32]_2 [1]));
  LUT4 #(
    .INIT(16'h7333)) 
    p1_val0_carry__1_i_4
       (.I0(Q[24]),
        .I1(\deskew_enable_gen.p1_val_reg[0] ),
        .I2(Q[25]),
        .I3(Q[26]),
        .O(\data_out_reg[32]_2 [0]));
  LUT4 #(
    .INIT(16'h5D55)) 
    p1_val0_carry_i_1
       (.I0(p1_val0_carry_1),
        .I1(Q[9]),
        .I2(Q[11]),
        .I3(Q[10]),
        .O(\data_out_reg[9]_1 [3]));
  LUT6 #(
    .INIT(64'hFF0CFFFF55FFFFFF)) 
    p1_val0_carry_i_2
       (.I0(Q[8]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(p0_val0_carry[1]),
        .I4(p0_val0_carry_0),
        .I5(p0_val0_carry[0]),
        .O(\data_out_reg[9]_1 [2]));
  LUT5 #(
    .INIT(32'h00737373)) 
    p1_val0_carry_i_3
       (.I0(Q[4]),
        .I1(p1_val0_carry_0),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(p1_val0_carry),
        .O(\data_out_reg[9]_1 [1]));
  LUT4 #(
    .INIT(16'h40FF)) 
    p1_val0_carry_i_4
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(p1_val0_carry),
        .O(\data_out_reg[9]_1 [0]));
  LUT4 #(
    .INIT(16'h04FF)) 
    p2_val0_carry__0_i_1
       (.I0(Q[21]),
        .I1(Q[23]),
        .I2(Q[22]),
        .I3(p0_val0_carry__0_0),
        .O(\data_out_reg[21]_1 [3]));
  LUT5 #(
    .INIT(32'h5D005D5D)) 
    p2_val0_carry__0_i_2
       (.I0(p0_val0_carry__0),
        .I1(Q[19]),
        .I2(Q[18]),
        .I3(Q[20]),
        .I4(p0_val0_carry__0_0),
        .O(\data_out_reg[21]_1 [2]));
  LUT5 #(
    .INIT(32'h0DDD00DD)) 
    p2_val0_carry__0_i_3
       (.I0(p2_val0_carry__0),
        .I1(Q[15]),
        .I2(Q[17]),
        .I3(p0_val0_carry__0),
        .I4(Q[16]),
        .O(\data_out_reg[21]_1 [1]));
  LUT4 #(
    .INIT(16'h10FF)) 
    p2_val0_carry__0_i_4
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[12]),
        .I3(p2_val0_carry__0),
        .O(\data_out_reg[21]_1 [0]));
  LUT5 #(
    .INIT(32'h00E0EEEE)) 
    p2_val0_carry__1_i_2
       (.I0(Q[32]),
        .I1(\deskew_enable_gen.p3_val_reg[0] ),
        .I2(Q[31]),
        .I3(Q[30]),
        .I4(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .O(\data_out_reg[32]_1 [2]));
  LUT5 #(
    .INIT(32'h0DDD00DD)) 
    p2_val0_carry__1_i_3
       (.I0(\deskew_enable_gen.p1_val_reg[0] ),
        .I1(Q[27]),
        .I2(Q[29]),
        .I3(\deskew_enable_gen.p3_val_reg[0]_0 ),
        .I4(Q[28]),
        .O(\data_out_reg[32]_1 [1]));
  LUT4 #(
    .INIT(16'h04FF)) 
    p2_val0_carry__1_i_4
       (.I0(Q[26]),
        .I1(Q[24]),
        .I2(Q[25]),
        .I3(\deskew_enable_gen.p1_val_reg[0] ),
        .O(\data_out_reg[32]_1 [0]));
  LUT4 #(
    .INIT(16'h5575)) 
    p2_val0_carry_i_1
       (.I0(p1_val0_carry_1),
        .I1(Q[10]),
        .I2(Q[11]),
        .I3(Q[9]),
        .O(\data_out_reg[10]_0 [3]));
  LUT6 #(
    .INIT(64'hFF0CFFFFAAFFFFFF)) 
    p2_val0_carry_i_2
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(p0_val0_carry[1]),
        .I4(p0_val0_carry_0),
        .I5(p0_val0_carry[0]),
        .O(\data_out_reg[10]_0 [2]));
  LUT5 #(
    .INIT(32'h0DDD00DD)) 
    p2_val0_carry_i_3
       (.I0(p1_val0_carry),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(p1_val0_carry_0),
        .I4(Q[4]),
        .O(\data_out_reg[10]_0 [1]));
  LUT4 #(
    .INIT(16'h10FF)) 
    p2_val0_carry_i_4
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(p1_val0_carry),
        .O(\data_out_reg[10]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT3 #(
    .INIT(8'h07)) 
    reset_iddr_i_1__0
       (.I0(current_state[1]),
        .I1(current_state[0]),
        .I2(current_state[2]),
        .O(reset_iddr_int));
  FDSE reset_iddr_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(reset_iddr_int),
        .Q(reset_iddr),
        .S(axi_chip2chip_clk_gen_inst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h1)) 
    reset_idelay_i_1
       (.I0(current_state[1]),
        .I1(current_state[2]),
        .O(reset_idelay_i_1_n_0));
  FDSE reset_idelay_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(reset_idelay_i_1_n_0),
        .Q(reset_idelay),
        .S(axi_chip2chip_clk_gen_inst_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[0].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[0]),
        .O(p_16_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[10].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[10]),
        .O(p_6_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[11].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[11]),
        .O(p_5_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[12].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[12]),
        .O(p_4_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[13].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[13]),
        .O(p_3_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[14].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[14]),
        .O(p_2_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[15].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[15]),
        .O(p_1_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[16].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[16]),
        .O(p_0_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[1].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[1]),
        .O(p_15_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[2].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[2]),
        .O(p_14_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[3].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[3]),
        .O(p_13_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[4].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[4]),
        .O(p_12_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[5].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[5]),
        .O(p_11_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[6].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[6]),
        .O(p_10_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[7].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[7]),
        .O(p_9_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[8].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[8]),
        .O(p_8_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_input_gen.signle_end_in[9].IBUF_inst 
       (.I(axi_c2c_selio_rx_data_in[9]),
        .O(p_7_out));
  LUT2 #(
    .INIT(4'h8)) 
    tx_phy_ready_i_2
       (.I0(channel_up),
        .I1(p_0_in),
        .O(\sio_slav_calib_fsm.master_ack_reg ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sio_output
   (axi_c2c_selio_tx_diff_clk_out_p,
    axi_c2c_selio_tx_diff_clk_out_n,
    axi_c2c_selio_tx_data_out,
    clk_ph_out,
    \axi_c2c_selio_tx_data_out[16] ,
    SR);
  output axi_c2c_selio_tx_diff_clk_out_p;
  output axi_c2c_selio_tx_diff_clk_out_n;
  output [16:0]axi_c2c_selio_tx_data_out;
  input clk_ph_out;
  input [33:0]\axi_c2c_selio_tx_data_out[16] ;
  input [0:0]SR;

  wire [0:0]SR;
  wire [16:0]axi_c2c_selio_tx_data_out;
  wire [33:0]\axi_c2c_selio_tx_data_out[16] ;
  wire axi_c2c_selio_tx_diff_clk_out_n;
  wire axi_c2c_selio_tx_diff_clk_out_p;
  wire clk_out_oddr;
  wire clk_ph_out;
  wire [1:0]count_4;
  wire \count_4[0]_i_1_n_0 ;
  wire \count_4[1]_i_1_n_0 ;
  wire p_0_out;
  wire p_10_out;
  wire p_11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_15_out;
  wire p_16_out;
  wire p_1_out;
  wire p_2_out;
  wire p_3_out;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out;
  wire p_7_out;
  wire p_8_out;
  wire p_9_out;
  wire reset_iddr;
  wire reset_iddr_i_1_n_0;
  wire \NLW_ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[15].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[16].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst_S_UNCONNECTED ;
  wire \NLW_gen_oddr.oddr_clk_out_inst_S_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \count_4[0]_i_1 
       (.I0(count_4[1]),
        .I1(count_4[0]),
        .O(\count_4[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \count_4[1]_i_1 
       (.I0(count_4[0]),
        .I1(count_4[1]),
        .O(\count_4[1]_i_1_n_0 ));
  FDRE \count_4_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\count_4[0]_i_1_n_0 ),
        .Q(count_4[0]),
        .R(SR));
  FDRE \count_4_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\count_4[1]_i_1_n_0 ),
        .Q(count_4[1]),
        .R(SR));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [0]),
        .D2(\axi_c2c_selio_tx_data_out[16] [1]),
        .Q(p_16_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[0].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [20]),
        .D2(\axi_c2c_selio_tx_data_out[16] [21]),
        .Q(p_6_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[10].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [22]),
        .D2(\axi_c2c_selio_tx_data_out[16] [23]),
        .Q(p_5_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[11].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [24]),
        .D2(\axi_c2c_selio_tx_data_out[16] [25]),
        .Q(p_4_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[12].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [26]),
        .D2(\axi_c2c_selio_tx_data_out[16] [27]),
        .Q(p_3_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[13].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [28]),
        .D2(\axi_c2c_selio_tx_data_out[16] [29]),
        .Q(p_2_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[14].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[15].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [30]),
        .D2(\axi_c2c_selio_tx_data_out[16] [31]),
        .Q(p_1_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[15].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[16].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [32]),
        .D2(\axi_c2c_selio_tx_data_out[16] [33]),
        .Q(p_0_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[16].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [2]),
        .D2(\axi_c2c_selio_tx_data_out[16] [3]),
        .Q(p_15_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[1].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [4]),
        .D2(\axi_c2c_selio_tx_data_out[16] [5]),
        .Q(p_14_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[2].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [6]),
        .D2(\axi_c2c_selio_tx_data_out[16] [7]),
        .Q(p_13_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[3].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [8]),
        .D2(\axi_c2c_selio_tx_data_out[16] [9]),
        .Q(p_12_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[4].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [10]),
        .D2(\axi_c2c_selio_tx_data_out[16] [11]),
        .Q(p_11_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[5].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [12]),
        .D2(\axi_c2c_selio_tx_data_out[16] [13]),
        .Q(p_10_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[6].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [14]),
        .D2(\axi_c2c_selio_tx_data_out[16] [15]),
        .Q(p_9_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[7].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [16]),
        .D2(\axi_c2c_selio_tx_data_out[16] [17]),
        .Q(p_8_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[8].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(\axi_c2c_selio_tx_data_out[16] [18]),
        .D2(\axi_c2c_selio_tx_data_out[16] [19]),
        .Q(p_7_out),
        .R(reset_iddr),
        .S(\NLW_ddr_output_gen.output_ddr_pins[9].gen_oddr.oddr_inst_S_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    \diff_clk_out_gen.clk_obufds_inst 
       (.I(clk_out_oddr),
        .O(axi_c2c_selio_tx_diff_clk_out_p),
        .OB(axi_c2c_selio_tx_diff_clk_out_n));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* __SRVAL = "FALSE" *) 
  ODDR #(
    .DDR_CLK_EDGE("SAME_EDGE"),
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .SRTYPE("ASYNC")) 
    \gen_oddr.oddr_clk_out_inst 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D1(1'b1),
        .D2(1'b0),
        .Q(clk_out_oddr),
        .R(reset_iddr),
        .S(\NLW_gen_oddr.oddr_clk_out_inst_S_UNCONNECTED ));
  LUT4 #(
    .INIT(16'hFF2A)) 
    reset_iddr_i_1
       (.I0(reset_iddr),
        .I1(count_4[0]),
        .I2(count_4[1]),
        .I3(SR),
        .O(reset_iddr_i_1_n_0));
  FDRE reset_iddr_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(reset_iddr_i_1_n_0),
        .Q(reset_iddr),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[0].obuf_inst 
       (.I(p_16_out),
        .O(axi_c2c_selio_tx_data_out[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[10].obuf_inst 
       (.I(p_6_out),
        .O(axi_c2c_selio_tx_data_out[10]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[11].obuf_inst 
       (.I(p_5_out),
        .O(axi_c2c_selio_tx_data_out[11]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[12].obuf_inst 
       (.I(p_4_out),
        .O(axi_c2c_selio_tx_data_out[12]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[13].obuf_inst 
       (.I(p_3_out),
        .O(axi_c2c_selio_tx_data_out[13]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[14].obuf_inst 
       (.I(p_2_out),
        .O(axi_c2c_selio_tx_data_out[14]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[15].obuf_inst 
       (.I(p_1_out),
        .O(axi_c2c_selio_tx_data_out[15]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[16].obuf_inst 
       (.I(p_0_out),
        .O(axi_c2c_selio_tx_data_out[16]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[1].obuf_inst 
       (.I(p_15_out),
        .O(axi_c2c_selio_tx_data_out[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[2].obuf_inst 
       (.I(p_14_out),
        .O(axi_c2c_selio_tx_data_out[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[3].obuf_inst 
       (.I(p_13_out),
        .O(axi_c2c_selio_tx_data_out[3]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[4].obuf_inst 
       (.I(p_12_out),
        .O(axi_c2c_selio_tx_data_out[4]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[5].obuf_inst 
       (.I(p_11_out),
        .O(axi_c2c_selio_tx_data_out[5]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[6].obuf_inst 
       (.I(p_10_out),
        .O(axi_c2c_selio_tx_data_out[6]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[7].obuf_inst 
       (.I(p_9_out),
        .O(axi_c2c_selio_tx_data_out[7]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[8].obuf_inst 
       (.I(p_8_out),
        .O(axi_c2c_selio_tx_data_out[8]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUF #(
    .IOSTANDARD("DEFAULT")) 
    \single_end_out_gen.single_ended_buf_gen[9].obuf_inst 
       (.I(p_7_out),
        .O(axi_c2c_selio_tx_data_out[9]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_slave
   (dout,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    axi_lite_rx_valid,
    AR,
    \calib_intr_gen.intr_flop_reg ,
    tx_ch0_valid,
    \calib_intr_gen.intr_flop_reg_0 ,
    rd_en,
    m_axi_rready,
    m_axi_bready,
    m_axi_awvalid,
    m_axi_arvalid,
    m_axi_wvalid,
    axi_c2c_m2s_intr_out,
    Q,
    \sio_io_stage.tdm_user_data_flop_reg[33]_0 ,
    axi_c2c_s2m_intr_in,
    clk_ph_out,
    m_aclk,
    din,
    \gen_rd_b.doutb_reg_reg_pipe_4_reg ,
    rx_user_reset,
    \calib_intr_gen.send_ch0_reg ,
    \calib_intr_gen.send_calib_reg ,
    \rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg_0 ,
    rx_phy_ready,
    \calib_intr_gen.send_intr_reg ,
    tx_phy_ctrl,
    empty,
    \calib_intr_gen.tx_ch0_data_reg[3] ,
    tx_phy_ready,
    m_aresetn,
    m_axi_rvalid,
    m_axi_bvalid,
    m_axi_awready,
    m_axi_arready,
    m_axi_wready,
    E,
    \calib_intr_gen.tx_ch0_data_reg[4] ,
    D,
    \calib_intr_gen.tx_ch0_data_reg[19] ,
    \calib_intr_gen.tx_ch0_data_reg[18] ,
    \calib_intr_gen.tx_ch0_data_reg[17] ,
    \calib_intr_gen.tx_ch0_data_reg[16] ,
    \calib_intr_gen.tx_ch0_data_reg[15] ,
    \calib_intr_gen.tx_ch0_data_reg[14] ,
    \calib_intr_gen.tx_ch0_data_reg[13] ,
    \calib_intr_gen.tx_ch0_data_reg[12] ,
    \calib_intr_gen.tx_ch0_data_reg[11] ,
    \calib_intr_gen.tx_ch0_data_reg[10] ,
    \calib_intr_gen.tx_ch0_data_reg[9] ,
    \calib_intr_gen.tx_ch0_data_reg[8] ,
    \calib_intr_gen.tx_ch0_data_reg[7] ,
    \calib_intr_gen.tx_ch0_data_reg[6] ,
    \calib_intr_gen.tx_ch0_data_reg[5] ,
    \calib_intr_gen.tx_ch0_data_reg[4]_0 ,
    SR,
    data_out);
  output [55:0]dout;
  output [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  output [37:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output axi_lite_rx_valid;
  output [0:0]AR;
  output \calib_intr_gen.intr_flop_reg ;
  output tx_ch0_valid;
  output \calib_intr_gen.intr_flop_reg_0 ;
  output rd_en;
  output m_axi_rready;
  output m_axi_bready;
  output m_axi_awvalid;
  output m_axi_arvalid;
  output m_axi_wvalid;
  output [3:0]axi_c2c_m2s_intr_out;
  output [19:0]Q;
  output [33:0]\sio_io_stage.tdm_user_data_flop_reg[33]_0 ;
  input [3:0]axi_c2c_s2m_intr_in;
  input clk_ph_out;
  input m_aclk;
  input [46:0]din;
  input [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  input rx_user_reset;
  input \calib_intr_gen.send_ch0_reg ;
  input \calib_intr_gen.send_calib_reg ;
  input \rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg_0 ;
  input rx_phy_ready;
  input \calib_intr_gen.send_intr_reg ;
  input [1:0]tx_phy_ctrl;
  input empty;
  input [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  input tx_phy_ready;
  input m_aresetn;
  input m_axi_rvalid;
  input m_axi_bvalid;
  input m_axi_awready;
  input m_axi_arready;
  input m_axi_wready;
  input [0:0]E;
  input \calib_intr_gen.tx_ch0_data_reg[4] ;
  input [0:0]D;
  input \calib_intr_gen.tx_ch0_data_reg[19] ;
  input \calib_intr_gen.tx_ch0_data_reg[18] ;
  input \calib_intr_gen.tx_ch0_data_reg[17] ;
  input \calib_intr_gen.tx_ch0_data_reg[16] ;
  input \calib_intr_gen.tx_ch0_data_reg[15] ;
  input \calib_intr_gen.tx_ch0_data_reg[14] ;
  input \calib_intr_gen.tx_ch0_data_reg[13] ;
  input \calib_intr_gen.tx_ch0_data_reg[12] ;
  input \calib_intr_gen.tx_ch0_data_reg[11] ;
  input \calib_intr_gen.tx_ch0_data_reg[10] ;
  input \calib_intr_gen.tx_ch0_data_reg[9] ;
  input \calib_intr_gen.tx_ch0_data_reg[8] ;
  input \calib_intr_gen.tx_ch0_data_reg[7] ;
  input \calib_intr_gen.tx_ch0_data_reg[6] ;
  input \calib_intr_gen.tx_ch0_data_reg[5] ;
  input \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  input [0:0]SR;
  input [33:0]data_out;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire [19:0]Q;
  wire [0:0]SR;
  wire ar_ch_data_valid;
  wire aw_ch_data_valid;
  wire aw_fifo_reset;
  wire aw_fifo_reset_axi_clk_slv;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire \axi_chip2chip_async_fifo_inst/prog_full_int ;
  wire \axi_chip2chip_async_fifo_inst/prog_full_int_1 ;
  wire \axi_chip2chip_async_fifo_inst/prog_full_int_4 ;
  wire \axi_chip2chip_async_fifo_inst/wr_rst_busy ;
  wire \axi_chip2chip_async_fifo_inst/wr_rst_busy_0 ;
  wire \axi_chip2chip_async_fifo_inst/wr_rst_busy_3 ;
  wire axi_chip2chip_ch0_ctrl_inst_n_10;
  wire axi_chip2chip_ch0_ctrl_inst_n_11;
  wire axi_chip2chip_ch0_ctrl_inst_n_12;
  wire axi_chip2chip_ch0_ctrl_inst_n_13;
  wire axi_chip2chip_ch0_ctrl_inst_n_14;
  wire axi_chip2chip_ch0_ctrl_inst_n_15;
  wire axi_chip2chip_ch0_ctrl_inst_n_16;
  wire axi_chip2chip_ch0_ctrl_inst_n_17;
  wire axi_chip2chip_ch0_ctrl_inst_n_18;
  wire axi_chip2chip_ch0_ctrl_inst_n_19;
  wire axi_chip2chip_ch0_ctrl_inst_n_20;
  wire axi_chip2chip_ch0_ctrl_inst_n_21;
  wire axi_chip2chip_ch0_ctrl_inst_n_22;
  wire axi_chip2chip_ch0_ctrl_inst_n_23;
  wire axi_chip2chip_ch0_ctrl_inst_n_24;
  wire axi_chip2chip_ch0_ctrl_inst_n_25;
  wire axi_chip2chip_ch0_ctrl_inst_n_27;
  wire axi_chip2chip_ch0_ctrl_inst_n_28;
  wire axi_chip2chip_ch0_ctrl_inst_n_29;
  wire axi_chip2chip_ch0_ctrl_inst_n_30;
  wire axi_chip2chip_ch0_ctrl_inst_n_31;
  wire axi_chip2chip_ch0_ctrl_inst_n_32;
  wire axi_chip2chip_ch0_ctrl_inst_n_33;
  wire axi_chip2chip_ch0_ctrl_inst_n_34;
  wire axi_chip2chip_ch0_ctrl_inst_n_35;
  wire axi_chip2chip_ch0_ctrl_inst_n_36;
  wire axi_chip2chip_ch0_ctrl_inst_n_37;
  wire axi_chip2chip_ch0_ctrl_inst_n_38;
  wire axi_chip2chip_ch0_ctrl_inst_n_39;
  wire axi_chip2chip_ch0_ctrl_inst_n_40;
  wire axi_chip2chip_decoder_inst_n_32;
  wire axi_chip2chip_r_fifo_inst_n_31;
  wire axi_chip2chip_r_fifo_inst_n_32;
  wire axi_chip2chip_r_fifo_inst_n_33;
  wire axi_chip2chip_r_fifo_inst_n_34;
  wire axi_chip2chip_r_fifo_inst_n_35;
  wire axi_chip2chip_r_fifo_inst_n_36;
  wire axi_chip2chip_r_fifo_inst_n_37;
  wire axi_chip2chip_r_fifo_inst_n_38;
  wire axi_chip2chip_r_fifo_inst_n_39;
  wire axi_chip2chip_r_fifo_inst_n_40;
  wire axi_chip2chip_r_fifo_inst_n_41;
  wire \axi_chip2chip_unpacker_inst/p_0_in ;
  wire \axi_lite_rx_gen.axi_lite_rx_data_valid ;
  wire axi_lite_rx_valid;
  wire [13:0]br_ch_data;
  wire br_ch_fc;
  wire \calib_intr_gen.intr_flop_reg ;
  wire \calib_intr_gen.intr_flop_reg_0 ;
  wire \calib_intr_gen.send_calib_reg ;
  wire \calib_intr_gen.send_ch0_reg ;
  wire \calib_intr_gen.send_intr_reg ;
  wire \calib_intr_gen.tx_ch0_data_reg[10] ;
  wire \calib_intr_gen.tx_ch0_data_reg[11] ;
  wire \calib_intr_gen.tx_ch0_data_reg[12] ;
  wire \calib_intr_gen.tx_ch0_data_reg[13] ;
  wire \calib_intr_gen.tx_ch0_data_reg[14] ;
  wire \calib_intr_gen.tx_ch0_data_reg[15] ;
  wire \calib_intr_gen.tx_ch0_data_reg[16] ;
  wire \calib_intr_gen.tx_ch0_data_reg[17] ;
  wire \calib_intr_gen.tx_ch0_data_reg[18] ;
  wire \calib_intr_gen.tx_ch0_data_reg[19] ;
  wire [3:0]\calib_intr_gen.tx_ch0_data_reg[3] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4] ;
  wire \calib_intr_gen.tx_ch0_data_reg[4]_0 ;
  wire \calib_intr_gen.tx_ch0_data_reg[5] ;
  wire \calib_intr_gen.tx_ch0_data_reg[6] ;
  wire \calib_intr_gen.tx_ch0_data_reg[7] ;
  wire \calib_intr_gen.tx_ch0_data_reg[8] ;
  wire \calib_intr_gen.tx_ch0_data_reg[9] ;
  wire [3:0]calib_pattern;
  wire clk_ph_out;
  wire [33:0]data_out;
  wire [46:0]din;
  wire [55:0]dout;
  wire empty;
  wire fifo_empty;
  wire fifo_empty_2;
  wire fifo_re;
  wire [13:0]\gen_rd_b.doutb_reg_reg_pipe_4_reg ;
  wire [55:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire [37:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire int_ch0_ready;
  wire int_ch1_ready;
  wire int_ch1_ready5__1;
  wire int_ch2_ready;
  wire m_aclk;
  wire m_aresetn;
  wire m_axi_arready;
  wire m_axi_arvalid;
  wire m_axi_awready;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire m_axi_bvalid;
  wire m_axi_rready;
  wire m_axi_rvalid;
  wire m_axi_wready;
  wire m_axi_wvalid;
  wire p_12_in;
  wire rd_en;
  wire \rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg_0 ;
  wire [27:0]rx_dec_data;
  wire rx_intr_data;
  wire rx_phy_ready;
  wire [4:0]rx_user_data_flop;
  wire rx_user_data_valid_flop;
  wire rx_user_reset;
  wire send_ch0;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[10] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[11] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[12] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[13] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[14] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[15] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[16] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[17] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[18] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[19] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[20] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[21] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[22] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[23] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[24] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[25] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[26] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[27] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[28] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[29] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[2] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[30] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[31] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[32] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[33] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[3] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[5] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[6] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[7] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[8] ;
  wire \sio_io_stage.rx_user_data_flop_reg_n_0_[9] ;
  wire [33:0]\sio_io_stage.tdm_user_data_flop_reg[33]_0 ;
  wire [33:0]tdm_data_out;
  wire [32:32]tdm_data_out47_out;
  wire [26:26]tx_ch0_tdm_data;
  wire tx_ch0_valid;
  wire [1:0]tx_phy_ctrl;
  wire tx_phy_ready;
  wire [37:0]unpack_data_in;
  wire wd_ch_data_valid;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo axi_chip2chip_ar_fifo_inst
       (.Q(rx_dec_data),
        .ar_ch_data_valid(ar_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .m_aclk(m_aclk),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int ),
        .rst(aw_fifo_reset),
        .rx_user_reset(rx_user_reset),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__xdcDup__1 axi_chip2chip_aw_fifo_inst
       (.Q(rx_dec_data),
        .aw_ch_data_valid(aw_ch_data_valid),
        .clk_ph_out(clk_ph_out),
        .dout(dout),
        .m_aclk(m_aclk),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int_1 ),
        .rst(aw_fifo_reset),
        .rx_user_reset(rx_user_reset),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_b_fifo axi_chip2chip_b_fifo_inst
       (.Q(br_ch_fc),
        .clk_ph_out(clk_ph_out),
        .dout(br_ch_data),
        .empty(fifo_empty),
        .\gen_rd_b.doutb_reg_reg_pipe_4_reg (\gen_rd_b.doutb_reg_reg_pipe_4_reg ),
        .int_ch1_ready5__1(int_ch1_ready5__1),
        .m_aclk(m_aclk),
        .m_axi_bready(m_axi_bready),
        .m_axi_bvalid(m_axi_bvalid),
        .out(aw_fifo_reset_axi_clk_slv),
        .rd_en(fifo_re),
        .tx_phy_ready(tx_phy_ready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_ch0_ctrl axi_chip2chip_ch0_ctrl_inst
       (.AR(AR),
        .D({axi_chip2chip_ch0_ctrl_inst_n_11,axi_chip2chip_ch0_ctrl_inst_n_12,axi_chip2chip_ch0_ctrl_inst_n_13,axi_chip2chip_ch0_ctrl_inst_n_14,axi_chip2chip_ch0_ctrl_inst_n_15,axi_chip2chip_ch0_ctrl_inst_n_16,axi_chip2chip_ch0_ctrl_inst_n_17,axi_chip2chip_ch0_ctrl_inst_n_18,axi_chip2chip_ch0_ctrl_inst_n_19,axi_chip2chip_ch0_ctrl_inst_n_20,axi_chip2chip_ch0_ctrl_inst_n_21,axi_chip2chip_ch0_ctrl_inst_n_22,axi_chip2chip_ch0_ctrl_inst_n_23,axi_chip2chip_ch0_ctrl_inst_n_24,axi_chip2chip_ch0_ctrl_inst_n_25}),
        .E(E),
        .Q(calib_pattern),
        .SR(SR),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_0 (Q),
        .\axi_lite_rx_gen.axi_lite_rx_data_reg[19]_1 (rx_dec_data[19:0]),
        .\axi_lite_rx_gen.axi_lite_rx_data_valid (\axi_lite_rx_gen.axi_lite_rx_data_valid ),
        .axi_lite_rx_valid(axi_lite_rx_valid),
        .\calib_intr_gen.cal_nibble_reg[0]_0 (axi_chip2chip_ch0_ctrl_inst_n_29),
        .\calib_intr_gen.cal_nibble_reg[0]_1 (axi_chip2chip_ch0_ctrl_inst_n_33),
        .\calib_intr_gen.cal_nibble_reg[0]_2 (axi_chip2chip_ch0_ctrl_inst_n_37),
        .\calib_intr_gen.cal_nibble_reg[1]_0 (axi_chip2chip_ch0_ctrl_inst_n_30),
        .\calib_intr_gen.cal_nibble_reg[1]_1 (axi_chip2chip_ch0_ctrl_inst_n_34),
        .\calib_intr_gen.cal_nibble_reg[1]_2 (axi_chip2chip_ch0_ctrl_inst_n_38),
        .\calib_intr_gen.cal_nibble_reg[2]_0 (axi_chip2chip_ch0_ctrl_inst_n_27),
        .\calib_intr_gen.cal_nibble_reg[2]_1 (axi_chip2chip_ch0_ctrl_inst_n_31),
        .\calib_intr_gen.cal_nibble_reg[2]_2 (axi_chip2chip_ch0_ctrl_inst_n_35),
        .\calib_intr_gen.cal_nibble_reg[2]_3 (axi_chip2chip_ch0_ctrl_inst_n_39),
        .\calib_intr_gen.cal_nibble_reg[3]_0 (axi_chip2chip_ch0_ctrl_inst_n_28),
        .\calib_intr_gen.cal_nibble_reg[3]_1 (axi_chip2chip_ch0_ctrl_inst_n_32),
        .\calib_intr_gen.cal_nibble_reg[3]_2 (axi_chip2chip_ch0_ctrl_inst_n_36),
        .\calib_intr_gen.cal_nibble_reg[3]_3 (axi_chip2chip_ch0_ctrl_inst_n_40),
        .\calib_intr_gen.intr_flop_reg_0 (\calib_intr_gen.intr_flop_reg ),
        .\calib_intr_gen.intr_flop_reg_1 (\calib_intr_gen.intr_flop_reg_0 ),
        .\calib_intr_gen.send_calib_reg_0 (\calib_intr_gen.send_calib_reg ),
        .\calib_intr_gen.send_ch0_reg_0 (axi_chip2chip_ch0_ctrl_inst_n_10),
        .\calib_intr_gen.send_ch0_reg_1 (\calib_intr_gen.send_ch0_reg ),
        .\calib_intr_gen.send_intr_reg_0 (\calib_intr_gen.send_intr_reg ),
        .\calib_intr_gen.tx_ch0_data_reg[10]_0 (\calib_intr_gen.tx_ch0_data_reg[10] ),
        .\calib_intr_gen.tx_ch0_data_reg[11]_0 (\calib_intr_gen.tx_ch0_data_reg[11] ),
        .\calib_intr_gen.tx_ch0_data_reg[12]_0 (\calib_intr_gen.tx_ch0_data_reg[12] ),
        .\calib_intr_gen.tx_ch0_data_reg[13]_0 (\calib_intr_gen.tx_ch0_data_reg[13] ),
        .\calib_intr_gen.tx_ch0_data_reg[14]_0 (\calib_intr_gen.tx_ch0_data_reg[14] ),
        .\calib_intr_gen.tx_ch0_data_reg[15]_0 (\calib_intr_gen.tx_ch0_data_reg[15] ),
        .\calib_intr_gen.tx_ch0_data_reg[16]_0 (\calib_intr_gen.tx_ch0_data_reg[16] ),
        .\calib_intr_gen.tx_ch0_data_reg[17]_0 (\calib_intr_gen.tx_ch0_data_reg[17] ),
        .\calib_intr_gen.tx_ch0_data_reg[18]_0 (\calib_intr_gen.tx_ch0_data_reg[18] ),
        .\calib_intr_gen.tx_ch0_data_reg[19]_0 (\calib_intr_gen.tx_ch0_data_reg[19] ),
        .\calib_intr_gen.tx_ch0_data_reg[26]_0 (tx_ch0_tdm_data),
        .\calib_intr_gen.tx_ch0_data_reg[26]_1 (D),
        .\calib_intr_gen.tx_ch0_data_reg[3]_0 (\calib_intr_gen.tx_ch0_data_reg[3] ),
        .\calib_intr_gen.tx_ch0_data_reg[4]_0 (\calib_intr_gen.tx_ch0_data_reg[4] ),
        .\calib_intr_gen.tx_ch0_data_reg[4]_1 (\calib_intr_gen.tx_ch0_data_reg[4]_0 ),
        .\calib_intr_gen.tx_ch0_data_reg[5]_0 (\calib_intr_gen.tx_ch0_data_reg[5] ),
        .\calib_intr_gen.tx_ch0_data_reg[6]_0 (\calib_intr_gen.tx_ch0_data_reg[6] ),
        .\calib_intr_gen.tx_ch0_data_reg[7]_0 (\calib_intr_gen.tx_ch0_data_reg[7] ),
        .\calib_intr_gen.tx_ch0_data_reg[8]_0 (\calib_intr_gen.tx_ch0_data_reg[8] ),
        .\calib_intr_gen.tx_ch0_data_reg[9]_0 (\calib_intr_gen.tx_ch0_data_reg[9] ),
        .\calib_intr_gen.tx_ch0_valid_reg_0 (tx_ch0_valid),
        .clk_ph_out(clk_ph_out),
        .dout(unpack_data_in[37:24]),
        .empty(empty),
        .int_ch0_ready(int_ch0_ready),
        .int_ch1_ready(int_ch1_ready),
        .int_ch2_ready(int_ch2_ready),
        .\intr_data_reg[3]_0 (rx_intr_data),
        .m_aclk(m_aclk),
        .m_aresetn(m_aresetn),
        .p_0_in(\axi_chip2chip_unpacker_inst/p_0_in ),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int_4 ),
        .rd_en(rd_en),
        .rx_user_reset(rx_user_reset),
        .send_ch0(send_ch0),
        .\tdm_data_out_reg[20] (axi_chip2chip_r_fifo_inst_n_35),
        .\tdm_data_out_reg[21] (axi_chip2chip_r_fifo_inst_n_37),
        .\tdm_data_out_reg[22] (axi_chip2chip_r_fifo_inst_n_38),
        .\tdm_data_out_reg[23] (axi_chip2chip_r_fifo_inst_n_39),
        .\tdm_data_out_reg[24] (axi_chip2chip_r_fifo_inst_n_40),
        .\tdm_data_out_reg[25] (axi_chip2chip_r_fifo_inst_n_41),
        .\tdm_data_out_reg[2] (\axi_chip2chip_async_fifo_inst/wr_rst_busy_0 ),
        .\tdm_data_out_reg[2]_0 (\axi_chip2chip_async_fifo_inst/prog_full_int_1 ),
        .\tdm_data_out_reg[3] (\axi_chip2chip_async_fifo_inst/wr_rst_busy ),
        .\tdm_data_out_reg[3]_0 (\axi_chip2chip_async_fifo_inst/prog_full_int ),
        .tx_phy_ctrl(tx_phy_ctrl),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy_3 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_decoder axi_chip2chip_decoder_inst
       (.Q({\sio_io_stage.rx_user_data_flop_reg_n_0_[33] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[32] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[31] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[30] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[29] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[28] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[27] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[26] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[25] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[24] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[23] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[22] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[21] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[20] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[19] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[18] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[17] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[16] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[15] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[14] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[13] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[12] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[11] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[10] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[9] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[8] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[7] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[6] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[5] ,rx_user_data_flop[4],\sio_io_stage.rx_user_data_flop_reg_n_0_[3] ,\sio_io_stage.rx_user_data_flop_reg_n_0_[2] ,rx_user_data_flop[1:0]}),
        .ar_ch_data_valid(ar_ch_data_valid),
        .aw_ch_data_valid(aw_ch_data_valid),
        .\axi_lite_rx_gen.axi_lite_rx_data_valid (\axi_lite_rx_gen.axi_lite_rx_data_valid ),
        .clk_ph_out(clk_ph_out),
        .\ctrl_info_reg[1]_0 ({br_ch_fc,axi_chip2chip_decoder_inst_n_32}),
        .\data_out_reg[19]_0 (rx_intr_data),
        .\data_out_reg[27]_0 (rx_dec_data),
        .rx_phy_ready(rx_phy_ready),
        .rx_user_data_valid_flop(rx_user_data_valid_flop),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__parameterized1 axi_chip2chip_r_fifo_inst
       (.D({axi_chip2chip_r_fifo_inst_n_31,axi_chip2chip_r_fifo_inst_n_32,axi_chip2chip_r_fifo_inst_n_33,axi_chip2chip_r_fifo_inst_n_34}),
        .Q(calib_pattern),
        .clk_ph_out(clk_ph_out),
        .din(din),
        .dout({unpack_data_in[37:24],unpack_data_in[13:0]}),
        .empty(fifo_empty_2),
        .\gen_wr_a.gen_word_narrow.mem_reg (axi_chip2chip_r_fifo_inst_n_35),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (axi_chip2chip_r_fifo_inst_n_37),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (axi_chip2chip_r_fifo_inst_n_38),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (axi_chip2chip_r_fifo_inst_n_39),
        .\gen_wr_a.gen_word_narrow.mem_reg_3 (axi_chip2chip_r_fifo_inst_n_40),
        .\gen_wr_a.gen_word_narrow.mem_reg_4 (axi_chip2chip_r_fifo_inst_n_41),
        .int_ch1_ready(int_ch1_ready),
        .int_ch2_ready_reg(axi_chip2chip_decoder_inst_n_32),
        .m_aclk(m_aclk),
        .m_axi_rready(m_axi_rready),
        .m_axi_rvalid(m_axi_rvalid),
        .\mux_by_2.data_count_reg[0] (axi_chip2chip_r_fifo_inst_n_36),
        .out(aw_fifo_reset_axi_clk_slv),
        .p_0_in(\axi_chip2chip_unpacker_inst/p_0_in ),
        .p_12_in(p_12_in),
        .rx_user_reset(rx_user_reset),
        .tdm_data_out47_out(tdm_data_out47_out),
        .tx_phy_ready(tx_phy_ready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized0 axi_chip2chip_sync_cell_slv_rst_axi_clk_xpm
       (.m_aclk(m_aclk),
        .out(aw_fifo_reset_axi_clk_slv),
        .rst(aw_fifo_reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_tdm axi_chip2chip_tdm_inst
       (.D({axi_chip2chip_ch0_ctrl_inst_n_11,axi_chip2chip_ch0_ctrl_inst_n_12,axi_chip2chip_ch0_ctrl_inst_n_13,axi_chip2chip_ch0_ctrl_inst_n_14,axi_chip2chip_r_fifo_inst_n_31,axi_chip2chip_r_fifo_inst_n_32,axi_chip2chip_r_fifo_inst_n_33,axi_chip2chip_r_fifo_inst_n_34,axi_chip2chip_ch0_ctrl_inst_n_15,axi_chip2chip_ch0_ctrl_inst_n_16,axi_chip2chip_ch0_ctrl_inst_n_17,axi_chip2chip_ch0_ctrl_inst_n_18,axi_chip2chip_ch0_ctrl_inst_n_19,axi_chip2chip_ch0_ctrl_inst_n_20,axi_chip2chip_ch0_ctrl_inst_n_21,axi_chip2chip_ch0_ctrl_inst_n_22,axi_chip2chip_ch0_ctrl_inst_n_23,axi_chip2chip_ch0_ctrl_inst_n_24,axi_chip2chip_ch0_ctrl_inst_n_25}),
        .Q(calib_pattern[1]),
        .clk_ph_out(clk_ph_out),
        .dout(br_ch_data),
        .empty(fifo_empty_2),
        .int_ch0_ready(int_ch0_ready),
        .int_ch0_ready_reg_0(axi_chip2chip_ch0_ctrl_inst_n_10),
        .int_ch1_ready(int_ch1_ready),
        .int_ch1_ready5__1(int_ch1_ready5__1),
        .int_ch2_ready(int_ch2_ready),
        .p_12_in(p_12_in),
        .rd_en(fifo_re),
        .rx_user_reset(rx_user_reset),
        .send_ch0(send_ch0),
        .tdm_data_out47_out(tdm_data_out47_out),
        .\tdm_data_out_reg[10]_0 (axi_chip2chip_ch0_ctrl_inst_n_31),
        .\tdm_data_out_reg[11]_0 (axi_chip2chip_ch0_ctrl_inst_n_32),
        .\tdm_data_out_reg[12]_0 (axi_chip2chip_ch0_ctrl_inst_n_33),
        .\tdm_data_out_reg[13]_0 (axi_chip2chip_ch0_ctrl_inst_n_34),
        .\tdm_data_out_reg[14]_0 (axi_chip2chip_ch0_ctrl_inst_n_35),
        .\tdm_data_out_reg[15]_0 (axi_chip2chip_ch0_ctrl_inst_n_36),
        .\tdm_data_out_reg[16]_0 (axi_chip2chip_ch0_ctrl_inst_n_37),
        .\tdm_data_out_reg[17]_0 (axi_chip2chip_ch0_ctrl_inst_n_38),
        .\tdm_data_out_reg[18]_0 (axi_chip2chip_ch0_ctrl_inst_n_39),
        .\tdm_data_out_reg[19]_0 (unpack_data_in[13:0]),
        .\tdm_data_out_reg[19]_1 (axi_chip2chip_ch0_ctrl_inst_n_40),
        .\tdm_data_out_reg[29]_0 (tx_ch0_tdm_data),
        .\tdm_data_out_reg[33]_0 (tdm_data_out),
        .\tdm_data_out_reg[5]_0 (fifo_empty),
        .\tdm_data_out_reg[6]_0 (axi_chip2chip_ch0_ctrl_inst_n_27),
        .\tdm_data_out_reg[6]_1 (axi_chip2chip_r_fifo_inst_n_36),
        .\tdm_data_out_reg[7]_0 (axi_chip2chip_ch0_ctrl_inst_n_28),
        .\tdm_data_out_reg[8]_0 (axi_chip2chip_ch0_ctrl_inst_n_29),
        .\tdm_data_out_reg[9]_0 (axi_chip2chip_ch0_ctrl_inst_n_30),
        .tx_ch0_valid(tx_ch0_valid),
        .tx_phy_ready(tx_phy_ready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_awr_fifo__parameterized0 axi_chip2chip_w_fifo_inst
       (.clk_ph_out(clk_ph_out),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .m_aclk(m_aclk),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .\mux_by_2.pack_reg0_reg[18] (rx_dec_data[18:0]),
        .prog_full(\axi_chip2chip_async_fifo_inst/prog_full_int_4 ),
        .rst(aw_fifo_reset),
        .rx_user_reset(rx_user_reset),
        .wd_ch_data_valid(wd_ch_data_valid),
        .wr_rst_busy(\axi_chip2chip_async_fifo_inst/wr_rst_busy_3 ));
  FDPE \rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\rst_cntrl_lnk_hndlr_dsbl.aw_fifo_reset_reg_0 ),
        .PRE(AR),
        .Q(aw_fifo_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[0]),
        .Q(rx_user_data_flop[0]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[10]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[10] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[11]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[11] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[12]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[12] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[13]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[13] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[14]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[14] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[15]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[15] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[16]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[16] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[17]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[17] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[18]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[18] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[19]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[19] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[1]),
        .Q(rx_user_data_flop[1]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[20]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[20] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[21]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[21] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[22]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[22] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[23]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[23] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[24]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[24] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[25]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[25] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[26]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[26] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[27]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[27] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[28]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[28] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[29]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[29] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[2]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[2] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[30]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[30] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[31]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[31] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[32]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[32] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[33]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[33] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[3]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[3] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[4]),
        .Q(rx_user_data_flop[4]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[5]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[5] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[6]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[6] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[7]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[7] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[8]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[8] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_flop_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(data_out[9]),
        .Q(\sio_io_stage.rx_user_data_flop_reg_n_0_[9] ),
        .R(rx_user_reset));
  FDRE \sio_io_stage.rx_user_data_valid_flop_reg 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(1'b1),
        .Q(rx_user_data_valid_flop),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[0]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [0]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[10]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [10]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[11]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [11]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[12]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [12]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[13]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [13]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[14]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [14]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[15]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [15]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[16]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [16]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[17]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [17]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[18]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [18]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[19]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [19]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[1]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [1]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[20]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [20]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[21]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [21]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[22]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [22]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[23]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [23]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[24]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [24]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[25]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [25]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[26]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [26]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[27]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [27]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[28]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [28]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[29]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [29]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[2]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [2]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[30]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [30]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[31]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [31]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[32]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [32]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[33]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [33]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[3]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [3]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[4]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [4]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[5]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [5]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[6]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [6]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[7]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [7]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[8]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [8]),
        .R(rx_user_reset));
  FDRE \sio_io_stage.tdm_user_data_flop_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(tdm_data_out[9]),
        .Q(\sio_io_stage.tdm_user_data_flop_reg[33]_0 [9]),
        .R(rx_user_reset));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell
   (D,
    axi_c2c_s2m_intr_in,
    clk_ph_out);
  output [3:0]D;
  input [3:0]axi_c2c_s2m_intr_in;
  input clk_ph_out;

  wire [3:0]axi_c2c_s2m_intr_in;
  wire clk_ph_out;
  (* async_reg = "true" *) wire [3:0]sync_flop_0;
  (* async_reg = "true" *) wire [3:0]sync_flop_1;
  (* async_reg = "true" *) wire [3:0]sync_flop_2;
  (* async_reg = "true" *) wire [3:0]sync_flop_3;
  (* async_reg = "true" *) wire [3:0]sync_flop_4;
  (* async_reg = "true" *) wire [3:0]sync_flop_5;
  (* async_reg = "true" *) wire [3:0]sync_flop_6;

  assign D[3:0] = sync_flop_2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[2]),
        .Q(sync_flop_0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(axi_c2c_s2m_intr_in[3]),
        .Q(sync_flop_0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[2]),
        .Q(sync_flop_1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_0[3]),
        .Q(sync_flop_1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[2]),
        .Q(sync_flop_2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_1[3]),
        .Q(sync_flop_2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[2]),
        .Q(sync_flop_3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_2[3]),
        .Q(sync_flop_3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[2]),
        .Q(sync_flop_4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_3[3]),
        .Q(sync_flop_4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_4[0]),
        .Q(sync_flop_5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_4[1]),
        .Q(sync_flop_5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_4[2]),
        .Q(sync_flop_5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_4[3]),
        .Q(sync_flop_5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[2]),
        .Q(sync_flop_6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sync_flop_5[3]),
        .Q(sync_flop_6[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell_16
   (D,
    Q,
    m_aclk);
  output [3:0]D;
  input [3:0]Q;
  input m_aclk;

  wire [3:0]Q;
  wire m_aclk;
  (* async_reg = "true" *) wire [3:0]sync_flop_0;
  (* async_reg = "true" *) wire [3:0]sync_flop_1;
  (* async_reg = "true" *) wire [3:0]sync_flop_2;
  (* async_reg = "true" *) wire [3:0]sync_flop_3;
  (* async_reg = "true" *) wire [3:0]sync_flop_4;
  (* async_reg = "true" *) wire [3:0]sync_flop_5;
  (* async_reg = "true" *) wire [3:0]sync_flop_6;

  assign D[3:0] = sync_flop_2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(sync_flop_0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(sync_flop_0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[2]),
        .Q(sync_flop_1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[3]),
        .Q(sync_flop_1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[2]),
        .Q(sync_flop_2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[3]),
        .Q(sync_flop_2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[2]),
        .Q(sync_flop_3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[3]),
        .Q(sync_flop_3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[2]),
        .Q(sync_flop_4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[3]),
        .Q(sync_flop_4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[0]),
        .Q(sync_flop_5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[1]),
        .Q(sync_flop_5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[2]),
        .Q(sync_flop_5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[3]),
        .Q(sync_flop_5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[2] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[2]),
        .Q(sync_flop_6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[3] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[3]),
        .Q(sync_flop_6[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized0
   (out,
    rst,
    m_aclk);
  output out;
  input rst;
  input m_aclk;

  wire m_aclk;
  wire rst;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign out = sync_flop_1;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(rst),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized0_47
   (out,
    rst,
    s_axi_lite_aclk);
  output out;
  input rst;
  input s_axi_lite_aclk;

  wire rst;
  wire s_axi_lite_aclk;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign out = sync_flop_1;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(rst),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(s_axi_lite_aclk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_sync_cell__parameterized1
   (D,
    \sync_flop_2_reg[1]_0 ,
    in0,
    m_aclk);
  output [1:0]D;
  output \sync_flop_2_reg[1]_0 ;
  input [1:0]in0;
  input m_aclk;

  wire [1:0]in0;
  wire m_aclk;
  (* async_reg = "true" *) wire [1:0]sync_flop_0;
  (* async_reg = "true" *) wire [1:0]sync_flop_1;
  (* async_reg = "true" *) wire [1:0]sync_flop_2;
  wire \sync_flop_2_reg[1]_0 ;
  (* async_reg = "true" *) wire [1:0]sync_flop_3;
  (* async_reg = "true" *) wire [1:0]sync_flop_4;
  (* async_reg = "true" *) wire [1:0]sync_flop_5;
  (* async_reg = "true" *) wire [1:0]sync_flop_6;

  assign D[1:0] = sync_flop_2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(in0[0]),
        .Q(sync_flop_0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(in0[1]),
        .Q(sync_flop_0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[0]),
        .Q(sync_flop_1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_0[1]),
        .Q(sync_flop_1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[0]),
        .Q(sync_flop_2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_1[1]),
        .Q(sync_flop_2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[0]),
        .Q(sync_flop_3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_2[1]),
        .Q(sync_flop_3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[0]),
        .Q(sync_flop_4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_3[1]),
        .Q(sync_flop_4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[0]),
        .Q(sync_flop_5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_4[1]),
        .Q(sync_flop_5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[0]),
        .Q(sync_flop_6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[1] 
       (.C(m_aclk),
        .CE(1'b1),
        .D(sync_flop_5[1]),
        .Q(sync_flop_6[1]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_reset_flop[7]_i_1 
       (.I0(sync_flop_2[1]),
        .O(\sync_flop_2_reg[1]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_tdm
   (int_ch0_ready,
    int_ch1_ready,
    int_ch2_ready,
    rd_en,
    tdm_data_out47_out,
    \tdm_data_out_reg[33]_0 ,
    rx_user_reset,
    int_ch0_ready_reg_0,
    clk_ph_out,
    empty,
    Q,
    tx_ch0_valid,
    \tdm_data_out_reg[5]_0 ,
    send_ch0,
    p_12_in,
    int_ch1_ready5__1,
    tx_phy_ready,
    \tdm_data_out_reg[29]_0 ,
    \tdm_data_out_reg[6]_0 ,
    dout,
    \tdm_data_out_reg[6]_1 ,
    \tdm_data_out_reg[19]_0 ,
    \tdm_data_out_reg[7]_0 ,
    \tdm_data_out_reg[8]_0 ,
    \tdm_data_out_reg[9]_0 ,
    \tdm_data_out_reg[10]_0 ,
    \tdm_data_out_reg[11]_0 ,
    \tdm_data_out_reg[12]_0 ,
    \tdm_data_out_reg[13]_0 ,
    \tdm_data_out_reg[14]_0 ,
    \tdm_data_out_reg[15]_0 ,
    \tdm_data_out_reg[16]_0 ,
    \tdm_data_out_reg[17]_0 ,
    \tdm_data_out_reg[18]_0 ,
    \tdm_data_out_reg[19]_1 ,
    D);
  output int_ch0_ready;
  output int_ch1_ready;
  output int_ch2_ready;
  output rd_en;
  output [0:0]tdm_data_out47_out;
  output [33:0]\tdm_data_out_reg[33]_0 ;
  input rx_user_reset;
  input int_ch0_ready_reg_0;
  input clk_ph_out;
  input empty;
  input [0:0]Q;
  input tx_ch0_valid;
  input \tdm_data_out_reg[5]_0 ;
  input send_ch0;
  input p_12_in;
  input int_ch1_ready5__1;
  input tx_phy_ready;
  input [0:0]\tdm_data_out_reg[29]_0 ;
  input \tdm_data_out_reg[6]_0 ;
  input [13:0]dout;
  input \tdm_data_out_reg[6]_1 ;
  input [13:0]\tdm_data_out_reg[19]_0 ;
  input \tdm_data_out_reg[7]_0 ;
  input \tdm_data_out_reg[8]_0 ;
  input \tdm_data_out_reg[9]_0 ;
  input \tdm_data_out_reg[10]_0 ;
  input \tdm_data_out_reg[11]_0 ;
  input \tdm_data_out_reg[12]_0 ;
  input \tdm_data_out_reg[13]_0 ;
  input \tdm_data_out_reg[14]_0 ;
  input \tdm_data_out_reg[15]_0 ;
  input \tdm_data_out_reg[16]_0 ;
  input \tdm_data_out_reg[17]_0 ;
  input \tdm_data_out_reg[18]_0 ;
  input \tdm_data_out_reg[19]_1 ;
  input [18:0]D;

  wire [18:0]D;
  wire [0:0]Q;
  wire clk_ph_out;
  wire [13:0]dout;
  wire empty;
  wire int_ch0_ready;
  wire int_ch0_ready_reg_0;
  wire int_ch1_ready;
  wire int_ch1_ready5__1;
  wire int_ch1_ready_i_4_n_0;
  wire int_ch2_ready;
  wire next_int_ch1_ready;
  wire next_int_ch2_ready;
  wire p_12_in;
  wire p_1_in;
  wire rd_en;
  wire rx_user_reset;
  wire [3:0]sel0;
  wire send_ch0;
  wire [3:0]slot_count;
  wire [0:0]tdm_data_out47_out;
  wire \tdm_data_out[10]_i_1_n_0 ;
  wire \tdm_data_out[11]_i_1_n_0 ;
  wire \tdm_data_out[12]_i_1_n_0 ;
  wire \tdm_data_out[13]_i_1_n_0 ;
  wire \tdm_data_out[14]_i_1_n_0 ;
  wire \tdm_data_out[15]_i_1_n_0 ;
  wire \tdm_data_out[16]_i_1_n_0 ;
  wire \tdm_data_out[17]_i_1_n_0 ;
  wire \tdm_data_out[18]_i_1_n_0 ;
  wire \tdm_data_out[19]_i_1_n_0 ;
  wire \tdm_data_out[5]_i_1_n_0 ;
  wire \tdm_data_out[6]_i_1_n_0 ;
  wire \tdm_data_out[7]_i_1_n_0 ;
  wire \tdm_data_out[8]_i_1_n_0 ;
  wire \tdm_data_out[9]_i_1_n_0 ;
  wire \tdm_data_out_reg[10]_0 ;
  wire \tdm_data_out_reg[11]_0 ;
  wire \tdm_data_out_reg[12]_0 ;
  wire \tdm_data_out_reg[13]_0 ;
  wire \tdm_data_out_reg[14]_0 ;
  wire \tdm_data_out_reg[15]_0 ;
  wire \tdm_data_out_reg[16]_0 ;
  wire \tdm_data_out_reg[17]_0 ;
  wire \tdm_data_out_reg[18]_0 ;
  wire [13:0]\tdm_data_out_reg[19]_0 ;
  wire \tdm_data_out_reg[19]_1 ;
  wire [0:0]\tdm_data_out_reg[29]_0 ;
  wire [33:0]\tdm_data_out_reg[33]_0 ;
  wire \tdm_data_out_reg[5]_0 ;
  wire \tdm_data_out_reg[6]_0 ;
  wire \tdm_data_out_reg[6]_1 ;
  wire \tdm_data_out_reg[7]_0 ;
  wire \tdm_data_out_reg[8]_0 ;
  wire \tdm_data_out_reg[9]_0 ;
  wire tx_ch0_valid;
  wire tx_phy_ready;

  FDRE int_ch0_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(int_ch0_ready_reg_0),
        .Q(int_ch0_ready),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'h2200F200)) 
    int_ch1_ready_i_1
       (.I0(p_1_in),
        .I1(int_ch1_ready5__1),
        .I2(int_ch1_ready_i_4_n_0),
        .I3(p_12_in),
        .I4(send_ch0),
        .O(next_int_ch1_ready));
  LUT6 #(
    .INIT(64'h0001004000100100)) 
    int_ch1_ready_i_2
       (.I0(send_ch0),
        .I1(slot_count[1]),
        .I2(slot_count[0]),
        .I3(slot_count[2]),
        .I4(slot_count[3]),
        .I5(tx_phy_ready),
        .O(p_1_in));
  LUT6 #(
    .INIT(64'hFFC75555FF555353)) 
    int_ch1_ready_i_4
       (.I0(slot_count[3]),
        .I1(slot_count[2]),
        .I2(slot_count[1]),
        .I3(send_ch0),
        .I4(tx_phy_ready),
        .I5(slot_count[0]),
        .O(int_ch1_ready_i_4_n_0));
  FDRE int_ch1_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch1_ready),
        .Q(int_ch1_ready),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'hFF020000)) 
    int_ch2_ready_i_1
       (.I0(int_ch1_ready_i_4_n_0),
        .I1(send_ch0),
        .I2(p_12_in),
        .I3(p_1_in),
        .I4(int_ch1_ready5__1),
        .O(next_int_ch2_ready));
  FDRE int_ch2_ready_reg
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(next_int_ch2_ready),
        .Q(int_ch2_ready),
        .R(rx_user_reset));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h26)) 
    \slot_count[0]_i_1 
       (.I0(slot_count[0]),
        .I1(tx_phy_ready),
        .I2(send_ch0),
        .O(sel0[0]));
  LUT6 #(
    .INIT(64'h5555000055FFA200)) 
    \slot_count[1]_i_1 
       (.I0(tx_phy_ready),
        .I1(slot_count[3]),
        .I2(slot_count[2]),
        .I3(slot_count[0]),
        .I4(slot_count[1]),
        .I5(send_ch0),
        .O(sel0[1]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT5 #(
    .INIT(32'h44446CCC)) 
    \slot_count[2]_i_1 
       (.I0(tx_phy_ready),
        .I1(slot_count[2]),
        .I2(slot_count[0]),
        .I3(slot_count[1]),
        .I4(send_ch0),
        .O(sel0[2]));
  LUT6 #(
    .INIT(64'h55557FDF00008000)) 
    \slot_count[3]_i_1 
       (.I0(tx_phy_ready),
        .I1(slot_count[2]),
        .I2(slot_count[0]),
        .I3(slot_count[1]),
        .I4(send_ch0),
        .I5(slot_count[3]),
        .O(sel0[3]));
  FDRE \slot_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sel0[0]),
        .Q(slot_count[0]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sel0[1]),
        .Q(slot_count[1]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sel0[2]),
        .Q(slot_count[2]),
        .R(rx_user_reset));
  FDRE \slot_count_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(sel0[3]),
        .Q(slot_count[3]),
        .R(rx_user_reset));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[10]_i_1 
       (.I0(\tdm_data_out_reg[10]_0 ),
        .I1(dout[4]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [4]),
        .O(\tdm_data_out[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[11]_i_1 
       (.I0(\tdm_data_out_reg[11]_0 ),
        .I1(dout[5]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [5]),
        .O(\tdm_data_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[12]_i_1 
       (.I0(\tdm_data_out_reg[12]_0 ),
        .I1(dout[6]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [6]),
        .O(\tdm_data_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[13]_i_1 
       (.I0(\tdm_data_out_reg[13]_0 ),
        .I1(dout[7]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [7]),
        .O(\tdm_data_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[14]_i_1 
       (.I0(\tdm_data_out_reg[14]_0 ),
        .I1(dout[8]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [8]),
        .O(\tdm_data_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[15]_i_1 
       (.I0(\tdm_data_out_reg[15]_0 ),
        .I1(dout[9]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [9]),
        .O(\tdm_data_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[16]_i_1 
       (.I0(\tdm_data_out_reg[16]_0 ),
        .I1(dout[10]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [10]),
        .O(\tdm_data_out[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[17]_i_1 
       (.I0(\tdm_data_out_reg[17]_0 ),
        .I1(dout[11]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [11]),
        .O(\tdm_data_out[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[18]_i_1 
       (.I0(\tdm_data_out_reg[18]_0 ),
        .I1(dout[12]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [12]),
        .O(\tdm_data_out[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[19]_i_1 
       (.I0(\tdm_data_out_reg[19]_1 ),
        .I1(dout[13]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [13]),
        .O(\tdm_data_out[19]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \tdm_data_out[29]_i_4 
       (.I0(int_ch0_ready),
        .I1(\tdm_data_out_reg[29]_0 ),
        .O(tdm_data_out47_out));
  LUT6 #(
    .INIT(64'hFFFFFFBAFFBAFFBA)) 
    \tdm_data_out[5]_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(int_ch1_ready),
        .I3(Q),
        .I4(int_ch0_ready),
        .I5(tx_ch0_valid),
        .O(\tdm_data_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[6]_i_1 
       (.I0(\tdm_data_out_reg[6]_0 ),
        .I1(dout[0]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [0]),
        .O(\tdm_data_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[7]_i_1 
       (.I0(\tdm_data_out_reg[7]_0 ),
        .I1(dout[1]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [1]),
        .O(\tdm_data_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[8]_i_1 
       (.I0(\tdm_data_out_reg[8]_0 ),
        .I1(dout[2]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [2]),
        .O(\tdm_data_out[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \tdm_data_out[9]_i_1 
       (.I0(\tdm_data_out_reg[9]_0 ),
        .I1(dout[3]),
        .I2(int_ch2_ready),
        .I3(int_ch1_ready),
        .I4(\tdm_data_out_reg[6]_1 ),
        .I5(\tdm_data_out_reg[19]_0 [3]),
        .O(\tdm_data_out[9]_i_1_n_0 ));
  FDRE \tdm_data_out_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(\tdm_data_out_reg[33]_0 [0]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[10] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[10]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [10]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[11] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[11]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [11]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[12] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[12]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [12]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[13] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[13]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [13]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[14] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[14]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [14]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[15] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[15]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [15]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[16] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[16]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [16]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[17] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[17]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [17]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[18] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[18]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [18]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[19] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[19]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [19]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(\tdm_data_out_reg[33]_0 [1]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[20] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(\tdm_data_out_reg[33]_0 [20]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[21] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(\tdm_data_out_reg[33]_0 [21]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[22] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(\tdm_data_out_reg[33]_0 [22]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[23] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(\tdm_data_out_reg[33]_0 [23]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[24] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(\tdm_data_out_reg[33]_0 [24]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[25] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(\tdm_data_out_reg[33]_0 [25]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[26] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(\tdm_data_out_reg[33]_0 [26]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[27] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(\tdm_data_out_reg[33]_0 [27]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[28] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(\tdm_data_out_reg[33]_0 [28]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[29] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(\tdm_data_out_reg[33]_0 [29]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[2] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(\tdm_data_out_reg[33]_0 [2]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[30] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(\tdm_data_out_reg[33]_0 [30]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[31] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(\tdm_data_out_reg[33]_0 [31]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[32] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(\tdm_data_out_reg[33]_0 [32]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[33] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(\tdm_data_out_reg[33]_0 [33]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[3] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(\tdm_data_out_reg[33]_0 [3]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[4] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(\tdm_data_out_reg[33]_0 [4]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[5] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[5]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [5]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[6] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[6]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [6]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[7] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[7]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [7]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[8] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[8]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [8]),
        .R(rx_user_reset));
  FDRE \tdm_data_out_reg[9] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\tdm_data_out[9]_i_1_n_0 ),
        .Q(\tdm_data_out_reg[33]_0 [9]),
        .R(rx_user_reset));
  LUT2 #(
    .INIT(4'h2)) 
    xpm_fifo_async_inst_i_2__0
       (.I0(int_ch2_ready),
        .I1(\tdm_data_out_reg[5]_0 ),
        .O(rd_en));
endmodule

(* ORIG_REF_NAME = "axi_chip2chip_v5_0_6_unpacker" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_6_unpacker__parameterized1
   (D,
    \mux_by_2.data_count_reg[0]_0 ,
    \mux_by_2.data_count_reg[1]_0 ,
    dout,
    Q,
    tdm_data_out47_out,
    int_ch1_ready,
    empty,
    rx_user_reset,
    clk_ph_out);
  output [3:0]D;
  output \mux_by_2.data_count_reg[0]_0 ;
  output \mux_by_2.data_count_reg[1]_0 ;
  input [7:0]dout;
  input [3:0]Q;
  input [0:0]tdm_data_out47_out;
  input int_ch1_ready;
  input empty;
  input rx_user_reset;
  input clk_ph_out;

  wire [3:0]D;
  wire [3:0]Q;
  wire clk_ph_out;
  wire [7:0]dout;
  wire empty;
  wire int_ch1_ready;
  wire \mux_by_2.data_count[0]_i_1_n_0 ;
  wire \mux_by_2.data_count[1]_i_1_n_0 ;
  wire \mux_by_2.data_count_reg[0]_0 ;
  wire \mux_by_2.data_count_reg[1]_0 ;
  wire rx_user_reset;
  wire [0:0]tdm_data_out47_out;
  wire \tdm_data_out[29]_i_2_n_0 ;
  wire \tdm_data_out[29]_i_3_n_0 ;

  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[0]_i_1 
       (.I0(\mux_by_2.data_count_reg[1]_0 ),
        .I1(int_ch1_ready),
        .I2(empty),
        .I3(\mux_by_2.data_count_reg[0]_0 ),
        .O(\mux_by_2.data_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \mux_by_2.data_count[1]_i_1 
       (.I0(\mux_by_2.data_count_reg[0]_0 ),
        .I1(int_ch1_ready),
        .I2(empty),
        .I3(\mux_by_2.data_count_reg[1]_0 ),
        .O(\mux_by_2.data_count[1]_i_1_n_0 ));
  FDSE \mux_by_2.data_count_reg[0] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[0]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg[0]_0 ),
        .S(rx_user_reset));
  FDRE \mux_by_2.data_count_reg[1] 
       (.C(clk_ph_out),
        .CE(1'b1),
        .D(\mux_by_2.data_count[1]_i_1_n_0 ),
        .Q(\mux_by_2.data_count_reg[1]_0 ),
        .R(rx_user_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tdm_data_out[26]_i_1 
       (.I0(\tdm_data_out[29]_i_2_n_0 ),
        .I1(dout[0]),
        .I2(\tdm_data_out[29]_i_3_n_0 ),
        .I3(dout[4]),
        .I4(Q[2]),
        .I5(tdm_data_out47_out),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tdm_data_out[27]_i_1 
       (.I0(\tdm_data_out[29]_i_2_n_0 ),
        .I1(dout[1]),
        .I2(\tdm_data_out[29]_i_3_n_0 ),
        .I3(dout[5]),
        .I4(Q[3]),
        .I5(tdm_data_out47_out),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tdm_data_out[28]_i_1 
       (.I0(\tdm_data_out[29]_i_2_n_0 ),
        .I1(dout[2]),
        .I2(\tdm_data_out[29]_i_3_n_0 ),
        .I3(dout[6]),
        .I4(Q[0]),
        .I5(tdm_data_out47_out),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \tdm_data_out[29]_i_1 
       (.I0(\tdm_data_out[29]_i_2_n_0 ),
        .I1(dout[3]),
        .I2(\tdm_data_out[29]_i_3_n_0 ),
        .I3(dout[7]),
        .I4(Q[1]),
        .I5(tdm_data_out47_out),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tdm_data_out[29]_i_2 
       (.I0(\mux_by_2.data_count_reg[0]_0 ),
        .I1(int_ch1_ready),
        .O(\tdm_data_out[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tdm_data_out[29]_i_3 
       (.I0(\mux_by_2.data_count_reg[1]_0 ),
        .I1(int_ch1_ready),
        .O(\tdm_data_out[29]_i_3_n_0 ));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
